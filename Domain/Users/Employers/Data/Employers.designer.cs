#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Domain.Users.Employers.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	internal partial class EmployersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployerEntity(EmployerEntity instance);
    partial void UpdateEmployerEntity(EmployerEntity instance);
    partial void DeleteEmployerEntity(EmployerEntity instance);
    partial void InsertEmployerIndustryEntity(EmployerIndustryEntity instance);
    partial void UpdateEmployerIndustryEntity(EmployerIndustryEntity instance);
    partial void DeleteEmployerIndustryEntity(EmployerIndustryEntity instance);
    partial void InsertOrganisationalUnitEntity(OrganisationalUnitEntity instance);
    partial void UpdateOrganisationalUnitEntity(OrganisationalUnitEntity instance);
    partial void DeleteOrganisationalUnitEntity(OrganisationalUnitEntity instance);
    partial void InsertOrganisationEntity(OrganisationEntity instance);
    partial void UpdateOrganisationEntity(OrganisationEntity instance);
    partial void DeleteOrganisationEntity(OrganisationEntity instance);
    partial void InsertRegisteredUserEntity(RegisteredUserEntity instance);
    partial void UpdateRegisteredUserEntity(RegisteredUserEntity instance);
    partial void DeleteRegisteredUserEntity(RegisteredUserEntity instance);
    #endregion
		
		public EmployersDataContext() : 
				base(global::LinkMe.Domain.Users.Properties.Settings.Default.LinkMeConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public EmployersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<EmployerEntity> EmployerEntities
		{
			get
			{
				return this.GetTable<EmployerEntity>();
			}
		}
		
		internal System.Data.Linq.Table<EmployerIndustryEntity> EmployerIndustryEntities
		{
			get
			{
				return this.GetTable<EmployerIndustryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<OrganisationalUnitEntity> OrganisationalUnitEntities
		{
			get
			{
				return this.GetTable<OrganisationalUnitEntity>();
			}
		}
		
		internal System.Data.Linq.Table<OrganisationEntity> OrganisationEntities
		{
			get
			{
				return this.GetTable<OrganisationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RegisteredUserEntity> RegisteredUserEntities
		{
			get
			{
				return this.GetTable<RegisteredUserEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SplitGuids", IsComposable=true)]
		public IQueryable<SplitGuidsResult> SplitGuids([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string delimiter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string input)
		{
			return this.CreateMethodCallQuery<SplitGuidsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), delimiter, input);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.IsOrganisationDescendent", IsComposable=true)]
		public System.Nullable<bool> IsOrganisationDescendent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> parentId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> childId)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), parentId, childId).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOrganisationFullName", IsComposable=true)]
		public string GetOrganisationFullName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(1)")] System.Nullable<char> separator)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, separator).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetEffectiveOrgUnitContactDetailsId", IsComposable=true)]
		public System.Nullable<System.Guid> GetEffectiveOrgUnitContactDetailsId([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> orgUnitId)
		{
			return ((System.Nullable<System.Guid>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgUnitId).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	internal partial class EmployerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _contactPhoneNumber;
		
		private string _jobTitle;
		
		private byte _subRole;
		
		private System.Nullable<System.Guid> _ownerPartnerId;
		
		private System.Guid _organisationId;
		
		private EntitySet<EmployerIndustryEntity> _EmployerIndustryEntities;
		
		private EntityRef<OrganisationEntity> _OrganisationEntity;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncontactPhoneNumberChanging(string value);
    partial void OncontactPhoneNumberChanged();
    partial void OnjobTitleChanging(string value);
    partial void OnjobTitleChanged();
    partial void OnsubRoleChanging(byte value);
    partial void OnsubRoleChanged();
    partial void OnownerPartnerIdChanging(System.Nullable<System.Guid> value);
    partial void OnownerPartnerIdChanged();
    partial void OnorganisationIdChanging(System.Guid value);
    partial void OnorganisationIdChanged();
    #endregion
		
		public EmployerEntity()
		{
			this._EmployerIndustryEntities = new EntitySet<EmployerIndustryEntity>(new Action<EmployerIndustryEntity>(this.attach_EmployerIndustryEntities), new Action<EmployerIndustryEntity>(this.detach_EmployerIndustryEntities));
			this._OrganisationEntity = default(EntityRef<OrganisationEntity>);
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string contactPhoneNumber
		{
			get
			{
				return this._contactPhoneNumber;
			}
			set
			{
				if ((this._contactPhoneNumber != value))
				{
					this.OncontactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._contactPhoneNumber = value;
					this.SendPropertyChanged("contactPhoneNumber");
					this.OncontactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitle", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string jobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this.OnjobTitleChanging(value);
					this.SendPropertyChanging();
					this._jobTitle = value;
					this.SendPropertyChanged("jobTitle");
					this.OnjobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subRole", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte subRole
		{
			get
			{
				return this._subRole;
			}
			set
			{
				if ((this._subRole != value))
				{
					this.OnsubRoleChanging(value);
					this.SendPropertyChanging();
					this._subRole = value;
					this.SendPropertyChanged("subRole");
					this.OnsubRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerPartnerId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ownerPartnerId
		{
			get
			{
				return this._ownerPartnerId;
			}
			set
			{
				if ((this._ownerPartnerId != value))
				{
					this.OnownerPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._ownerPartnerId = value;
					this.SendPropertyChanged("ownerPartnerId");
					this.OnownerPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisationId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid organisationId
		{
			get
			{
				return this._organisationId;
			}
			set
			{
				if ((this._organisationId != value))
				{
					if (this._OrganisationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganisationIdChanging(value);
					this.SendPropertyChanging();
					this._organisationId = value;
					this.SendPropertyChanged("organisationId");
					this.OnorganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployerEntity_EmployerIndustryEntity", Storage="_EmployerIndustryEntities", ThisKey="id", OtherKey="employerId")]
		public EntitySet<EmployerIndustryEntity> EmployerIndustryEntities
		{
			get
			{
				return this._EmployerIndustryEntities;
			}
			set
			{
				this._EmployerIndustryEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_EmployerEntity", Storage="_OrganisationEntity", ThisKey="organisationId", OtherKey="id", IsForeignKey=true)]
		public OrganisationEntity OrganisationEntity
		{
			get
			{
				return this._OrganisationEntity.Entity;
			}
			set
			{
				OrganisationEntity previousValue = this._OrganisationEntity.Entity;
				if (((previousValue != value) 
							|| (this._OrganisationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganisationEntity.Entity = null;
						previousValue.EmployerEntities.Remove(this);
					}
					this._OrganisationEntity.Entity = value;
					if ((value != null))
					{
						value.EmployerEntities.Add(this);
						this._organisationId = value.id;
					}
					else
					{
						this._organisationId = default(System.Guid);
					}
					this.SendPropertyChanged("OrganisationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_EmployerEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.EmployerEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.EmployerEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployerIndustryEntities(EmployerIndustryEntity entity)
		{
			this.SendPropertyChanging();
			entity.EmployerEntity = this;
		}
		
		private void detach_EmployerIndustryEntities(EmployerIndustryEntity entity)
		{
			this.SendPropertyChanging();
			entity.EmployerEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployerIndustry")]
	internal partial class EmployerIndustryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _employerId;
		
		private System.Guid _industryId;
		
		private EntityRef<EmployerEntity> _EmployerEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemployerIdChanging(System.Guid value);
    partial void OnemployerIdChanged();
    partial void OnindustryIdChanging(System.Guid value);
    partial void OnindustryIdChanged();
    #endregion
		
		public EmployerIndustryEntity()
		{
			this._EmployerEntity = default(EntityRef<EmployerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid employerId
		{
			get
			{
				return this._employerId;
			}
			set
			{
				if ((this._employerId != value))
				{
					if (this._EmployerEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployerIdChanging(value);
					this.SendPropertyChanging();
					this._employerId = value;
					this.SendPropertyChanged("employerId");
					this.OnemployerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_industryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid industryId
		{
			get
			{
				return this._industryId;
			}
			set
			{
				if ((this._industryId != value))
				{
					this.OnindustryIdChanging(value);
					this.SendPropertyChanging();
					this._industryId = value;
					this.SendPropertyChanged("industryId");
					this.OnindustryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployerEntity_EmployerIndustryEntity", Storage="_EmployerEntity", ThisKey="employerId", OtherKey="id", IsForeignKey=true)]
		public EmployerEntity EmployerEntity
		{
			get
			{
				return this._EmployerEntity.Entity;
			}
			set
			{
				EmployerEntity previousValue = this._EmployerEntity.Entity;
				if (((previousValue != value) 
							|| (this._EmployerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployerEntity.Entity = null;
						previousValue.EmployerIndustryEntities.Remove(this);
					}
					this._EmployerEntity.Entity = value;
					if ((value != null))
					{
						value.EmployerIndustryEntities.Add(this);
						this._employerId = value.id;
					}
					else
					{
						this._employerId = default(System.Guid);
					}
					this.SendPropertyChanged("EmployerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganisationalUnit")]
	internal partial class OrganisationalUnitEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _parentId;
		
		private System.Guid _verifiedById;
		
		private System.Guid _accountManagerId;
		
		private System.Nullable<System.Guid> _primaryContactId;
		
		private EntityRef<OrganisationEntity> _OrganisationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnparentIdChanging(System.Nullable<System.Guid> value);
    partial void OnparentIdChanged();
    partial void OnverifiedByIdChanging(System.Guid value);
    partial void OnverifiedByIdChanged();
    partial void OnaccountManagerIdChanging(System.Guid value);
    partial void OnaccountManagerIdChanged();
    partial void OnprimaryContactIdChanging(System.Nullable<System.Guid> value);
    partial void OnprimaryContactIdChanged();
    #endregion
		
		public OrganisationalUnitEntity()
		{
			this._OrganisationEntity = default(EntityRef<OrganisationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._OrganisationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> parentId
		{
			get
			{
				return this._parentId;
			}
			set
			{
				if ((this._parentId != value))
				{
					this.OnparentIdChanging(value);
					this.SendPropertyChanging();
					this._parentId = value;
					this.SendPropertyChanged("parentId");
					this.OnparentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verifiedById", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid verifiedById
		{
			get
			{
				return this._verifiedById;
			}
			set
			{
				if ((this._verifiedById != value))
				{
					this.OnverifiedByIdChanging(value);
					this.SendPropertyChanging();
					this._verifiedById = value;
					this.SendPropertyChanged("verifiedById");
					this.OnverifiedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountManagerId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid accountManagerId
		{
			get
			{
				return this._accountManagerId;
			}
			set
			{
				if ((this._accountManagerId != value))
				{
					this.OnaccountManagerIdChanging(value);
					this.SendPropertyChanging();
					this._accountManagerId = value;
					this.SendPropertyChanged("accountManagerId");
					this.OnaccountManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryContactId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> primaryContactId
		{
			get
			{
				return this._primaryContactId;
			}
			set
			{
				if ((this._primaryContactId != value))
				{
					this.OnprimaryContactIdChanging(value);
					this.SendPropertyChanging();
					this._primaryContactId = value;
					this.SendPropertyChanged("primaryContactId");
					this.OnprimaryContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_OrganisationalUnitEntity", Storage="_OrganisationEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public OrganisationEntity OrganisationEntity
		{
			get
			{
				return this._OrganisationEntity.Entity;
			}
			set
			{
				OrganisationEntity previousValue = this._OrganisationEntity.Entity;
				if (((previousValue != value) 
							|| (this._OrganisationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganisationEntity.Entity = null;
						previousValue.OrganisationalUnitEntity = null;
					}
					this._OrganisationEntity.Entity = value;
					if ((value != null))
					{
						value.OrganisationalUnitEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("OrganisationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation")]
	internal partial class OrganisationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _displayName;
		
		private System.Nullable<System.Guid> _addressId;
		
		private EntitySet<EmployerEntity> _EmployerEntities;
		
		private EntityRef<OrganisationalUnitEntity> _OrganisationalUnitEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OnaddressIdChanging(System.Nullable<System.Guid> value);
    partial void OnaddressIdChanged();
    #endregion
		
		public OrganisationEntity()
		{
			this._EmployerEntities = new EntitySet<EmployerEntity>(new Action<EmployerEntity>(this.attach_EmployerEntities), new Action<EmployerEntity>(this.detach_EmployerEntities));
			this._OrganisationalUnitEntity = default(EntityRef<OrganisationalUnitEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_EmployerEntity", Storage="_EmployerEntities", ThisKey="id", OtherKey="organisationId")]
		public EntitySet<EmployerEntity> EmployerEntities
		{
			get
			{
				return this._EmployerEntities;
			}
			set
			{
				this._EmployerEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_OrganisationalUnitEntity", Storage="_OrganisationalUnitEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public OrganisationalUnitEntity OrganisationalUnitEntity
		{
			get
			{
				return this._OrganisationalUnitEntity.Entity;
			}
			set
			{
				OrganisationalUnitEntity previousValue = this._OrganisationalUnitEntity.Entity;
				if (((previousValue != value) 
							|| (this._OrganisationalUnitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganisationalUnitEntity.Entity = null;
						previousValue.OrganisationEntity = null;
					}
					this._OrganisationalUnitEntity.Entity = value;
					if ((value != null))
					{
						value.OrganisationEntity = this;
					}
					this.SendPropertyChanged("OrganisationalUnitEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployerEntities(EmployerEntity entity)
		{
			this.SendPropertyChanging();
			entity.OrganisationEntity = this;
		}
		
		private void detach_EmployerEntities(EmployerEntity entity)
		{
			this.SendPropertyChanging();
			entity.OrganisationEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegisteredUser")]
	internal partial class RegisteredUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _loginId;
		
		private System.DateTime _createdTime;
		
		private string _emailAddress;
		
		private string _firstName;
		
		private string _lastName;
		
		private short _flags;
		
		private string _passwordHash;
		
		private bool _emailAddressVerified;
		
		private string _secondaryEmailAddress;
		
		private System.Nullable<bool> _secondaryEmailAddressVerified;
		
		private EntityRef<EmployerEntity> _EmployerEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnloginIdChanging(string value);
    partial void OnloginIdChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnflagsChanging(short value);
    partial void OnflagsChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnemailAddressVerifiedChanging(bool value);
    partial void OnemailAddressVerifiedChanged();
    partial void OnsecondaryEmailAddressChanging(string value);
    partial void OnsecondaryEmailAddressChanged();
    partial void OnsecondaryEmailAddressVerifiedChanging(System.Nullable<bool> value);
    partial void OnsecondaryEmailAddressVerifiedChanged();
    #endregion
		
		public RegisteredUserEntity()
		{
			this._EmployerEntity = default(EntityRef<EmployerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginId", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string loginId
		{
			get
			{
				return this._loginId;
			}
			set
			{
				if ((this._loginId != value))
				{
					this.OnloginIdChanging(value);
					this.SendPropertyChanging();
					this._loginId = value;
					this.SendPropertyChanged("loginId");
					this.OnloginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddress", DbType="NVarChar(320) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="Char(24)", UpdateCheck=UpdateCheck.Never)]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddressVerified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool emailAddressVerified
		{
			get
			{
				return this._emailAddressVerified;
			}
			set
			{
				if ((this._emailAddressVerified != value))
				{
					this.OnemailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._emailAddressVerified = value;
					this.SendPropertyChanged("emailAddressVerified");
					this.OnemailAddressVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmailAddress", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryEmailAddress
		{
			get
			{
				return this._secondaryEmailAddress;
			}
			set
			{
				if ((this._secondaryEmailAddress != value))
				{
					this.OnsecondaryEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddress = value;
					this.SendPropertyChanged("secondaryEmailAddress");
					this.OnsecondaryEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmailAddressVerified", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> secondaryEmailAddressVerified
		{
			get
			{
				return this._secondaryEmailAddressVerified;
			}
			set
			{
				if ((this._secondaryEmailAddressVerified != value))
				{
					this.OnsecondaryEmailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddressVerified = value;
					this.SendPropertyChanged("secondaryEmailAddressVerified");
					this.OnsecondaryEmailAddressVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_EmployerEntity", Storage="_EmployerEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public EmployerEntity EmployerEntity
		{
			get
			{
				return this._EmployerEntity.Entity;
			}
			set
			{
				EmployerEntity previousValue = this._EmployerEntity.Entity;
				if (((previousValue != value) 
							|| (this._EmployerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployerEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._EmployerEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("EmployerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SplitGuidsResult
	{
		
		private System.Nullable<System.Guid> _value;
		
		public SplitGuidsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
