#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Domain.Users.Members.Communications.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class CommunicationsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCommunicationDefinitionSettingEntity(CommunicationDefinitionSettingEntity instance);
    partial void UpdateCommunicationDefinitionSettingEntity(CommunicationDefinitionSettingEntity instance);
    partial void DeleteCommunicationDefinitionSettingEntity(CommunicationDefinitionSettingEntity instance);
    partial void InsertCommunicationSettingEntity(CommunicationSettingEntity instance);
    partial void UpdateCommunicationSettingEntity(CommunicationSettingEntity instance);
    partial void DeleteCommunicationSettingEntity(CommunicationSettingEntity instance);
    partial void InsertCommunityMemberEntity(CommunityMemberEntity instance);
    partial void UpdateCommunityMemberEntity(CommunityMemberEntity instance);
    partial void DeleteCommunityMemberEntity(CommunityMemberEntity instance);
    partial void InsertRegisteredUserEntity(RegisteredUserEntity instance);
    partial void UpdateRegisteredUserEntity(RegisteredUserEntity instance);
    partial void DeleteRegisteredUserEntity(RegisteredUserEntity instance);
    partial void InsertCommunicationCategorySettingEntity(CommunicationCategorySettingEntity instance);
    partial void UpdateCommunicationCategorySettingEntity(CommunicationCategorySettingEntity instance);
    partial void DeleteCommunicationCategorySettingEntity(CommunicationCategorySettingEntity instance);
    partial void InsertCommunicationDefinitionEntity(CommunicationDefinitionEntity instance);
    partial void UpdateCommunicationDefinitionEntity(CommunicationDefinitionEntity instance);
    partial void DeleteCommunicationDefinitionEntity(CommunicationDefinitionEntity instance);
    partial void InsertCommunicationCategoryEntity(CommunicationCategoryEntity instance);
    partial void UpdateCommunicationCategoryEntity(CommunicationCategoryEntity instance);
    partial void DeleteCommunicationCategoryEntity(CommunicationCategoryEntity instance);
    partial void InsertMemberEntity(MemberEntity instance);
    partial void UpdateMemberEntity(MemberEntity instance);
    partial void DeleteMemberEntity(MemberEntity instance);
    #endregion
		
		public CommunicationsDataContext() : 
				base(global::LinkMe.Domain.Users.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CommunicationsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommunicationsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommunicationsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CommunicationsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<CommunicationDefinitionSettingEntity> CommunicationDefinitionSettingEntities
		{
			get
			{
				return this.GetTable<CommunicationDefinitionSettingEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunicationSettingEntity> CommunicationSettingEntities
		{
			get
			{
				return this.GetTable<CommunicationSettingEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunityMemberEntity> CommunityMemberEntities
		{
			get
			{
				return this.GetTable<CommunityMemberEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RegisteredUserEntity> RegisteredUserEntities
		{
			get
			{
				return this.GetTable<RegisteredUserEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunicationCategorySettingEntity> CommunicationCategorySettingEntities
		{
			get
			{
				return this.GetTable<CommunicationCategorySettingEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunicationDefinitionEntity> CommunicationDefinitionEntities
		{
			get
			{
				return this.GetTable<CommunicationDefinitionEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunicationCategoryEntity> CommunicationCategoryEntities
		{
			get
			{
				return this.GetTable<CommunicationCategoryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<MemberEntity> MemberEntities
		{
			get
			{
				return this.GetTable<MemberEntity>();
			}
		}
	}
	
	[Table(Name="dbo.CommunicationDefinitionSettings")]
	internal partial class CommunicationDefinitionSettingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _definitionId;
		
		private System.Guid _settingsId;
		
		private System.Nullable<System.DateTime> _lastSentTime;
		
		private EntityRef<CommunicationSettingEntity> _CommunicationSettingEntity;
		
		private EntityRef<CommunicationDefinitionEntity> _CommunicationDefinitionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndefinitionIdChanging(System.Guid value);
    partial void OndefinitionIdChanged();
    partial void OnsettingsIdChanging(System.Guid value);
    partial void OnsettingsIdChanged();
    partial void OnlastSentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastSentTimeChanged();
    #endregion
		
		public CommunicationDefinitionSettingEntity()
		{
			this._CommunicationSettingEntity = default(EntityRef<CommunicationSettingEntity>);
			this._CommunicationDefinitionEntity = default(EntityRef<CommunicationDefinitionEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_definitionId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid definitionId
		{
			get
			{
				return this._definitionId;
			}
			set
			{
				if ((this._definitionId != value))
				{
					if (this._CommunicationDefinitionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._definitionId = value;
					this.SendPropertyChanged("definitionId");
					this.OndefinitionIdChanged();
				}
			}
		}
		
		[Column(Storage="_settingsId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid settingsId
		{
			get
			{
				return this._settingsId;
			}
			set
			{
				if ((this._settingsId != value))
				{
					if (this._CommunicationSettingEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsettingsIdChanging(value);
					this.SendPropertyChanging();
					this._settingsId = value;
					this.SendPropertyChanged("settingsId");
					this.OnsettingsIdChanged();
				}
			}
		}
		
		[Column(Storage="_lastSentTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> lastSentTime
		{
			get
			{
				return this._lastSentTime;
			}
			set
			{
				if ((this._lastSentTime != value))
				{
					this.OnlastSentTimeChanging(value);
					this.SendPropertyChanging();
					this._lastSentTime = value;
					this.SendPropertyChanged("lastSentTime");
					this.OnlastSentTimeChanged();
				}
			}
		}
		
		[Association(Name="CommunicationSettingEntity_CommunicationDefinitionSettingEntity", Storage="_CommunicationSettingEntity", ThisKey="settingsId", OtherKey="id", IsForeignKey=true)]
		public CommunicationSettingEntity CommunicationSettingEntity
		{
			get
			{
				return this._CommunicationSettingEntity.Entity;
			}
			set
			{
				CommunicationSettingEntity previousValue = this._CommunicationSettingEntity.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationSettingEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationSettingEntity.Entity = null;
						previousValue.CommunicationDefinitionSettingEntities.Remove(this);
					}
					this._CommunicationSettingEntity.Entity = value;
					if ((value != null))
					{
						value.CommunicationDefinitionSettingEntities.Add(this);
						this._settingsId = value.id;
					}
					else
					{
						this._settingsId = default(System.Guid);
					}
					this.SendPropertyChanged("CommunicationSettingEntity");
				}
			}
		}
		
		[Association(Name="CommunicationDefinitionEntity_CommunicationDefinitionSettingEntity", Storage="_CommunicationDefinitionEntity", ThisKey="definitionId", OtherKey="id", IsForeignKey=true)]
		public CommunicationDefinitionEntity CommunicationDefinitionEntity
		{
			get
			{
				return this._CommunicationDefinitionEntity.Entity;
			}
			set
			{
				CommunicationDefinitionEntity previousValue = this._CommunicationDefinitionEntity.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationDefinitionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationDefinitionEntity.Entity = null;
						previousValue.CommunicationDefinitionSettingEntities.Remove(this);
					}
					this._CommunicationDefinitionEntity.Entity = value;
					if ((value != null))
					{
						value.CommunicationDefinitionSettingEntities.Add(this);
						this._definitionId = value.id;
					}
					else
					{
						this._definitionId = default(System.Guid);
					}
					this.SendPropertyChanged("CommunicationDefinitionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CommunicationSettings")]
	internal partial class CommunicationSettingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private bool _sendPlainTextOnly;
		
		private EntitySet<CommunicationDefinitionSettingEntity> _CommunicationDefinitionSettingEntities;
		
		private EntitySet<CommunicationCategorySettingEntity> _CommunicationCategorySettingEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OnsendPlainTextOnlyChanging(bool value);
    partial void OnsendPlainTextOnlyChanged();
    #endregion
		
		public CommunicationSettingEntity()
		{
			this._CommunicationDefinitionSettingEntities = new EntitySet<CommunicationDefinitionSettingEntity>(new Action<CommunicationDefinitionSettingEntity>(this.attach_CommunicationDefinitionSettingEntities), new Action<CommunicationDefinitionSettingEntity>(this.detach_CommunicationDefinitionSettingEntities));
			this._CommunicationCategorySettingEntities = new EntitySet<CommunicationCategorySettingEntity>(new Action<CommunicationCategorySettingEntity>(this.attach_CommunicationCategorySettingEntities), new Action<CommunicationCategorySettingEntity>(this.detach_CommunicationCategorySettingEntities));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[Column(Storage="_sendPlainTextOnly", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool sendPlainTextOnly
		{
			get
			{
				return this._sendPlainTextOnly;
			}
			set
			{
				if ((this._sendPlainTextOnly != value))
				{
					this.OnsendPlainTextOnlyChanging(value);
					this.SendPropertyChanging();
					this._sendPlainTextOnly = value;
					this.SendPropertyChanged("sendPlainTextOnly");
					this.OnsendPlainTextOnlyChanged();
				}
			}
		}
		
		[Association(Name="CommunicationSettingEntity_CommunicationDefinitionSettingEntity", Storage="_CommunicationDefinitionSettingEntities", ThisKey="id", OtherKey="settingsId")]
		public EntitySet<CommunicationDefinitionSettingEntity> CommunicationDefinitionSettingEntities
		{
			get
			{
				return this._CommunicationDefinitionSettingEntities;
			}
			set
			{
				this._CommunicationDefinitionSettingEntities.Assign(value);
			}
		}
		
		[Association(Name="CommunicationSettingEntity_CommunicationCategorySettingEntity", Storage="_CommunicationCategorySettingEntities", ThisKey="id", OtherKey="settingsId")]
		public EntitySet<CommunicationCategorySettingEntity> CommunicationCategorySettingEntities
		{
			get
			{
				return this._CommunicationCategorySettingEntities;
			}
			set
			{
				this._CommunicationCategorySettingEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunicationDefinitionSettingEntities(CommunicationDefinitionSettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationSettingEntity = this;
		}
		
		private void detach_CommunicationDefinitionSettingEntities(CommunicationDefinitionSettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationSettingEntity = null;
		}
		
		private void attach_CommunicationCategorySettingEntities(CommunicationCategorySettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationSettingEntity = this;
		}
		
		private void detach_CommunicationCategorySettingEntities(CommunicationCategorySettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationSettingEntity = null;
		}
	}
	
	[Table(Name="dbo.CommunityMember")]
	internal partial class CommunityMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _primaryCommunityId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnprimaryCommunityIdChanging(System.Guid value);
    partial void OnprimaryCommunityIdChanged();
    #endregion
		
		public CommunityMemberEntity()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_primaryCommunityId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid primaryCommunityId
		{
			get
			{
				return this._primaryCommunityId;
			}
			set
			{
				if ((this._primaryCommunityId != value))
				{
					this.OnprimaryCommunityIdChanging(value);
					this.SendPropertyChanging();
					this._primaryCommunityId = value;
					this.SendPropertyChanged("primaryCommunityId");
					this.OnprimaryCommunityIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RegisteredUser")]
	internal partial class RegisteredUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _loginId;
		
		private System.DateTime _createdTime;
		
		private string _emailAddress;
		
		private string _firstName;
		
		private string _lastName;
		
		private short _flags;
		
		private string _passwordHash;
		
		private bool _emailAddressVerified;
		
		private string _secondaryEmailAddress;
		
		private System.Nullable<bool> _secondaryEmailAddressVerified;
		
		private EntityRef<MemberEntity> _MemberEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnloginIdChanging(string value);
    partial void OnloginIdChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnflagsChanging(short value);
    partial void OnflagsChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnemailAddressVerifiedChanging(bool value);
    partial void OnemailAddressVerifiedChanged();
    partial void OnsecondaryEmailAddressChanging(string value);
    partial void OnsecondaryEmailAddressChanged();
    partial void OnsecondaryEmailAddressVerifiedChanging(System.Nullable<bool> value);
    partial void OnsecondaryEmailAddressVerifiedChanged();
    #endregion
		
		public RegisteredUserEntity()
		{
			this._MemberEntity = default(EntityRef<MemberEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_loginId", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string loginId
		{
			get
			{
				return this._loginId;
			}
			set
			{
				if ((this._loginId != value))
				{
					this.OnloginIdChanging(value);
					this.SendPropertyChanging();
					this._loginId = value;
					this.SendPropertyChanged("loginId");
					this.OnloginIdChanged();
				}
			}
		}
		
		[Column(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[Column(Storage="_emailAddress", DbType="NVarChar(320) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_firstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_lastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[Column(Storage="_flags", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[Column(Storage="_passwordHash", DbType="Char(24)", UpdateCheck=UpdateCheck.Never)]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[Column(Storage="_emailAddressVerified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool emailAddressVerified
		{
			get
			{
				return this._emailAddressVerified;
			}
			set
			{
				if ((this._emailAddressVerified != value))
				{
					this.OnemailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._emailAddressVerified = value;
					this.SendPropertyChanged("emailAddressVerified");
					this.OnemailAddressVerifiedChanged();
				}
			}
		}
		
		[Column(Storage="_secondaryEmailAddress", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryEmailAddress
		{
			get
			{
				return this._secondaryEmailAddress;
			}
			set
			{
				if ((this._secondaryEmailAddress != value))
				{
					this.OnsecondaryEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddress = value;
					this.SendPropertyChanged("secondaryEmailAddress");
					this.OnsecondaryEmailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_secondaryEmailAddressVerified", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> secondaryEmailAddressVerified
		{
			get
			{
				return this._secondaryEmailAddressVerified;
			}
			set
			{
				if ((this._secondaryEmailAddressVerified != value))
				{
					this.OnsecondaryEmailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddressVerified = value;
					this.SendPropertyChanged("secondaryEmailAddressVerified");
					this.OnsecondaryEmailAddressVerifiedChanged();
				}
			}
		}
		
		[Association(Name="RegisteredUserEntity_Member", Storage="_MemberEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public MemberEntity MemberEntity
		{
			get
			{
				return this._MemberEntity.Entity;
			}
			set
			{
				MemberEntity previousValue = this._MemberEntity.Entity;
				if (((previousValue != value) 
							|| (this._MemberEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._MemberEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("MemberEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CommunicationCategorySettings")]
	internal partial class CommunicationCategorySettingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _categoryId;
		
		private System.Guid _settingsId;
		
		private System.Nullable<byte> _frequency;
		
		private EntityRef<CommunicationSettingEntity> _CommunicationSettingEntity;
		
		private EntityRef<CommunicationCategoryEntity> _CommunicationCategoryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncategoryIdChanging(System.Guid value);
    partial void OncategoryIdChanged();
    partial void OnsettingsIdChanging(System.Guid value);
    partial void OnsettingsIdChanged();
    partial void OnfrequencyChanging(System.Nullable<byte> value);
    partial void OnfrequencyChanged();
    #endregion
		
		public CommunicationCategorySettingEntity()
		{
			this._CommunicationSettingEntity = default(EntityRef<CommunicationSettingEntity>);
			this._CommunicationCategoryEntity = default(EntityRef<CommunicationCategoryEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_categoryId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid categoryId
		{
			get
			{
				return this._categoryId;
			}
			set
			{
				if ((this._categoryId != value))
				{
					if (this._CommunicationCategoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryIdChanging(value);
					this.SendPropertyChanging();
					this._categoryId = value;
					this.SendPropertyChanged("categoryId");
					this.OncategoryIdChanged();
				}
			}
		}
		
		[Column(Storage="_settingsId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid settingsId
		{
			get
			{
				return this._settingsId;
			}
			set
			{
				if ((this._settingsId != value))
				{
					if (this._CommunicationSettingEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsettingsIdChanging(value);
					this.SendPropertyChanging();
					this._settingsId = value;
					this.SendPropertyChanged("settingsId");
					this.OnsettingsIdChanged();
				}
			}
		}
		
		[Column(Storage="_frequency", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> frequency
		{
			get
			{
				return this._frequency;
			}
			set
			{
				if ((this._frequency != value))
				{
					this.OnfrequencyChanging(value);
					this.SendPropertyChanging();
					this._frequency = value;
					this.SendPropertyChanged("frequency");
					this.OnfrequencyChanged();
				}
			}
		}
		
		[Association(Name="CommunicationSettingEntity_CommunicationCategorySettingEntity", Storage="_CommunicationSettingEntity", ThisKey="settingsId", OtherKey="id", IsForeignKey=true)]
		public CommunicationSettingEntity CommunicationSettingEntity
		{
			get
			{
				return this._CommunicationSettingEntity.Entity;
			}
			set
			{
				CommunicationSettingEntity previousValue = this._CommunicationSettingEntity.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationSettingEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationSettingEntity.Entity = null;
						previousValue.CommunicationCategorySettingEntities.Remove(this);
					}
					this._CommunicationSettingEntity.Entity = value;
					if ((value != null))
					{
						value.CommunicationCategorySettingEntities.Add(this);
						this._settingsId = value.id;
					}
					else
					{
						this._settingsId = default(System.Guid);
					}
					this.SendPropertyChanged("CommunicationSettingEntity");
				}
			}
		}
		
		[Association(Name="CommunicationCategoryEntity_CommunicationCategorySettingEntity", Storage="_CommunicationCategoryEntity", ThisKey="categoryId", OtherKey="id", IsForeignKey=true)]
		public CommunicationCategoryEntity CommunicationCategoryEntity
		{
			get
			{
				return this._CommunicationCategoryEntity.Entity;
			}
			set
			{
				CommunicationCategoryEntity previousValue = this._CommunicationCategoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationCategoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationCategoryEntity.Entity = null;
						previousValue.CommunicationCategorySettingEntities.Remove(this);
					}
					this._CommunicationCategoryEntity.Entity = value;
					if ((value != null))
					{
						value.CommunicationCategorySettingEntities.Add(this);
						this._categoryId = value.id;
					}
					else
					{
						this._categoryId = default(System.Guid);
					}
					this.SendPropertyChanged("CommunicationCategoryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CommunicationDefinition")]
	internal partial class CommunicationDefinitionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private System.Guid _categoryId;
		
		private EntitySet<CommunicationDefinitionSettingEntity> _CommunicationDefinitionSettingEntities;
		
		private EntityRef<CommunicationCategoryEntity> _CommunicationCategoryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncategoryIdChanging(System.Guid value);
    partial void OncategoryIdChanged();
    #endregion
		
		public CommunicationDefinitionEntity()
		{
			this._CommunicationDefinitionSettingEntities = new EntitySet<CommunicationDefinitionSettingEntity>(new Action<CommunicationDefinitionSettingEntity>(this.attach_CommunicationDefinitionSettingEntities), new Action<CommunicationDefinitionSettingEntity>(this.detach_CommunicationDefinitionSettingEntities));
			this._CommunicationCategoryEntity = default(EntityRef<CommunicationCategoryEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_categoryId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid categoryId
		{
			get
			{
				return this._categoryId;
			}
			set
			{
				if ((this._categoryId != value))
				{
					if (this._CommunicationCategoryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryIdChanging(value);
					this.SendPropertyChanging();
					this._categoryId = value;
					this.SendPropertyChanged("categoryId");
					this.OncategoryIdChanged();
				}
			}
		}
		
		[Association(Name="CommunicationDefinitionEntity_CommunicationDefinitionSettingEntity", Storage="_CommunicationDefinitionSettingEntities", ThisKey="id", OtherKey="definitionId")]
		public EntitySet<CommunicationDefinitionSettingEntity> CommunicationDefinitionSettingEntities
		{
			get
			{
				return this._CommunicationDefinitionSettingEntities;
			}
			set
			{
				this._CommunicationDefinitionSettingEntities.Assign(value);
			}
		}
		
		[Association(Name="CommunicationCategoryEntity_CommunicationDefinitionEntity", Storage="_CommunicationCategoryEntity", ThisKey="categoryId", OtherKey="id", IsForeignKey=true)]
		public CommunicationCategoryEntity CommunicationCategoryEntity
		{
			get
			{
				return this._CommunicationCategoryEntity.Entity;
			}
			set
			{
				CommunicationCategoryEntity previousValue = this._CommunicationCategoryEntity.Entity;
				if (((previousValue != value) 
							|| (this._CommunicationCategoryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunicationCategoryEntity.Entity = null;
						previousValue.CommunicationDefinitionEntities.Remove(this);
					}
					this._CommunicationCategoryEntity.Entity = value;
					if ((value != null))
					{
						value.CommunicationDefinitionEntities.Add(this);
						this._categoryId = value.id;
					}
					else
					{
						this._categoryId = default(System.Guid);
					}
					this.SendPropertyChanged("CommunicationCategoryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunicationDefinitionSettingEntities(CommunicationDefinitionSettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationDefinitionEntity = this;
		}
		
		private void detach_CommunicationDefinitionSettingEntities(CommunicationDefinitionSettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationDefinitionEntity = null;
		}
	}
	
	[Table(Name="dbo.CommunicationCategory")]
	internal partial class CommunicationCategoryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private byte _type;
		
		private byte _defaultFrequency;
		
		private bool _deleted;
		
		private int _roles;
		
		private string _availableFrequencies;
		
		private EntitySet<CommunicationCategorySettingEntity> _CommunicationCategorySettingEntities;
		
		private EntitySet<CommunicationDefinitionEntity> _CommunicationDefinitionEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntypeChanging(byte value);
    partial void OntypeChanged();
    partial void OndefaultFrequencyChanging(byte value);
    partial void OndefaultFrequencyChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OnrolesChanging(int value);
    partial void OnrolesChanged();
    partial void OnavailableFrequenciesChanging(string value);
    partial void OnavailableFrequenciesChanged();
    #endregion
		
		public CommunicationCategoryEntity()
		{
			this._CommunicationCategorySettingEntities = new EntitySet<CommunicationCategorySettingEntity>(new Action<CommunicationCategorySettingEntity>(this.attach_CommunicationCategorySettingEntities), new Action<CommunicationCategorySettingEntity>(this.detach_CommunicationCategorySettingEntities));
			this._CommunicationDefinitionEntities = new EntitySet<CommunicationDefinitionEntity>(new Action<CommunicationDefinitionEntity>(this.attach_CommunicationDefinitionEntities), new Action<CommunicationDefinitionEntity>(this.detach_CommunicationDefinitionEntities));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Column(Storage="_defaultFrequency", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte defaultFrequency
		{
			get
			{
				return this._defaultFrequency;
			}
			set
			{
				if ((this._defaultFrequency != value))
				{
					this.OndefaultFrequencyChanging(value);
					this.SendPropertyChanging();
					this._defaultFrequency = value;
					this.SendPropertyChanged("defaultFrequency");
					this.OndefaultFrequencyChanged();
				}
			}
		}
		
		[Column(Storage="_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[Column(Storage="_roles", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int roles
		{
			get
			{
				return this._roles;
			}
			set
			{
				if ((this._roles != value))
				{
					this.OnrolesChanging(value);
					this.SendPropertyChanging();
					this._roles = value;
					this.SendPropertyChanged("roles");
					this.OnrolesChanged();
				}
			}
		}
		
		[Column(Storage="_availableFrequencies", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string availableFrequencies
		{
			get
			{
				return this._availableFrequencies;
			}
			set
			{
				if ((this._availableFrequencies != value))
				{
					this.OnavailableFrequenciesChanging(value);
					this.SendPropertyChanging();
					this._availableFrequencies = value;
					this.SendPropertyChanged("availableFrequencies");
					this.OnavailableFrequenciesChanged();
				}
			}
		}
		
		[Association(Name="CommunicationCategoryEntity_CommunicationCategorySettingEntity", Storage="_CommunicationCategorySettingEntities", ThisKey="id", OtherKey="categoryId")]
		public EntitySet<CommunicationCategorySettingEntity> CommunicationCategorySettingEntities
		{
			get
			{
				return this._CommunicationCategorySettingEntities;
			}
			set
			{
				this._CommunicationCategorySettingEntities.Assign(value);
			}
		}
		
		[Association(Name="CommunicationCategoryEntity_CommunicationDefinitionEntity", Storage="_CommunicationDefinitionEntities", ThisKey="id", OtherKey="categoryId")]
		public EntitySet<CommunicationDefinitionEntity> CommunicationDefinitionEntities
		{
			get
			{
				return this._CommunicationDefinitionEntities;
			}
			set
			{
				this._CommunicationDefinitionEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommunicationCategorySettingEntities(CommunicationCategorySettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationCategoryEntity = this;
		}
		
		private void detach_CommunicationCategorySettingEntities(CommunicationCategorySettingEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationCategoryEntity = null;
		}
		
		private void attach_CommunicationDefinitionEntities(CommunicationDefinitionEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationCategoryEntity = this;
		}
		
		private void detach_CommunicationDefinitionEntities(CommunicationDefinitionEntity entity)
		{
			this.SendPropertyChanging();
			entity.CommunicationCategoryEntity = null;
		}
	}
	
	[Table(Name="dbo.Member")]
	internal partial class MemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _dateOfBirth;
		
		private byte _gender;
		
		private byte _employerAccess;
		
		private int _firstDegreeAccess;
		
		private int _secondDegreeAccess;
		
		private int _publicAccess;
		
		private System.Nullable<byte> _enteredReferralSourceId;
		
		private System.Guid _addressId;
		
		private System.Nullable<System.Guid> _profilePhotoId;
		
		private System.Nullable<int> _ethnicFlags;
		
		private System.Nullable<int> _disabilityFlags;
		
		private System.Nullable<byte> _dateOfBirthParts;
		
		private string _primaryPhoneNumber;
		
		private System.Nullable<byte> _primaryPhoneNumberType;
		
		private string _secondaryPhoneNumber;
		
		private System.Nullable<byte> _secondaryPhoneNumberType;
		
		private string _tertiaryPhoneNumber;
		
		private System.Nullable<byte> _tertiaryPhoneNumberType;
		
		private System.DateTime _lastEditedTime;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OndateOfBirthChanged();
    partial void OngenderChanging(byte value);
    partial void OngenderChanged();
    partial void OnemployerAccessChanging(byte value);
    partial void OnemployerAccessChanged();
    partial void OnfirstDegreeAccessChanging(int value);
    partial void OnfirstDegreeAccessChanged();
    partial void OnsecondDegreeAccessChanging(int value);
    partial void OnsecondDegreeAccessChanged();
    partial void OnpublicAccessChanging(int value);
    partial void OnpublicAccessChanged();
    partial void OnenteredReferralSourceIdChanging(System.Nullable<byte> value);
    partial void OnenteredReferralSourceIdChanged();
    partial void OnaddressIdChanging(System.Guid value);
    partial void OnaddressIdChanged();
    partial void OnprofilePhotoIdChanging(System.Nullable<System.Guid> value);
    partial void OnprofilePhotoIdChanged();
    partial void OnethnicFlagsChanging(System.Nullable<int> value);
    partial void OnethnicFlagsChanged();
    partial void OndisabilityFlagsChanging(System.Nullable<int> value);
    partial void OndisabilityFlagsChanged();
    partial void OndateOfBirthPartsChanging(System.Nullable<byte> value);
    partial void OndateOfBirthPartsChanged();
    partial void OnprimaryPhoneNumberChanging(string value);
    partial void OnprimaryPhoneNumberChanged();
    partial void OnprimaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OnprimaryPhoneNumberTypeChanged();
    partial void OnsecondaryPhoneNumberChanging(string value);
    partial void OnsecondaryPhoneNumberChanged();
    partial void OnsecondaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OnsecondaryPhoneNumberTypeChanged();
    partial void OntertiaryPhoneNumberChanging(string value);
    partial void OntertiaryPhoneNumberChanged();
    partial void OntertiaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OntertiaryPhoneNumberTypeChanged();
    partial void OnlastEditedTimeChanging(System.DateTime value);
    partial void OnlastEditedTimeChanged();
    #endregion
		
		public MemberEntity()
		{
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_dateOfBirth", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dateOfBirth
		{
			get
			{
				return this._dateOfBirth;
			}
			set
			{
				if ((this._dateOfBirth != value))
				{
					this.OndateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirth = value;
					this.SendPropertyChanged("dateOfBirth");
					this.OndateOfBirthChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[Column(Storage="_employerAccess", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte employerAccess
		{
			get
			{
				return this._employerAccess;
			}
			set
			{
				if ((this._employerAccess != value))
				{
					this.OnemployerAccessChanging(value);
					this.SendPropertyChanging();
					this._employerAccess = value;
					this.SendPropertyChanged("employerAccess");
					this.OnemployerAccessChanged();
				}
			}
		}
		
		[Column(Storage="_firstDegreeAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int firstDegreeAccess
		{
			get
			{
				return this._firstDegreeAccess;
			}
			set
			{
				if ((this._firstDegreeAccess != value))
				{
					this.OnfirstDegreeAccessChanging(value);
					this.SendPropertyChanging();
					this._firstDegreeAccess = value;
					this.SendPropertyChanged("firstDegreeAccess");
					this.OnfirstDegreeAccessChanged();
				}
			}
		}
		
		[Column(Storage="_secondDegreeAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int secondDegreeAccess
		{
			get
			{
				return this._secondDegreeAccess;
			}
			set
			{
				if ((this._secondDegreeAccess != value))
				{
					this.OnsecondDegreeAccessChanging(value);
					this.SendPropertyChanging();
					this._secondDegreeAccess = value;
					this.SendPropertyChanged("secondDegreeAccess");
					this.OnsecondDegreeAccessChanged();
				}
			}
		}
		
		[Column(Storage="_publicAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int publicAccess
		{
			get
			{
				return this._publicAccess;
			}
			set
			{
				if ((this._publicAccess != value))
				{
					this.OnpublicAccessChanging(value);
					this.SendPropertyChanging();
					this._publicAccess = value;
					this.SendPropertyChanged("publicAccess");
					this.OnpublicAccessChanged();
				}
			}
		}
		
		[Column(Storage="_enteredReferralSourceId", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> enteredReferralSourceId
		{
			get
			{
				return this._enteredReferralSourceId;
			}
			set
			{
				if ((this._enteredReferralSourceId != value))
				{
					this.OnenteredReferralSourceIdChanging(value);
					this.SendPropertyChanging();
					this._enteredReferralSourceId = value;
					this.SendPropertyChanged("enteredReferralSourceId");
					this.OnenteredReferralSourceIdChanged();
				}
			}
		}
		
		[Column(Storage="_addressId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[Column(Storage="_profilePhotoId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> profilePhotoId
		{
			get
			{
				return this._profilePhotoId;
			}
			set
			{
				if ((this._profilePhotoId != value))
				{
					this.OnprofilePhotoIdChanging(value);
					this.SendPropertyChanging();
					this._profilePhotoId = value;
					this.SendPropertyChanged("profilePhotoId");
					this.OnprofilePhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_ethnicFlags", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ethnicFlags
		{
			get
			{
				return this._ethnicFlags;
			}
			set
			{
				if ((this._ethnicFlags != value))
				{
					this.OnethnicFlagsChanging(value);
					this.SendPropertyChanging();
					this._ethnicFlags = value;
					this.SendPropertyChanged("ethnicFlags");
					this.OnethnicFlagsChanged();
				}
			}
		}
		
		[Column(Storage="_disabilityFlags", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> disabilityFlags
		{
			get
			{
				return this._disabilityFlags;
			}
			set
			{
				if ((this._disabilityFlags != value))
				{
					this.OndisabilityFlagsChanging(value);
					this.SendPropertyChanging();
					this._disabilityFlags = value;
					this.SendPropertyChanged("disabilityFlags");
					this.OndisabilityFlagsChanged();
				}
			}
		}
		
		[Column(Storage="_dateOfBirthParts", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> dateOfBirthParts
		{
			get
			{
				return this._dateOfBirthParts;
			}
			set
			{
				if ((this._dateOfBirthParts != value))
				{
					this.OndateOfBirthPartsChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirthParts = value;
					this.SendPropertyChanged("dateOfBirthParts");
					this.OndateOfBirthPartsChanged();
				}
			}
		}
		
		[Column(Storage="_primaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string primaryPhoneNumber
		{
			get
			{
				return this._primaryPhoneNumber;
			}
			set
			{
				if ((this._primaryPhoneNumber != value))
				{
					this.OnprimaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._primaryPhoneNumber = value;
					this.SendPropertyChanged("primaryPhoneNumber");
					this.OnprimaryPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_primaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> primaryPhoneNumberType
		{
			get
			{
				return this._primaryPhoneNumberType;
			}
			set
			{
				if ((this._primaryPhoneNumberType != value))
				{
					this.OnprimaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._primaryPhoneNumberType = value;
					this.SendPropertyChanged("primaryPhoneNumberType");
					this.OnprimaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[Column(Storage="_secondaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryPhoneNumber
		{
			get
			{
				return this._secondaryPhoneNumber;
			}
			set
			{
				if ((this._secondaryPhoneNumber != value))
				{
					this.OnsecondaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhoneNumber = value;
					this.SendPropertyChanged("secondaryPhoneNumber");
					this.OnsecondaryPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_secondaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> secondaryPhoneNumberType
		{
			get
			{
				return this._secondaryPhoneNumberType;
			}
			set
			{
				if ((this._secondaryPhoneNumberType != value))
				{
					this.OnsecondaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhoneNumberType = value;
					this.SendPropertyChanged("secondaryPhoneNumberType");
					this.OnsecondaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[Column(Storage="_tertiaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string tertiaryPhoneNumber
		{
			get
			{
				return this._tertiaryPhoneNumber;
			}
			set
			{
				if ((this._tertiaryPhoneNumber != value))
				{
					this.OntertiaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._tertiaryPhoneNumber = value;
					this.SendPropertyChanged("tertiaryPhoneNumber");
					this.OntertiaryPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_tertiaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> tertiaryPhoneNumberType
		{
			get
			{
				return this._tertiaryPhoneNumberType;
			}
			set
			{
				if ((this._tertiaryPhoneNumberType != value))
				{
					this.OntertiaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._tertiaryPhoneNumberType = value;
					this.SendPropertyChanged("tertiaryPhoneNumberType");
					this.OntertiaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[Column(Storage="_lastEditedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastEditedTime
		{
			get
			{
				return this._lastEditedTime;
			}
			set
			{
				if ((this._lastEditedTime != value))
				{
					this.OnlastEditedTimeChanging(value);
					this.SendPropertyChanging();
					this._lastEditedTime = value;
					this.SendPropertyChanged("lastEditedTime");
					this.OnlastEditedTimeChanged();
				}
			}
		}
		
		[Association(Name="RegisteredUserEntity_Member", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.MemberEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.MemberEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
