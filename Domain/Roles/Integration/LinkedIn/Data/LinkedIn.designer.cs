#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Domain.Roles.Integration.LinkedIn.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	internal partial class LinkedInDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLinkedInProfileEntity(LinkedInProfileEntity instance);
    partial void UpdateLinkedInProfileEntity(LinkedInProfileEntity instance);
    partial void DeleteLinkedInProfileEntity(LinkedInProfileEntity instance);
    partial void InsertLinkedInProfileIndustryEntity(LinkedInProfileIndustryEntity instance);
    partial void UpdateLinkedInProfileIndustryEntity(LinkedInProfileIndustryEntity instance);
    partial void DeleteLinkedInProfileIndustryEntity(LinkedInProfileIndustryEntity instance);
    partial void InsertLocationReferenceEntity(LocationReferenceEntity instance);
    partial void UpdateLocationReferenceEntity(LocationReferenceEntity instance);
    partial void DeleteLocationReferenceEntity(LocationReferenceEntity instance);
    #endregion
		
		public LinkedInDataContext() : 
				base(global::LinkMe.Domain.Roles.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinkedInDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinkedInDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinkedInDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinkedInDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<LinkedInProfileEntity> LinkedInProfileEntities
		{
			get
			{
				return this.GetTable<LinkedInProfileEntity>();
			}
		}
		
		internal System.Data.Linq.Table<LinkedInProfileIndustryEntity> LinkedInProfileIndustryEntities
		{
			get
			{
				return this.GetTable<LinkedInProfileIndustryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<LocationReferenceEntity> LocationReferenceEntities
		{
			get
			{
				return this.GetTable<LocationReferenceEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkedInProfile")]
	internal partial class LinkedInProfileEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _linkedInId;
		
		private System.Guid _userId;
		
		private System.DateTime _createdTime;
		
		private System.DateTime _lastUpdatedTime;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _organisationName;
		
		private System.Nullable<System.Guid> _locationReferenceId;
		
		private EntitySet<LinkedInProfileIndustryEntity> _LinkedInProfileIndustryEntities;
		
		private EntityRef<LocationReferenceEntity> _LocationReferenceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlinkedInIdChanging(string value);
    partial void OnlinkedInIdChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnlastUpdatedTimeChanging(System.DateTime value);
    partial void OnlastUpdatedTimeChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnorganisationNameChanging(string value);
    partial void OnorganisationNameChanged();
    partial void OnlocationReferenceIdChanging(System.Nullable<System.Guid> value);
    partial void OnlocationReferenceIdChanged();
    #endregion
		
		public LinkedInProfileEntity()
		{
			this._LinkedInProfileIndustryEntities = new EntitySet<LinkedInProfileIndustryEntity>(new Action<LinkedInProfileIndustryEntity>(this.attach_LinkedInProfileIndustryEntities), new Action<LinkedInProfileIndustryEntity>(this.detach_LinkedInProfileIndustryEntities));
			this._LocationReferenceEntity = default(EntityRef<LocationReferenceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkedInId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string linkedInId
		{
			get
			{
				return this._linkedInId;
			}
			set
			{
				if ((this._linkedInId != value))
				{
					this.OnlinkedInIdChanging(value);
					this.SendPropertyChanging();
					this._linkedInId = value;
					this.SendPropertyChanged("linkedInId");
					this.OnlinkedInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUpdatedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastUpdatedTime
		{
			get
			{
				return this._lastUpdatedTime;
			}
			set
			{
				if ((this._lastUpdatedTime != value))
				{
					this.OnlastUpdatedTimeChanging(value);
					this.SendPropertyChanging();
					this._lastUpdatedTime = value;
					this.SendPropertyChanged("lastUpdatedTime");
					this.OnlastUpdatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisationName", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string organisationName
		{
			get
			{
				return this._organisationName;
			}
			set
			{
				if ((this._organisationName != value))
				{
					this.OnorganisationNameChanging(value);
					this.SendPropertyChanging();
					this._organisationName = value;
					this.SendPropertyChanged("organisationName");
					this.OnorganisationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationReferenceId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> locationReferenceId
		{
			get
			{
				return this._locationReferenceId;
			}
			set
			{
				if ((this._locationReferenceId != value))
				{
					if (this._LocationReferenceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._locationReferenceId = value;
					this.SendPropertyChanged("locationReferenceId");
					this.OnlocationReferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinkedInProfile_LinkedInProfileIndustry", Storage="_LinkedInProfileIndustryEntities", ThisKey="linkedInId", OtherKey="linkedInId")]
		public EntitySet<LinkedInProfileIndustryEntity> LinkedInProfileIndustryEntities
		{
			get
			{
				return this._LinkedInProfileIndustryEntities;
			}
			set
			{
				this._LinkedInProfileIndustryEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationReference_LinkedInProfile", Storage="_LocationReferenceEntity", ThisKey="locationReferenceId", OtherKey="id", IsForeignKey=true)]
		public LocationReferenceEntity LocationReferenceEntity
		{
			get
			{
				return this._LocationReferenceEntity.Entity;
			}
			set
			{
				LocationReferenceEntity previousValue = this._LocationReferenceEntity.Entity;
				if (((previousValue != value) 
							|| (this._LocationReferenceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocationReferenceEntity.Entity = null;
						previousValue.LinkedInProfileEntities.Remove(this);
					}
					this._LocationReferenceEntity.Entity = value;
					if ((value != null))
					{
						value.LinkedInProfileEntities.Add(this);
						this._locationReferenceId = value.id;
					}
					else
					{
						this._locationReferenceId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("LocationReferenceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkedInProfileIndustryEntities(LinkedInProfileIndustryEntity entity)
		{
			this.SendPropertyChanging();
			entity.LinkedInProfileEntity = this;
		}
		
		private void detach_LinkedInProfileIndustryEntities(LinkedInProfileIndustryEntity entity)
		{
			this.SendPropertyChanging();
			entity.LinkedInProfileEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LinkedInProfileIndustry")]
	internal partial class LinkedInProfileIndustryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _linkedInId;
		
		private System.Guid _industryId;
		
		private EntityRef<LinkedInProfileEntity> _LinkedInProfileEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlinkedInIdChanging(string value);
    partial void OnlinkedInIdChanged();
    partial void OnindustryIdChanging(System.Guid value);
    partial void OnindustryIdChanged();
    #endregion
		
		public LinkedInProfileIndustryEntity()
		{
			this._LinkedInProfileEntity = default(EntityRef<LinkedInProfileEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkedInId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string linkedInId
		{
			get
			{
				return this._linkedInId;
			}
			set
			{
				if ((this._linkedInId != value))
				{
					if (this._LinkedInProfileEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlinkedInIdChanging(value);
					this.SendPropertyChanging();
					this._linkedInId = value;
					this.SendPropertyChanged("linkedInId");
					this.OnlinkedInIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_industryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid industryId
		{
			get
			{
				return this._industryId;
			}
			set
			{
				if ((this._industryId != value))
				{
					this.OnindustryIdChanging(value);
					this.SendPropertyChanging();
					this._industryId = value;
					this.SendPropertyChanged("industryId");
					this.OnindustryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LinkedInProfile_LinkedInProfileIndustry", Storage="_LinkedInProfileEntity", ThisKey="linkedInId", OtherKey="linkedInId", IsForeignKey=true)]
		public LinkedInProfileEntity LinkedInProfileEntity
		{
			get
			{
				return this._LinkedInProfileEntity.Entity;
			}
			set
			{
				LinkedInProfileEntity previousValue = this._LinkedInProfileEntity.Entity;
				if (((previousValue != value) 
							|| (this._LinkedInProfileEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LinkedInProfileEntity.Entity = null;
						previousValue.LinkedInProfileIndustryEntities.Remove(this);
					}
					this._LinkedInProfileEntity.Entity = value;
					if ((value != null))
					{
						value.LinkedInProfileIndustryEntities.Add(this);
						this._linkedInId = value.linkedInId;
					}
					else
					{
						this._linkedInId = default(string);
					}
					this.SendPropertyChanged("LinkedInProfileEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationReference")]
	internal partial class LocationReferenceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _unstructuredLocation;
		
		private System.Nullable<int> _namedLocationId;
		
		private int _countrySubdivisionId;
		
		private System.Nullable<int> _localityId;
		
		private EntitySet<LinkedInProfileEntity> _LinkedInProfileEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnunstructuredLocationChanging(string value);
    partial void OnunstructuredLocationChanged();
    partial void OnnamedLocationIdChanging(System.Nullable<int> value);
    partial void OnnamedLocationIdChanged();
    partial void OncountrySubdivisionIdChanging(int value);
    partial void OncountrySubdivisionIdChanged();
    partial void OnlocalityIdChanging(System.Nullable<int> value);
    partial void OnlocalityIdChanged();
    #endregion
		
		public LocationReferenceEntity()
		{
			this._LinkedInProfileEntities = new EntitySet<LinkedInProfileEntity>(new Action<LinkedInProfileEntity>(this.attach_LinkedInProfileEntities), new Action<LinkedInProfileEntity>(this.detach_LinkedInProfileEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unstructuredLocation", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string unstructuredLocation
		{
			get
			{
				return this._unstructuredLocation;
			}
			set
			{
				if ((this._unstructuredLocation != value))
				{
					this.OnunstructuredLocationChanging(value);
					this.SendPropertyChanging();
					this._unstructuredLocation = value;
					this.SendPropertyChanged("unstructuredLocation");
					this.OnunstructuredLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namedLocationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> namedLocationId
		{
			get
			{
				return this._namedLocationId;
			}
			set
			{
				if ((this._namedLocationId != value))
				{
					this.OnnamedLocationIdChanging(value);
					this.SendPropertyChanging();
					this._namedLocationId = value;
					this.SendPropertyChanged("namedLocationId");
					this.OnnamedLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrySubdivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int countrySubdivisionId
		{
			get
			{
				return this._countrySubdivisionId;
			}
			set
			{
				if ((this._countrySubdivisionId != value))
				{
					this.OncountrySubdivisionIdChanging(value);
					this.SendPropertyChanging();
					this._countrySubdivisionId = value;
					this.SendPropertyChanged("countrySubdivisionId");
					this.OncountrySubdivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localityId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> localityId
		{
			get
			{
				return this._localityId;
			}
			set
			{
				if ((this._localityId != value))
				{
					this.OnlocalityIdChanging(value);
					this.SendPropertyChanging();
					this._localityId = value;
					this.SendPropertyChanged("localityId");
					this.OnlocalityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationReference_LinkedInProfile", Storage="_LinkedInProfileEntities", ThisKey="id", OtherKey="locationReferenceId")]
		public EntitySet<LinkedInProfileEntity> LinkedInProfileEntities
		{
			get
			{
				return this._LinkedInProfileEntities;
			}
			set
			{
				this._LinkedInProfileEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkedInProfileEntities(LinkedInProfileEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = this;
		}
		
		private void detach_LinkedInProfileEntities(LinkedInProfileEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = null;
		}
	}
}
#pragma warning restore 1591
