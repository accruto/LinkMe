#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Domain.Roles.Candidates.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class CandidatesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCandidateWorkflowEntity(CandidateWorkflowEntity instance);
    partial void UpdateCandidateWorkflowEntity(CandidateWorkflowEntity instance);
    partial void DeleteCandidateWorkflowEntity(CandidateWorkflowEntity instance);
    partial void InsertCandidateDiaryEntity(CandidateDiaryEntity instance);
    partial void UpdateCandidateDiaryEntity(CandidateDiaryEntity instance);
    partial void DeleteCandidateDiaryEntity(CandidateDiaryEntity instance);
    partial void InsertCandidateDiaryEntryEntity(CandidateDiaryEntryEntity instance);
    partial void UpdateCandidateDiaryEntryEntity(CandidateDiaryEntryEntity instance);
    partial void DeleteCandidateDiaryEntryEntity(CandidateDiaryEntryEntity instance);
    partial void InsertRelocationLocationEntity(RelocationLocationEntity instance);
    partial void UpdateRelocationLocationEntity(RelocationLocationEntity instance);
    partial void DeleteRelocationLocationEntity(RelocationLocationEntity instance);
    partial void InsertLocationReferenceEntity(LocationReferenceEntity instance);
    partial void UpdateLocationReferenceEntity(LocationReferenceEntity instance);
    partial void DeleteLocationReferenceEntity(LocationReferenceEntity instance);
    partial void InsertCandidateIndustryEntity(CandidateIndustryEntity instance);
    partial void UpdateCandidateIndustryEntity(CandidateIndustryEntity instance);
    partial void DeleteCandidateIndustryEntity(CandidateIndustryEntity instance);
    partial void InsertCandidateResumeEntity(CandidateResumeEntity instance);
    partial void UpdateCandidateResumeEntity(CandidateResumeEntity instance);
    partial void DeleteCandidateResumeEntity(CandidateResumeEntity instance);
    partial void InsertCandidateResumeFileEntity(CandidateResumeFileEntity instance);
    partial void UpdateCandidateResumeFileEntity(CandidateResumeFileEntity instance);
    partial void DeleteCandidateResumeFileEntity(CandidateResumeFileEntity instance);
    partial void InsertCandidateEntity(CandidateEntity instance);
    partial void UpdateCandidateEntity(CandidateEntity instance);
    partial void DeleteCandidateEntity(CandidateEntity instance);
    #endregion
		
		public CandidatesDataContext() : 
				base("Data Source=(local);Initial Catalog=LinkMe;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public CandidatesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CandidatesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CandidatesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CandidatesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<CandidateWorkflowEntity> CandidateWorkflowEntities
		{
			get
			{
				return this.GetTable<CandidateWorkflowEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CandidateDiaryEntity> CandidateDiaryEntities
		{
			get
			{
				return this.GetTable<CandidateDiaryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CandidateDiaryEntryEntity> CandidateDiaryEntryEntities
		{
			get
			{
				return this.GetTable<CandidateDiaryEntryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RelocationLocationEntity> RelocationLocationEntities
		{
			get
			{
				return this.GetTable<RelocationLocationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<LocationReferenceEntity> LocationReferenceEntities
		{
			get
			{
				return this.GetTable<LocationReferenceEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CandidateIndustryEntity> CandidateIndustryEntities
		{
			get
			{
				return this.GetTable<CandidateIndustryEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CandidateResumeEntity> CandidateResumeEntities
		{
			get
			{
				return this.GetTable<CandidateResumeEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CandidateResumeFileEntity> CandidateResumeFileEntities
		{
			get
			{
				return this.GetTable<CandidateResumeFileEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CandidateEntity> CandidateEntities
		{
			get
			{
				return this.GetTable<CandidateEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SplitGuids", IsComposable=true)]
		public IQueryable<SplitGuidsResult> SplitGuids([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string delimiter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string input)
		{
			return this.CreateMethodCallQuery<SplitGuidsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), delimiter, input);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateWorkflow")]
	internal partial class CandidateWorkflowEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _candidateId;
		
		private System.Nullable<System.Guid> _statusWorkflowId;
		
		private System.Nullable<System.Guid> _suggestedJobsWorkflowId;
		
		private System.Nullable<System.Guid> _activationEmailWorkflowId;
		
		private EntityRef<CandidateEntity> _CandidateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncandidateIdChanging(System.Guid value);
    partial void OncandidateIdChanged();
    partial void OnstatusWorkflowIdChanging(System.Nullable<System.Guid> value);
    partial void OnstatusWorkflowIdChanged();
    partial void OnsuggestedJobsWorkflowIdChanging(System.Nullable<System.Guid> value);
    partial void OnsuggestedJobsWorkflowIdChanged();
    partial void OnactivationEmailWorkflowIdChanging(System.Nullable<System.Guid> value);
    partial void OnactivationEmailWorkflowIdChanged();
    #endregion
		
		public CandidateWorkflowEntity()
		{
			this._CandidateEntity = default(EntityRef<CandidateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid candidateId
		{
			get
			{
				return this._candidateId;
			}
			set
			{
				if ((this._candidateId != value))
				{
					if (this._CandidateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncandidateIdChanging(value);
					this.SendPropertyChanging();
					this._candidateId = value;
					this.SendPropertyChanged("candidateId");
					this.OncandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusWorkflowId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> statusWorkflowId
		{
			get
			{
				return this._statusWorkflowId;
			}
			set
			{
				if ((this._statusWorkflowId != value))
				{
					this.OnstatusWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._statusWorkflowId = value;
					this.SendPropertyChanged("statusWorkflowId");
					this.OnstatusWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suggestedJobsWorkflowId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> suggestedJobsWorkflowId
		{
			get
			{
				return this._suggestedJobsWorkflowId;
			}
			set
			{
				if ((this._suggestedJobsWorkflowId != value))
				{
					this.OnsuggestedJobsWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._suggestedJobsWorkflowId = value;
					this.SendPropertyChanged("suggestedJobsWorkflowId");
					this.OnsuggestedJobsWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activationEmailWorkflowId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> activationEmailWorkflowId
		{
			get
			{
				return this._activationEmailWorkflowId;
			}
			set
			{
				if ((this._activationEmailWorkflowId != value))
				{
					this.OnactivationEmailWorkflowIdChanging(value);
					this.SendPropertyChanging();
					this._activationEmailWorkflowId = value;
					this.SendPropertyChanged("activationEmailWorkflowId");
					this.OnactivationEmailWorkflowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateWorkflowEntity", Storage="_CandidateEntity", ThisKey="candidateId", OtherKey="id", IsForeignKey=true)]
		public CandidateEntity CandidateEntity
		{
			get
			{
				return this._CandidateEntity.Entity;
			}
			set
			{
				CandidateEntity previousValue = this._CandidateEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateEntity.Entity = null;
						previousValue.CandidateWorkflowEntity = null;
					}
					this._CandidateEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateWorkflowEntity = this;
						this._candidateId = value.id;
					}
					else
					{
						this._candidateId = default(System.Guid);
					}
					this.SendPropertyChanged("CandidateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateDiary")]
	internal partial class CandidateDiaryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private EntitySet<CandidateDiaryEntryEntity> _CandidateDiaryEntryEntities;
		
		private EntitySet<CandidateEntity> _CandidateEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    #endregion
		
		public CandidateDiaryEntity()
		{
			this._CandidateDiaryEntryEntities = new EntitySet<CandidateDiaryEntryEntity>(new Action<CandidateDiaryEntryEntity>(this.attach_CandidateDiaryEntryEntities), new Action<CandidateDiaryEntryEntity>(this.detach_CandidateDiaryEntryEntities));
			this._CandidateEntities = new EntitySet<CandidateEntity>(new Action<CandidateEntity>(this.attach_CandidateEntities), new Action<CandidateEntity>(this.detach_CandidateEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateDiaryEntity_CandidateDiaryEntryEntity", Storage="_CandidateDiaryEntryEntities", ThisKey="id", OtherKey="diaryId")]
		public EntitySet<CandidateDiaryEntryEntity> CandidateDiaryEntryEntities
		{
			get
			{
				return this._CandidateDiaryEntryEntities;
			}
			set
			{
				this._CandidateDiaryEntryEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateDiaryEntity_CandidateEntity", Storage="_CandidateEntities", ThisKey="id", OtherKey="diaryId")]
		public EntitySet<CandidateEntity> CandidateEntities
		{
			get
			{
				return this._CandidateEntities;
			}
			set
			{
				this._CandidateEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidateDiaryEntryEntities(CandidateDiaryEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateDiaryEntity = this;
		}
		
		private void detach_CandidateDiaryEntryEntities(CandidateDiaryEntryEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateDiaryEntity = null;
		}
		
		private void attach_CandidateEntities(CandidateEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateDiaryEntity = this;
		}
		
		private void detach_CandidateEntities(CandidateEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateDiaryEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateDiaryEntry")]
	internal partial class CandidateDiaryEntryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _diaryId;
		
		private bool _deleted;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _startTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private System.Nullable<double> _totalHours;
		
		private EntityRef<CandidateDiaryEntity> _CandidateDiaryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndiaryIdChanging(System.Guid value);
    partial void OndiaryIdChanged();
    partial void OndeletedChanging(bool value);
    partial void OndeletedChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnstartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstartTimeChanged();
    partial void OnendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnendTimeChanged();
    partial void OntotalHoursChanging(System.Nullable<double> value);
    partial void OntotalHoursChanged();
    #endregion
		
		public CandidateDiaryEntryEntity()
		{
			this._CandidateDiaryEntity = default(EntityRef<CandidateDiaryEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaryId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid diaryId
		{
			get
			{
				return this._diaryId;
			}
			set
			{
				if ((this._diaryId != value))
				{
					if (this._CandidateDiaryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndiaryIdChanging(value);
					this.SendPropertyChanging();
					this._diaryId = value;
					this.SendPropertyChanged("diaryId");
					this.OndiaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool deleted
		{
			get
			{
				return this._deleted;
			}
			set
			{
				if ((this._deleted != value))
				{
					this.OndeletedChanging(value);
					this.SendPropertyChanging();
					this._deleted = value;
					this.SendPropertyChanged("deleted");
					this.OndeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(512)", UpdateCheck=UpdateCheck.Never)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(2048)", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalHours", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> totalHours
		{
			get
			{
				return this._totalHours;
			}
			set
			{
				if ((this._totalHours != value))
				{
					this.OntotalHoursChanging(value);
					this.SendPropertyChanging();
					this._totalHours = value;
					this.SendPropertyChanged("totalHours");
					this.OntotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateDiaryEntity_CandidateDiaryEntryEntity", Storage="_CandidateDiaryEntity", ThisKey="diaryId", OtherKey="id", IsForeignKey=true)]
		public CandidateDiaryEntity CandidateDiaryEntity
		{
			get
			{
				return this._CandidateDiaryEntity.Entity;
			}
			set
			{
				CandidateDiaryEntity previousValue = this._CandidateDiaryEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateDiaryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateDiaryEntity.Entity = null;
						previousValue.CandidateDiaryEntryEntities.Remove(this);
					}
					this._CandidateDiaryEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateDiaryEntryEntities.Add(this);
						this._diaryId = value.id;
					}
					else
					{
						this._diaryId = default(System.Guid);
					}
					this.SendPropertyChanged("CandidateDiaryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RelocationLocation")]
	internal partial class RelocationLocationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _candidateId;
		
		private System.Guid _locationReferenceId;
		
		private EntityRef<LocationReferenceEntity> _LocationReferenceEntity;
		
		private EntityRef<CandidateEntity> _CandidateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncandidateIdChanging(System.Guid value);
    partial void OncandidateIdChanged();
    partial void OnlocationReferenceIdChanging(System.Guid value);
    partial void OnlocationReferenceIdChanged();
    #endregion
		
		public RelocationLocationEntity()
		{
			this._LocationReferenceEntity = default(EntityRef<LocationReferenceEntity>);
			this._CandidateEntity = default(EntityRef<CandidateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidateId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid candidateId
		{
			get
			{
				return this._candidateId;
			}
			set
			{
				if ((this._candidateId != value))
				{
					if (this._CandidateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncandidateIdChanging(value);
					this.SendPropertyChanging();
					this._candidateId = value;
					this.SendPropertyChanged("candidateId");
					this.OncandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationReferenceId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid locationReferenceId
		{
			get
			{
				return this._locationReferenceId;
			}
			set
			{
				if ((this._locationReferenceId != value))
				{
					if (this._LocationReferenceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._locationReferenceId = value;
					this.SendPropertyChanged("locationReferenceId");
					this.OnlocationReferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationReferenceEntity_RelocationLocationEntity", Storage="_LocationReferenceEntity", ThisKey="locationReferenceId", OtherKey="id", IsForeignKey=true)]
		public LocationReferenceEntity LocationReferenceEntity
		{
			get
			{
				return this._LocationReferenceEntity.Entity;
			}
			set
			{
				LocationReferenceEntity previousValue = this._LocationReferenceEntity.Entity;
				if (((previousValue != value) 
							|| (this._LocationReferenceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocationReferenceEntity.Entity = null;
						previousValue.RelocationLocationEntities.Remove(this);
					}
					this._LocationReferenceEntity.Entity = value;
					if ((value != null))
					{
						value.RelocationLocationEntities.Add(this);
						this._locationReferenceId = value.id;
					}
					else
					{
						this._locationReferenceId = default(System.Guid);
					}
					this.SendPropertyChanged("LocationReferenceEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_RelocationLocationEntity", Storage="_CandidateEntity", ThisKey="candidateId", OtherKey="id", IsForeignKey=true)]
		public CandidateEntity CandidateEntity
		{
			get
			{
				return this._CandidateEntity.Entity;
			}
			set
			{
				CandidateEntity previousValue = this._CandidateEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateEntity.Entity = null;
						previousValue.RelocationLocationEntities.Remove(this);
					}
					this._CandidateEntity.Entity = value;
					if ((value != null))
					{
						value.RelocationLocationEntities.Add(this);
						this._candidateId = value.id;
					}
					else
					{
						this._candidateId = default(System.Guid);
					}
					this.SendPropertyChanged("CandidateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationReference")]
	internal partial class LocationReferenceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _unstructuredLocation;
		
		private System.Nullable<int> _namedLocationId;
		
		private int _countrySubdivisionId;
		
		private System.Nullable<int> _localityId;
		
		private EntitySet<RelocationLocationEntity> _RelocationLocationEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnunstructuredLocationChanging(string value);
    partial void OnunstructuredLocationChanged();
    partial void OnnamedLocationIdChanging(System.Nullable<int> value);
    partial void OnnamedLocationIdChanged();
    partial void OncountrySubdivisionIdChanging(int value);
    partial void OncountrySubdivisionIdChanged();
    partial void OnlocalityIdChanging(System.Nullable<int> value);
    partial void OnlocalityIdChanged();
    #endregion
		
		public LocationReferenceEntity()
		{
			this._RelocationLocationEntities = new EntitySet<RelocationLocationEntity>(new Action<RelocationLocationEntity>(this.attach_RelocationLocationEntities), new Action<RelocationLocationEntity>(this.detach_RelocationLocationEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unstructuredLocation", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string unstructuredLocation
		{
			get
			{
				return this._unstructuredLocation;
			}
			set
			{
				if ((this._unstructuredLocation != value))
				{
					this.OnunstructuredLocationChanging(value);
					this.SendPropertyChanging();
					this._unstructuredLocation = value;
					this.SendPropertyChanged("unstructuredLocation");
					this.OnunstructuredLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namedLocationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> namedLocationId
		{
			get
			{
				return this._namedLocationId;
			}
			set
			{
				if ((this._namedLocationId != value))
				{
					this.OnnamedLocationIdChanging(value);
					this.SendPropertyChanging();
					this._namedLocationId = value;
					this.SendPropertyChanged("namedLocationId");
					this.OnnamedLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrySubdivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int countrySubdivisionId
		{
			get
			{
				return this._countrySubdivisionId;
			}
			set
			{
				if ((this._countrySubdivisionId != value))
				{
					this.OncountrySubdivisionIdChanging(value);
					this.SendPropertyChanging();
					this._countrySubdivisionId = value;
					this.SendPropertyChanged("countrySubdivisionId");
					this.OncountrySubdivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localityId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> localityId
		{
			get
			{
				return this._localityId;
			}
			set
			{
				if ((this._localityId != value))
				{
					this.OnlocalityIdChanging(value);
					this.SendPropertyChanging();
					this._localityId = value;
					this.SendPropertyChanged("localityId");
					this.OnlocalityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationReferenceEntity_RelocationLocationEntity", Storage="_RelocationLocationEntities", ThisKey="id", OtherKey="locationReferenceId")]
		public EntitySet<RelocationLocationEntity> RelocationLocationEntities
		{
			get
			{
				return this._RelocationLocationEntities;
			}
			set
			{
				this._RelocationLocationEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RelocationLocationEntities(RelocationLocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = this;
		}
		
		private void detach_RelocationLocationEntities(RelocationLocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateIndustry")]
	internal partial class CandidateIndustryEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _candidateId;
		
		private System.Guid _industryId;
		
		private EntityRef<CandidateEntity> _CandidateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncandidateIdChanging(System.Guid value);
    partial void OncandidateIdChanged();
    partial void OnindustryIdChanging(System.Guid value);
    partial void OnindustryIdChanged();
    #endregion
		
		public CandidateIndustryEntity()
		{
			this._CandidateEntity = default(EntityRef<CandidateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid candidateId
		{
			get
			{
				return this._candidateId;
			}
			set
			{
				if ((this._candidateId != value))
				{
					if (this._CandidateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncandidateIdChanging(value);
					this.SendPropertyChanging();
					this._candidateId = value;
					this.SendPropertyChanged("candidateId");
					this.OncandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_industryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid industryId
		{
			get
			{
				return this._industryId;
			}
			set
			{
				if ((this._industryId != value))
				{
					this.OnindustryIdChanging(value);
					this.SendPropertyChanging();
					this._industryId = value;
					this.SendPropertyChanged("industryId");
					this.OnindustryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateIndustryEntity", Storage="_CandidateEntity", ThisKey="candidateId", OtherKey="id", IsForeignKey=true)]
		public CandidateEntity CandidateEntity
		{
			get
			{
				return this._CandidateEntity.Entity;
			}
			set
			{
				CandidateEntity previousValue = this._CandidateEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateEntity.Entity = null;
						previousValue.CandidateIndustryEntities.Remove(this);
					}
					this._CandidateEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateIndustryEntities.Add(this);
						this._candidateId = value.id;
					}
					else
					{
						this._candidateId = default(System.Guid);
					}
					this.SendPropertyChanged("CandidateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateResume")]
	internal partial class CandidateResumeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _candidateId;
		
		private System.Guid _resumeId;
		
		private System.Nullable<System.Guid> _parsedFromFileId;
		
		private EntityRef<CandidateResumeFileEntity> _CandidateResumeFileEntity;
		
		private EntityRef<CandidateEntity> _CandidateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncandidateIdChanging(System.Guid value);
    partial void OncandidateIdChanged();
    partial void OnresumeIdChanging(System.Guid value);
    partial void OnresumeIdChanged();
    partial void OnparsedFromFileIdChanging(System.Nullable<System.Guid> value);
    partial void OnparsedFromFileIdChanged();
    #endregion
		
		public CandidateResumeEntity()
		{
			this._CandidateResumeFileEntity = default(EntityRef<CandidateResumeFileEntity>);
			this._CandidateEntity = default(EntityRef<CandidateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidateId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid candidateId
		{
			get
			{
				return this._candidateId;
			}
			set
			{
				if ((this._candidateId != value))
				{
					if (this._CandidateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncandidateIdChanging(value);
					this.SendPropertyChanging();
					this._candidateId = value;
					this.SendPropertyChanged("candidateId");
					this.OncandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resumeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid resumeId
		{
			get
			{
				return this._resumeId;
			}
			set
			{
				if ((this._resumeId != value))
				{
					this.OnresumeIdChanging(value);
					this.SendPropertyChanging();
					this._resumeId = value;
					this.SendPropertyChanged("resumeId");
					this.OnresumeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parsedFromFileId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> parsedFromFileId
		{
			get
			{
				return this._parsedFromFileId;
			}
			set
			{
				if ((this._parsedFromFileId != value))
				{
					if (this._CandidateResumeFileEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparsedFromFileIdChanging(value);
					this.SendPropertyChanging();
					this._parsedFromFileId = value;
					this.SendPropertyChanged("parsedFromFileId");
					this.OnparsedFromFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateResumeFileEntity_CandidateResumeEntity", Storage="_CandidateResumeFileEntity", ThisKey="parsedFromFileId", OtherKey="id", IsForeignKey=true)]
		public CandidateResumeFileEntity CandidateResumeFileEntity
		{
			get
			{
				return this._CandidateResumeFileEntity.Entity;
			}
			set
			{
				CandidateResumeFileEntity previousValue = this._CandidateResumeFileEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateResumeFileEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateResumeFileEntity.Entity = null;
						previousValue.CandidateResumeEntities.Remove(this);
					}
					this._CandidateResumeFileEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateResumeEntities.Add(this);
						this._parsedFromFileId = value.id;
					}
					else
					{
						this._parsedFromFileId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CandidateResumeFileEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateResumeEntity", Storage="_CandidateEntity", ThisKey="candidateId", OtherKey="id", IsForeignKey=true)]
		public CandidateEntity CandidateEntity
		{
			get
			{
				return this._CandidateEntity.Entity;
			}
			set
			{
				CandidateEntity previousValue = this._CandidateEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateEntity.Entity = null;
						previousValue.CandidateResumeEntities.Remove(this);
					}
					this._CandidateEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateResumeEntities.Add(this);
						this._candidateId = value.id;
					}
					else
					{
						this._candidateId = default(System.Guid);
					}
					this.SendPropertyChanged("CandidateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CandidateResumeFile")]
	internal partial class CandidateResumeFileEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _fileId;
		
		private System.DateTime _lastUsedTime;
		
		private System.Guid _id;
		
		private System.Guid _candidateId;
		
		private System.DateTime _uploadedTime;
		
		private EntitySet<CandidateResumeEntity> _CandidateResumeEntities;
		
		private EntityRef<CandidateEntity> _CandidateEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfileIdChanging(System.Guid value);
    partial void OnfileIdChanged();
    partial void OnlastUsedTimeChanging(System.DateTime value);
    partial void OnlastUsedTimeChanged();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncandidateIdChanging(System.Guid value);
    partial void OncandidateIdChanged();
    partial void OnuploadedTimeChanging(System.DateTime value);
    partial void OnuploadedTimeChanged();
    #endregion
		
		public CandidateResumeFileEntity()
		{
			this._CandidateResumeEntities = new EntitySet<CandidateResumeEntity>(new Action<CandidateResumeEntity>(this.attach_CandidateResumeEntities), new Action<CandidateResumeEntity>(this.detach_CandidateResumeEntities));
			this._CandidateEntity = default(EntityRef<CandidateEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid fileId
		{
			get
			{
				return this._fileId;
			}
			set
			{
				if ((this._fileId != value))
				{
					this.OnfileIdChanging(value);
					this.SendPropertyChanging();
					this._fileId = value;
					this.SendPropertyChanged("fileId");
					this.OnfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastUsedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastUsedTime
		{
			get
			{
				return this._lastUsedTime;
			}
			set
			{
				if ((this._lastUsedTime != value))
				{
					this.OnlastUsedTimeChanging(value);
					this.SendPropertyChanging();
					this._lastUsedTime = value;
					this.SendPropertyChanged("lastUsedTime");
					this.OnlastUsedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidateId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid candidateId
		{
			get
			{
				return this._candidateId;
			}
			set
			{
				if ((this._candidateId != value))
				{
					if (this._CandidateEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncandidateIdChanging(value);
					this.SendPropertyChanging();
					this._candidateId = value;
					this.SendPropertyChanged("candidateId");
					this.OncandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploadedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime uploadedTime
		{
			get
			{
				return this._uploadedTime;
			}
			set
			{
				if ((this._uploadedTime != value))
				{
					this.OnuploadedTimeChanging(value);
					this.SendPropertyChanging();
					this._uploadedTime = value;
					this.SendPropertyChanged("uploadedTime");
					this.OnuploadedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateResumeFileEntity_CandidateResumeEntity", Storage="_CandidateResumeEntities", ThisKey="id", OtherKey="parsedFromFileId")]
		public EntitySet<CandidateResumeEntity> CandidateResumeEntities
		{
			get
			{
				return this._CandidateResumeEntities;
			}
			set
			{
				this._CandidateResumeEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateResumeFileEntity", Storage="_CandidateEntity", ThisKey="candidateId", OtherKey="id", IsForeignKey=true)]
		public CandidateEntity CandidateEntity
		{
			get
			{
				return this._CandidateEntity.Entity;
			}
			set
			{
				CandidateEntity previousValue = this._CandidateEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateEntity.Entity = null;
						previousValue.CandidateResumeFileEntities.Remove(this);
					}
					this._CandidateEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateResumeFileEntities.Add(this);
						this._candidateId = value.id;
					}
					else
					{
						this._candidateId = default(System.Guid);
					}
					this.SendPropertyChanged("CandidateEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CandidateResumeEntities(CandidateResumeEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateResumeFileEntity = this;
		}
		
		private void detach_CandidateResumeEntities(CandidateResumeEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateResumeFileEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidate")]
	internal partial class CandidateEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private byte _status;
		
		private string _desiredJobTitle;
		
		private byte _desiredJobTypes;
		
		private System.Nullable<decimal> _desiredSalaryLower;
		
		private System.Nullable<decimal> _desiredSalaryUpper;
		
		private byte _desiredSalaryRateType;
		
		private byte _relocationPreference;
		
		private System.Nullable<System.Guid> _diaryId;
		
		private System.Nullable<byte> _highestEducationLevel;
		
		private System.Nullable<byte> _recentSeniority;
		
		private System.Nullable<byte> _visaStatus;
		
		private System.Nullable<byte> _recentProfession;
		
		private System.DateTime _lastEditedTime;
		
		private EntityRef<CandidateWorkflowEntity> _CandidateWorkflowEntity;
		
		private EntitySet<RelocationLocationEntity> _RelocationLocationEntities;
		
		private EntitySet<CandidateIndustryEntity> _CandidateIndustryEntities;
		
		private EntitySet<CandidateResumeEntity> _CandidateResumeEntities;
		
		private EntitySet<CandidateResumeFileEntity> _CandidateResumeFileEntities;
		
		private EntityRef<CandidateDiaryEntity> _CandidateDiaryEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    partial void OndesiredJobTitleChanging(string value);
    partial void OndesiredJobTitleChanged();
    partial void OndesiredJobTypesChanging(byte value);
    partial void OndesiredJobTypesChanged();
    partial void OndesiredSalaryLowerChanging(System.Nullable<decimal> value);
    partial void OndesiredSalaryLowerChanged();
    partial void OndesiredSalaryUpperChanging(System.Nullable<decimal> value);
    partial void OndesiredSalaryUpperChanged();
    partial void OndesiredSalaryRateTypeChanging(byte value);
    partial void OndesiredSalaryRateTypeChanged();
    partial void OnrelocationPreferenceChanging(byte value);
    partial void OnrelocationPreferenceChanged();
    partial void OndiaryIdChanging(System.Nullable<System.Guid> value);
    partial void OndiaryIdChanged();
    partial void OnhighestEducationLevelChanging(System.Nullable<byte> value);
    partial void OnhighestEducationLevelChanged();
    partial void OnrecentSeniorityChanging(System.Nullable<byte> value);
    partial void OnrecentSeniorityChanged();
    partial void OnvisaStatusChanging(System.Nullable<byte> value);
    partial void OnvisaStatusChanged();
    partial void OnrecentProfessionChanging(System.Nullable<byte> value);
    partial void OnrecentProfessionChanged();
    partial void OnlastEditedTimeChanging(System.DateTime value);
    partial void OnlastEditedTimeChanged();
    #endregion
		
		public CandidateEntity()
		{
			this._CandidateWorkflowEntity = default(EntityRef<CandidateWorkflowEntity>);
			this._RelocationLocationEntities = new EntitySet<RelocationLocationEntity>(new Action<RelocationLocationEntity>(this.attach_RelocationLocationEntities), new Action<RelocationLocationEntity>(this.detach_RelocationLocationEntities));
			this._CandidateIndustryEntities = new EntitySet<CandidateIndustryEntity>(new Action<CandidateIndustryEntity>(this.attach_CandidateIndustryEntities), new Action<CandidateIndustryEntity>(this.detach_CandidateIndustryEntities));
			this._CandidateResumeEntities = new EntitySet<CandidateResumeEntity>(new Action<CandidateResumeEntity>(this.attach_CandidateResumeEntities), new Action<CandidateResumeEntity>(this.detach_CandidateResumeEntities));
			this._CandidateResumeFileEntities = new EntitySet<CandidateResumeFileEntity>(new Action<CandidateResumeFileEntity>(this.attach_CandidateResumeFileEntities), new Action<CandidateResumeFileEntity>(this.detach_CandidateResumeFileEntities));
			this._CandidateDiaryEntity = default(EntityRef<CandidateDiaryEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desiredJobTitle", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string desiredJobTitle
		{
			get
			{
				return this._desiredJobTitle;
			}
			set
			{
				if ((this._desiredJobTitle != value))
				{
					this.OndesiredJobTitleChanging(value);
					this.SendPropertyChanging();
					this._desiredJobTitle = value;
					this.SendPropertyChanged("desiredJobTitle");
					this.OndesiredJobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desiredJobTypes", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte desiredJobTypes
		{
			get
			{
				return this._desiredJobTypes;
			}
			set
			{
				if ((this._desiredJobTypes != value))
				{
					this.OndesiredJobTypesChanging(value);
					this.SendPropertyChanging();
					this._desiredJobTypes = value;
					this.SendPropertyChanged("desiredJobTypes");
					this.OndesiredJobTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desiredSalaryLower", DbType="Decimal(18,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> desiredSalaryLower
		{
			get
			{
				return this._desiredSalaryLower;
			}
			set
			{
				if ((this._desiredSalaryLower != value))
				{
					this.OndesiredSalaryLowerChanging(value);
					this.SendPropertyChanging();
					this._desiredSalaryLower = value;
					this.SendPropertyChanged("desiredSalaryLower");
					this.OndesiredSalaryLowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desiredSalaryUpper", DbType="Decimal(18,8)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> desiredSalaryUpper
		{
			get
			{
				return this._desiredSalaryUpper;
			}
			set
			{
				if ((this._desiredSalaryUpper != value))
				{
					this.OndesiredSalaryUpperChanging(value);
					this.SendPropertyChanging();
					this._desiredSalaryUpper = value;
					this.SendPropertyChanged("desiredSalaryUpper");
					this.OndesiredSalaryUpperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_desiredSalaryRateType", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte desiredSalaryRateType
		{
			get
			{
				return this._desiredSalaryRateType;
			}
			set
			{
				if ((this._desiredSalaryRateType != value))
				{
					this.OndesiredSalaryRateTypeChanging(value);
					this.SendPropertyChanging();
					this._desiredSalaryRateType = value;
					this.SendPropertyChanged("desiredSalaryRateType");
					this.OndesiredSalaryRateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relocationPreference", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte relocationPreference
		{
			get
			{
				return this._relocationPreference;
			}
			set
			{
				if ((this._relocationPreference != value))
				{
					this.OnrelocationPreferenceChanging(value);
					this.SendPropertyChanging();
					this._relocationPreference = value;
					this.SendPropertyChanged("relocationPreference");
					this.OnrelocationPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaryId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> diaryId
		{
			get
			{
				return this._diaryId;
			}
			set
			{
				if ((this._diaryId != value))
				{
					if (this._CandidateDiaryEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndiaryIdChanging(value);
					this.SendPropertyChanging();
					this._diaryId = value;
					this.SendPropertyChanged("diaryId");
					this.OndiaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_highestEducationLevel", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> highestEducationLevel
		{
			get
			{
				return this._highestEducationLevel;
			}
			set
			{
				if ((this._highestEducationLevel != value))
				{
					this.OnhighestEducationLevelChanging(value);
					this.SendPropertyChanging();
					this._highestEducationLevel = value;
					this.SendPropertyChanged("highestEducationLevel");
					this.OnhighestEducationLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recentSeniority", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> recentSeniority
		{
			get
			{
				return this._recentSeniority;
			}
			set
			{
				if ((this._recentSeniority != value))
				{
					this.OnrecentSeniorityChanging(value);
					this.SendPropertyChanging();
					this._recentSeniority = value;
					this.SendPropertyChanged("recentSeniority");
					this.OnrecentSeniorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visaStatus", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> visaStatus
		{
			get
			{
				return this._visaStatus;
			}
			set
			{
				if ((this._visaStatus != value))
				{
					this.OnvisaStatusChanging(value);
					this.SendPropertyChanging();
					this._visaStatus = value;
					this.SendPropertyChanged("visaStatus");
					this.OnvisaStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recentProfession", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> recentProfession
		{
			get
			{
				return this._recentProfession;
			}
			set
			{
				if ((this._recentProfession != value))
				{
					this.OnrecentProfessionChanging(value);
					this.SendPropertyChanging();
					this._recentProfession = value;
					this.SendPropertyChanged("recentProfession");
					this.OnrecentProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastEditedTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastEditedTime
		{
			get
			{
				return this._lastEditedTime;
			}
			set
			{
				if ((this._lastEditedTime != value))
				{
					this.OnlastEditedTimeChanging(value);
					this.SendPropertyChanging();
					this._lastEditedTime = value;
					this.SendPropertyChanged("lastEditedTime");
					this.OnlastEditedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateWorkflowEntity", Storage="_CandidateWorkflowEntity", ThisKey="id", OtherKey="candidateId", IsUnique=true, IsForeignKey=false)]
		public CandidateWorkflowEntity CandidateWorkflowEntity
		{
			get
			{
				return this._CandidateWorkflowEntity.Entity;
			}
			set
			{
				CandidateWorkflowEntity previousValue = this._CandidateWorkflowEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateWorkflowEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateWorkflowEntity.Entity = null;
						previousValue.CandidateEntity = null;
					}
					this._CandidateWorkflowEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateEntity = this;
					}
					this.SendPropertyChanged("CandidateWorkflowEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_RelocationLocationEntity", Storage="_RelocationLocationEntities", ThisKey="id", OtherKey="candidateId")]
		public EntitySet<RelocationLocationEntity> RelocationLocationEntities
		{
			get
			{
				return this._RelocationLocationEntities;
			}
			set
			{
				this._RelocationLocationEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateIndustryEntity", Storage="_CandidateIndustryEntities", ThisKey="id", OtherKey="candidateId")]
		public EntitySet<CandidateIndustryEntity> CandidateIndustryEntities
		{
			get
			{
				return this._CandidateIndustryEntities;
			}
			set
			{
				this._CandidateIndustryEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateResumeEntity", Storage="_CandidateResumeEntities", ThisKey="id", OtherKey="candidateId")]
		public EntitySet<CandidateResumeEntity> CandidateResumeEntities
		{
			get
			{
				return this._CandidateResumeEntities;
			}
			set
			{
				this._CandidateResumeEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateEntity_CandidateResumeFileEntity", Storage="_CandidateResumeFileEntities", ThisKey="id", OtherKey="candidateId")]
		public EntitySet<CandidateResumeFileEntity> CandidateResumeFileEntities
		{
			get
			{
				return this._CandidateResumeFileEntities;
			}
			set
			{
				this._CandidateResumeFileEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CandidateDiaryEntity_CandidateEntity", Storage="_CandidateDiaryEntity", ThisKey="diaryId", OtherKey="id", IsForeignKey=true)]
		public CandidateDiaryEntity CandidateDiaryEntity
		{
			get
			{
				return this._CandidateDiaryEntity.Entity;
			}
			set
			{
				CandidateDiaryEntity previousValue = this._CandidateDiaryEntity.Entity;
				if (((previousValue != value) 
							|| (this._CandidateDiaryEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CandidateDiaryEntity.Entity = null;
						previousValue.CandidateEntities.Remove(this);
					}
					this._CandidateDiaryEntity.Entity = value;
					if ((value != null))
					{
						value.CandidateEntities.Add(this);
						this._diaryId = value.id;
					}
					else
					{
						this._diaryId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("CandidateDiaryEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RelocationLocationEntities(RelocationLocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = this;
		}
		
		private void detach_RelocationLocationEntities(RelocationLocationEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = null;
		}
		
		private void attach_CandidateIndustryEntities(CandidateIndustryEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = this;
		}
		
		private void detach_CandidateIndustryEntities(CandidateIndustryEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = null;
		}
		
		private void attach_CandidateResumeEntities(CandidateResumeEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = this;
		}
		
		private void detach_CandidateResumeEntities(CandidateResumeEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = null;
		}
		
		private void attach_CandidateResumeFileEntities(CandidateResumeFileEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = this;
		}
		
		private void detach_CandidateResumeFileEntities(CandidateResumeFileEntity entity)
		{
			this.SendPropertyChanging();
			entity.CandidateEntity = null;
		}
	}
	
	public partial class SplitGuidsResult
	{
		
		private System.Nullable<System.Guid> _value;
		
		public SplitGuidsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
