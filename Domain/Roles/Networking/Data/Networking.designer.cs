#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Domain.Roles.Networking.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class NetworkingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNetworkLinkEntity(NetworkLinkEntity instance);
    partial void UpdateNetworkLinkEntity(NetworkLinkEntity instance);
    partial void DeleteNetworkLinkEntity(NetworkLinkEntity instance);
    partial void InsertNetworkInvitationEntity(NetworkInvitationEntity instance);
    partial void UpdateNetworkInvitationEntity(NetworkInvitationEntity instance);
    partial void DeleteNetworkInvitationEntity(NetworkInvitationEntity instance);
    partial void InsertUserToUserRequestEntity(UserToUserRequestEntity instance);
    partial void UpdateUserToUserRequestEntity(UserToUserRequestEntity instance);
    partial void DeleteUserToUserRequestEntity(UserToUserRequestEntity instance);
    partial void InsertIgnoredNetworkMatchEntity(IgnoredNetworkMatchEntity instance);
    partial void UpdateIgnoredNetworkMatchEntity(IgnoredNetworkMatchEntity instance);
    partial void DeleteIgnoredNetworkMatchEntity(IgnoredNetworkMatchEntity instance);
    #endregion
		
		public NetworkingDataContext() : 
				base(global::LinkMe.Domain.Roles.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NetworkingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<NetworkLinkEntity> NetworkLinkEntities
		{
			get
			{
				return this.GetTable<NetworkLinkEntity>();
			}
		}
		
		internal System.Data.Linq.Table<NetworkInvitationEntity> NetworkInvitationEntities
		{
			get
			{
				return this.GetTable<NetworkInvitationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserToUserRequestEntity> UserToUserRequestEntities
		{
			get
			{
				return this.GetTable<UserToUserRequestEntity>();
			}
		}
		
		internal System.Data.Linq.Table<IgnoredNetworkMatchEntity> IgnoredNetworkMatchEntities
		{
			get
			{
				return this.GetTable<IgnoredNetworkMatchEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SplitGuids", IsComposable=true)]
		public IQueryable<SplitGuidsResult> SplitGuids([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string delimiter, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string input)
		{
			return this.CreateMethodCallQuery<SplitGuidsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), delimiter, input);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetworkLink")]
	internal partial class NetworkLinkEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _fromNetworkerId;
		
		private System.Guid _toNetworkerId;
		
		private System.DateTime _addedTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfromNetworkerIdChanging(System.Guid value);
    partial void OnfromNetworkerIdChanged();
    partial void OntoNetworkerIdChanging(System.Guid value);
    partial void OntoNetworkerIdChanged();
    partial void OnaddedTimeChanging(System.DateTime value);
    partial void OnaddedTimeChanged();
    #endregion
		
		public NetworkLinkEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fromNetworkerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid fromNetworkerId
		{
			get
			{
				return this._fromNetworkerId;
			}
			set
			{
				if ((this._fromNetworkerId != value))
				{
					this.OnfromNetworkerIdChanging(value);
					this.SendPropertyChanging();
					this._fromNetworkerId = value;
					this.SendPropertyChanged("fromNetworkerId");
					this.OnfromNetworkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toNetworkerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid toNetworkerId
		{
			get
			{
				return this._toNetworkerId;
			}
			set
			{
				if ((this._toNetworkerId != value))
				{
					this.OntoNetworkerIdChanging(value);
					this.SendPropertyChanging();
					this._toNetworkerId = value;
					this.SendPropertyChanged("toNetworkerId");
					this.OntoNetworkerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addedTime", DbType="DateTime NOT NULL")]
		public System.DateTime addedTime
		{
			get
			{
				return this._addedTime;
			}
			set
			{
				if ((this._addedTime != value))
				{
					this.OnaddedTimeChanging(value);
					this.SendPropertyChanging();
					this._addedTime = value;
					this.SendPropertyChanged("addedTime");
					this.OnaddedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NetworkInvitation")]
	internal partial class NetworkInvitationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _inviteeEmailAddress;
		
		private System.Guid _inviterId;
		
		private System.Nullable<System.Guid> _inviteeId;
		
		private System.Nullable<System.Guid> _donationRequestId;
		
		private EntityRef<UserToUserRequestEntity> _UserToUserRequestEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OninviteeEmailAddressChanging(string value);
    partial void OninviteeEmailAddressChanged();
    partial void OninviterIdChanging(System.Guid value);
    partial void OninviterIdChanged();
    partial void OninviteeIdChanging(System.Nullable<System.Guid> value);
    partial void OninviteeIdChanged();
    partial void OndonationRequestIdChanging(System.Nullable<System.Guid> value);
    partial void OndonationRequestIdChanged();
    #endregion
		
		public NetworkInvitationEntity()
		{
			this._UserToUserRequestEntity = default(EntityRef<UserToUserRequestEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._UserToUserRequestEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inviteeEmailAddress", DbType="NVarChar(320)")]
		public string inviteeEmailAddress
		{
			get
			{
				return this._inviteeEmailAddress;
			}
			set
			{
				if ((this._inviteeEmailAddress != value))
				{
					this.OninviteeEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._inviteeEmailAddress = value;
					this.SendPropertyChanged("inviteeEmailAddress");
					this.OninviteeEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inviterId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid inviterId
		{
			get
			{
				return this._inviterId;
			}
			set
			{
				if ((this._inviterId != value))
				{
					this.OninviterIdChanging(value);
					this.SendPropertyChanging();
					this._inviterId = value;
					this.SendPropertyChanged("inviterId");
					this.OninviterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inviteeId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> inviteeId
		{
			get
			{
				return this._inviteeId;
			}
			set
			{
				if ((this._inviteeId != value))
				{
					this.OninviteeIdChanging(value);
					this.SendPropertyChanging();
					this._inviteeId = value;
					this.SendPropertyChanged("inviteeId");
					this.OninviteeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donationRequestId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> donationRequestId
		{
			get
			{
				return this._donationRequestId;
			}
			set
			{
				if ((this._donationRequestId != value))
				{
					this.OndonationRequestIdChanging(value);
					this.SendPropertyChanging();
					this._donationRequestId = value;
					this.SendPropertyChanged("donationRequestId");
					this.OndonationRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserToUserRequestEntity_NetworkInvitationEntity", Storage="_UserToUserRequestEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public UserToUserRequestEntity UserToUserRequestEntity
		{
			get
			{
				return this._UserToUserRequestEntity.Entity;
			}
			set
			{
				UserToUserRequestEntity previousValue = this._UserToUserRequestEntity.Entity;
				if (((previousValue != value) 
							|| (this._UserToUserRequestEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserToUserRequestEntity.Entity = null;
						previousValue.NetworkInvitationEntity = null;
					}
					this._UserToUserRequestEntity.Entity = value;
					if ((value != null))
					{
						value.NetworkInvitationEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("UserToUserRequestEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserToUserRequest")]
	internal partial class UserToUserRequestEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _actionedTime;
		
		private System.Nullable<System.DateTime> _firstSentTime;
		
		private byte _flags;
		
		private System.Nullable<System.DateTime> _lastSentTime;
		
		private string _messageText;
		
		private byte _status;
		
		private EntityRef<NetworkInvitationEntity> _NetworkInvitationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnactionedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnactionedTimeChanged();
    partial void OnfirstSentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnfirstSentTimeChanged();
    partial void OnflagsChanging(byte value);
    partial void OnflagsChanged();
    partial void OnlastSentTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastSentTimeChanged();
    partial void OnmessageTextChanging(string value);
    partial void OnmessageTextChanged();
    partial void OnstatusChanging(byte value);
    partial void OnstatusChanged();
    #endregion
		
		public UserToUserRequestEntity()
		{
			this._NetworkInvitationEntity = default(EntityRef<NetworkInvitationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actionedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> actionedTime
		{
			get
			{
				return this._actionedTime;
			}
			set
			{
				if ((this._actionedTime != value))
				{
					this.OnactionedTimeChanging(value);
					this.SendPropertyChanging();
					this._actionedTime = value;
					this.SendPropertyChanged("actionedTime");
					this.OnactionedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstSentTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> firstSentTime
		{
			get
			{
				return this._firstSentTime;
			}
			set
			{
				if ((this._firstSentTime != value))
				{
					this.OnfirstSentTimeChanging(value);
					this.SendPropertyChanging();
					this._firstSentTime = value;
					this.SendPropertyChanged("firstSentTime");
					this.OnfirstSentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="TinyInt NOT NULL")]
		public byte flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastSentTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastSentTime
		{
			get
			{
				return this._lastSentTime;
			}
			set
			{
				if ((this._lastSentTime != value))
				{
					this.OnlastSentTimeChanging(value);
					this.SendPropertyChanging();
					this._lastSentTime = value;
					this.SendPropertyChanged("lastSentTime");
					this.OnlastSentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageText", DbType="NVarChar(2000)")]
		public string messageText
		{
			get
			{
				return this._messageText;
			}
			set
			{
				if ((this._messageText != value))
				{
					this.OnmessageTextChanging(value);
					this.SendPropertyChanging();
					this._messageText = value;
					this.SendPropertyChanged("messageText");
					this.OnmessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="TinyInt NOT NULL")]
		public byte status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserToUserRequestEntity_NetworkInvitationEntity", Storage="_NetworkInvitationEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public NetworkInvitationEntity NetworkInvitationEntity
		{
			get
			{
				return this._NetworkInvitationEntity.Entity;
			}
			set
			{
				NetworkInvitationEntity previousValue = this._NetworkInvitationEntity.Entity;
				if (((previousValue != value) 
							|| (this._NetworkInvitationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NetworkInvitationEntity.Entity = null;
						previousValue.UserToUserRequestEntity = null;
					}
					this._NetworkInvitationEntity.Entity = value;
					if ((value != null))
					{
						value.UserToUserRequestEntity = this;
					}
					this.SendPropertyChanged("NetworkInvitationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IgnoredNetworkMatch")]
	internal partial class IgnoredNetworkMatchEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private byte _category;
		
		private System.DateTime _time;
		
		private System.Guid _ignorerId;
		
		private System.Guid _ignoredId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncategoryChanging(byte value);
    partial void OncategoryChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnignorerIdChanging(System.Guid value);
    partial void OnignorerIdChanged();
    partial void OnignoredIdChanging(System.Guid value);
    partial void OnignoredIdChanged();
    #endregion
		
		public IgnoredNetworkMatchEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="TinyInt NOT NULL")]
		public byte category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ignorerId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ignorerId
		{
			get
			{
				return this._ignorerId;
			}
			set
			{
				if ((this._ignorerId != value))
				{
					this.OnignorerIdChanging(value);
					this.SendPropertyChanging();
					this._ignorerId = value;
					this.SendPropertyChanged("ignorerId");
					this.OnignorerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ignoredId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ignoredId
		{
			get
			{
				return this._ignoredId;
			}
			set
			{
				if ((this._ignoredId != value))
				{
					this.OnignoredIdChanging(value);
					this.SendPropertyChanging();
					this._ignoredId = value;
					this.SendPropertyChanged("ignoredId");
					this.OnignoredIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SplitGuidsResult
	{
		
		private System.Nullable<System.Guid> _value;
		
		public SplitGuidsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
