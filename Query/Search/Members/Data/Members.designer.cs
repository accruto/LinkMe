#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5456
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Query.Search.Members.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class MembersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertResumeSearchResultSetEntity(ResumeSearchResultSetEntity instance);
    partial void UpdateResumeSearchResultSetEntity(ResumeSearchResultSetEntity instance);
    partial void DeleteResumeSearchResultSetEntity(ResumeSearchResultSetEntity instance);
    partial void InsertRegisteredUserEntity(RegisteredUserEntity instance);
    partial void UpdateRegisteredUserEntity(RegisteredUserEntity instance);
    partial void DeleteRegisteredUserEntity(RegisteredUserEntity instance);
    partial void InsertCommunityMemberEntity(CommunityMemberEntity instance);
    partial void UpdateCommunityMemberEntity(CommunityMemberEntity instance);
    partial void DeleteCommunityMemberEntity(CommunityMemberEntity instance);
    partial void InsertResumeSearchCriteriaEntity(ResumeSearchCriteriaEntity instance);
    partial void UpdateResumeSearchCriteriaEntity(ResumeSearchCriteriaEntity instance);
    partial void DeleteResumeSearchCriteriaEntity(ResumeSearchCriteriaEntity instance);
    partial void InsertResumeSearchCriteriaSetEntity(ResumeSearchCriteriaSetEntity instance);
    partial void UpdateResumeSearchCriteriaSetEntity(ResumeSearchCriteriaSetEntity instance);
    partial void DeleteResumeSearchCriteriaSetEntity(ResumeSearchCriteriaSetEntity instance);
    partial void InsertResumeSearchResultEntity(ResumeSearchResultEntity instance);
    partial void UpdateResumeSearchResultEntity(ResumeSearchResultEntity instance);
    partial void DeleteResumeSearchResultEntity(ResumeSearchResultEntity instance);
    partial void InsertResumeEntity(ResumeEntity instance);
    partial void UpdateResumeEntity(ResumeEntity instance);
    partial void DeleteResumeEntity(ResumeEntity instance);
    partial void InsertAddressEntity(AddressEntity instance);
    partial void UpdateAddressEntity(AddressEntity instance);
    partial void DeleteAddressEntity(AddressEntity instance);
    partial void InsertLocationReferenceEntity(LocationReferenceEntity instance);
    partial void UpdateLocationReferenceEntity(LocationReferenceEntity instance);
    partial void DeleteLocationReferenceEntity(LocationReferenceEntity instance);
    partial void InsertResumeSearchEntity(ResumeSearchEntity instance);
    partial void UpdateResumeSearchEntity(ResumeSearchEntity instance);
    partial void DeleteResumeSearchEntity(ResumeSearchEntity instance);
    partial void InsertSavedResumeSearchEntity(SavedResumeSearchEntity instance);
    partial void UpdateSavedResumeSearchEntity(SavedResumeSearchEntity instance);
    partial void DeleteSavedResumeSearchEntity(SavedResumeSearchEntity instance);
    partial void InsertMemberIndexingEntity(MemberIndexingEntity instance);
    partial void UpdateMemberIndexingEntity(MemberIndexingEntity instance);
    partial void DeleteMemberIndexingEntity(MemberIndexingEntity instance);
    partial void InsertMemberEntity(MemberEntity instance);
    partial void UpdateMemberEntity(MemberEntity instance);
    partial void DeleteMemberEntity(MemberEntity instance);
    #endregion
		
		public MembersDataContext() : 
				base(global::LinkMe.Query.Search.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MembersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MembersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MembersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MembersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<ResumeSearchResultSetEntity> ResumeSearchResultSetEntities
		{
			get
			{
				return this.GetTable<ResumeSearchResultSetEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RegisteredUserEntity> RegisteredUserEntities
		{
			get
			{
				return this.GetTable<RegisteredUserEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunityMemberEntity> CommunityMemberEntities
		{
			get
			{
				return this.GetTable<CommunityMemberEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ResumeSearchCriteriaEntity> ResumeSearchCriteriaEntities
		{
			get
			{
				return this.GetTable<ResumeSearchCriteriaEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ResumeSearchCriteriaSetEntity> ResumeSearchCriteriaSetEntities
		{
			get
			{
				return this.GetTable<ResumeSearchCriteriaSetEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ResumeSearchResultEntity> ResumeSearchResultEntities
		{
			get
			{
				return this.GetTable<ResumeSearchResultEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ResumeEntity> ResumeEntities
		{
			get
			{
				return this.GetTable<ResumeEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AddressEntity> AddressEntities
		{
			get
			{
				return this.GetTable<AddressEntity>();
			}
		}
		
		internal System.Data.Linq.Table<LocationReferenceEntity> LocationReferenceEntities
		{
			get
			{
				return this.GetTable<LocationReferenceEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ResumeSearchEntity> ResumeSearchEntities
		{
			get
			{
				return this.GetTable<ResumeSearchEntity>();
			}
		}
		
		internal System.Data.Linq.Table<SavedResumeSearchEntity> SavedResumeSearchEntities
		{
			get
			{
				return this.GetTable<SavedResumeSearchEntity>();
			}
		}
		
		internal System.Data.Linq.Table<MemberIndexingEntity> MemberIndexingEntities
		{
			get
			{
				return this.GetTable<MemberIndexingEntity>();
			}
		}
		
		internal System.Data.Linq.Table<MemberEntity> MemberEntities
		{
			get
			{
				return this.GetTable<MemberEntity>();
			}
		}
		
		[Function(Name="dbo.SplitGuids", IsComposable=true)]
		public IQueryable<SplitGuidsResult> SplitGuids([Parameter(DbType="NVarChar(MAX)")] string delimiter, [Parameter(DbType="NVarChar(MAX)")] string input)
		{
			return this.CreateMethodCallQuery<SplitGuidsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), delimiter, input);
		}
		
		[Function(Name="dbo.MemberSetModified")]
		public int MemberSetModified([Parameter(DbType="UniqueIdentifier")] System.Nullable<System.Guid> memberId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberId);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.ResumeSearchResultSet")]
	internal partial class ResumeSearchResultSetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private int _count;
		
		private EntitySet<ResumeSearchResultEntity> _ResumeSearchResultEntities;
		
		private EntitySet<ResumeSearchEntity> _ResumeSearchEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncountChanging(int value);
    partial void OncountChanged();
    #endregion
		
		public ResumeSearchResultSetEntity()
		{
			this._ResumeSearchResultEntities = new EntitySet<ResumeSearchResultEntity>(new Action<ResumeSearchResultEntity>(this.attach_ResumeSearchResultEntities), new Action<ResumeSearchResultEntity>(this.detach_ResumeSearchResultEntities));
			this._ResumeSearchEntities = new EntitySet<ResumeSearchEntity>(new Action<ResumeSearchEntity>(this.attach_ResumeSearchEntities), new Action<ResumeSearchEntity>(this.detach_ResumeSearchEntities));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_count", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this.OncountChanging(value);
					this.SendPropertyChanging();
					this._count = value;
					this.SendPropertyChanged("count");
					this.OncountChanged();
				}
			}
		}
		
		[Association(Name="ResumeSearchResultSetEntity_ResumeSearchResultEntity", Storage="_ResumeSearchResultEntities", ThisKey="id", OtherKey="setId")]
		public EntitySet<ResumeSearchResultEntity> ResumeSearchResultEntities
		{
			get
			{
				return this._ResumeSearchResultEntities;
			}
			set
			{
				this._ResumeSearchResultEntities.Assign(value);
			}
		}
		
		[Association(Name="ResumeSearchResultSetEntity_ResumeSearchEntity", Storage="_ResumeSearchEntities", ThisKey="id", OtherKey="resultSetId")]
		public EntitySet<ResumeSearchEntity> ResumeSearchEntities
		{
			get
			{
				return this._ResumeSearchEntities;
			}
			set
			{
				this._ResumeSearchEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResumeSearchResultEntities(ResumeSearchResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchResultSetEntity = this;
		}
		
		private void detach_ResumeSearchResultEntities(ResumeSearchResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchResultSetEntity = null;
		}
		
		private void attach_ResumeSearchEntities(ResumeSearchEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchResultSetEntity = this;
		}
		
		private void detach_ResumeSearchEntities(ResumeSearchEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchResultSetEntity = null;
		}
	}
	
	[Table(Name="dbo.RegisteredUser")]
	internal partial class RegisteredUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _loginId;
		
		private System.DateTime _createdTime;
		
		private string _emailAddress;
		
		private string _firstName;
		
		private string _lastName;
		
		private short _flags;
		
		private string _passwordHash;
		
		private EntityRef<MemberEntity> _MemberEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnloginIdChanging(string value);
    partial void OnloginIdChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnflagsChanging(short value);
    partial void OnflagsChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    #endregion
		
		public RegisteredUserEntity()
		{
			this._MemberEntity = default(EntityRef<MemberEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_loginId", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string loginId
		{
			get
			{
				return this._loginId;
			}
			set
			{
				if ((this._loginId != value))
				{
					this.OnloginIdChanging(value);
					this.SendPropertyChanging();
					this._loginId = value;
					this.SendPropertyChanged("loginId");
					this.OnloginIdChanged();
				}
			}
		}
		
		[Column(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[Column(Storage="_emailAddress", DbType="NVarChar(320) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		[Column(Storage="_firstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[Column(Storage="_lastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[Column(Storage="_flags", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[Column(Storage="_passwordHash", DbType="Char(24)", UpdateCheck=UpdateCheck.Never)]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[Association(Name="RegisteredUserEntity_MemberEntity", Storage="_MemberEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public MemberEntity MemberEntity
		{
			get
			{
				return this._MemberEntity.Entity;
			}
			set
			{
				MemberEntity previousValue = this._MemberEntity.Entity;
				if (((previousValue != value) 
							|| (this._MemberEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._MemberEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("MemberEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CommunityMember")]
	internal partial class CommunityMemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _primaryCommunityId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnprimaryCommunityIdChanging(System.Guid value);
    partial void OnprimaryCommunityIdChanged();
    #endregion
		
		public CommunityMemberEntity()
		{
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_primaryCommunityId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid primaryCommunityId
		{
			get
			{
				return this._primaryCommunityId;
			}
			set
			{
				if ((this._primaryCommunityId != value))
				{
					this.OnprimaryCommunityIdChanging(value);
					this.SendPropertyChanging();
					this._primaryCommunityId = value;
					this.SendPropertyChanged("primaryCommunityId");
					this.OnprimaryCommunityIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ResumeSearchCriteria")]
	internal partial class ResumeSearchCriteriaEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _setId;
		
		private string _name;
		
		private string _value;
		
		private EntityRef<ResumeSearchCriteriaSetEntity> _ResumeSearchCriteriaSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsetIdChanging(System.Guid value);
    partial void OnsetIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public ResumeSearchCriteriaEntity()
		{
			this._ResumeSearchCriteriaSetEntity = default(EntityRef<ResumeSearchCriteriaSetEntity>);
			OnCreated();
		}
		
		[Column(Storage="_setId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid setId
		{
			get
			{
				return this._setId;
			}
			set
			{
				if ((this._setId != value))
				{
					if (this._ResumeSearchCriteriaSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsetIdChanging(value);
					this.SendPropertyChanging();
					this._setId = value;
					this.SendPropertyChanged("setId");
					this.OnsetIdChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="VarChar(19) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_value", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[Association(Name="ResumeSearchCriteriaSetEntity_ResumeSearchCriteriaEntity", Storage="_ResumeSearchCriteriaSetEntity", ThisKey="setId", OtherKey="id", IsForeignKey=true)]
		public ResumeSearchCriteriaSetEntity ResumeSearchCriteriaSetEntity
		{
			get
			{
				return this._ResumeSearchCriteriaSetEntity.Entity;
			}
			set
			{
				ResumeSearchCriteriaSetEntity previousValue = this._ResumeSearchCriteriaSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ResumeSearchCriteriaSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResumeSearchCriteriaSetEntity.Entity = null;
						previousValue.ResumeSearchCriteriaEntities.Remove(this);
					}
					this._ResumeSearchCriteriaSetEntity.Entity = value;
					if ((value != null))
					{
						value.ResumeSearchCriteriaEntities.Add(this);
						this._setId = value.id;
					}
					else
					{
						this._setId = default(System.Guid);
					}
					this.SendPropertyChanged("ResumeSearchCriteriaSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.ResumeSearchCriteriaSet")]
	internal partial class ResumeSearchCriteriaSetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _type;
		
		private EntitySet<ResumeSearchCriteriaEntity> _ResumeSearchCriteriaEntities;
		
		private EntitySet<ResumeSearchEntity> _ResumeSearchEntities;
		
		private EntitySet<SavedResumeSearchEntity> _SavedResumeSearchEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public ResumeSearchCriteriaSetEntity()
		{
			this._ResumeSearchCriteriaEntities = new EntitySet<ResumeSearchCriteriaEntity>(new Action<ResumeSearchCriteriaEntity>(this.attach_ResumeSearchCriteriaEntities), new Action<ResumeSearchCriteriaEntity>(this.detach_ResumeSearchCriteriaEntities));
			this._ResumeSearchEntities = new EntitySet<ResumeSearchEntity>(new Action<ResumeSearchEntity>(this.attach_ResumeSearchEntities), new Action<ResumeSearchEntity>(this.detach_ResumeSearchEntities));
			this._SavedResumeSearchEntities = new EntitySet<SavedResumeSearchEntity>(new Action<SavedResumeSearchEntity>(this.attach_SavedResumeSearchEntities), new Action<SavedResumeSearchEntity>(this.detach_SavedResumeSearchEntities));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_type", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[Association(Name="ResumeSearchCriteriaSetEntity_ResumeSearchCriteriaEntity", Storage="_ResumeSearchCriteriaEntities", ThisKey="id", OtherKey="setId")]
		public EntitySet<ResumeSearchCriteriaEntity> ResumeSearchCriteriaEntities
		{
			get
			{
				return this._ResumeSearchCriteriaEntities;
			}
			set
			{
				this._ResumeSearchCriteriaEntities.Assign(value);
			}
		}
		
		[Association(Name="ResumeSearchCriteriaSetEntity_ResumeSearchEntity", Storage="_ResumeSearchEntities", ThisKey="id", OtherKey="criteriaSetId")]
		public EntitySet<ResumeSearchEntity> ResumeSearchEntities
		{
			get
			{
				return this._ResumeSearchEntities;
			}
			set
			{
				this._ResumeSearchEntities.Assign(value);
			}
		}
		
		[Association(Name="ResumeSearchCriteriaSetEntity_SavedResumeSearchEntity", Storage="_SavedResumeSearchEntities", ThisKey="id", OtherKey="criteriaSetId")]
		public EntitySet<SavedResumeSearchEntity> SavedResumeSearchEntities
		{
			get
			{
				return this._SavedResumeSearchEntities;
			}
			set
			{
				this._SavedResumeSearchEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResumeSearchCriteriaEntities(ResumeSearchCriteriaEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchCriteriaSetEntity = this;
		}
		
		private void detach_ResumeSearchCriteriaEntities(ResumeSearchCriteriaEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchCriteriaSetEntity = null;
		}
		
		private void attach_ResumeSearchEntities(ResumeSearchEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchCriteriaSetEntity = this;
		}
		
		private void detach_ResumeSearchEntities(ResumeSearchEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchCriteriaSetEntity = null;
		}
		
		private void attach_SavedResumeSearchEntities(SavedResumeSearchEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchCriteriaSetEntity = this;
		}
		
		private void detach_SavedResumeSearchEntities(SavedResumeSearchEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeSearchCriteriaSetEntity = null;
		}
	}
	
	[Table(Name="dbo.ResumeSearchResult")]
	internal partial class ResumeSearchResultEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _setId;
		
		private short _rank;
		
		private System.Guid _resumeId;
		
		private EntityRef<ResumeSearchResultSetEntity> _ResumeSearchResultSetEntity;
		
		private EntityRef<ResumeEntity> _ResumeEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsetIdChanging(System.Guid value);
    partial void OnsetIdChanged();
    partial void OnrankChanging(short value);
    partial void OnrankChanged();
    partial void OnresumeIdChanging(System.Guid value);
    partial void OnresumeIdChanged();
    #endregion
		
		public ResumeSearchResultEntity()
		{
			this._ResumeSearchResultSetEntity = default(EntityRef<ResumeSearchResultSetEntity>);
			this._ResumeEntity = default(EntityRef<ResumeEntity>);
			OnCreated();
		}
		
		[Column(Storage="_setId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid setId
		{
			get
			{
				return this._setId;
			}
			set
			{
				if ((this._setId != value))
				{
					if (this._ResumeSearchResultSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsetIdChanging(value);
					this.SendPropertyChanging();
					this._setId = value;
					this.SendPropertyChanged("setId");
					this.OnsetIdChanged();
				}
			}
		}
		
		[Column(Storage="_rank", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public short rank
		{
			get
			{
				return this._rank;
			}
			set
			{
				if ((this._rank != value))
				{
					this.OnrankChanging(value);
					this.SendPropertyChanging();
					this._rank = value;
					this.SendPropertyChanged("rank");
					this.OnrankChanged();
				}
			}
		}
		
		[Column(Storage="_resumeId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid resumeId
		{
			get
			{
				return this._resumeId;
			}
			set
			{
				if ((this._resumeId != value))
				{
					if (this._ResumeEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnresumeIdChanging(value);
					this.SendPropertyChanging();
					this._resumeId = value;
					this.SendPropertyChanged("resumeId");
					this.OnresumeIdChanged();
				}
			}
		}
		
		[Association(Name="ResumeSearchResultSetEntity_ResumeSearchResultEntity", Storage="_ResumeSearchResultSetEntity", ThisKey="setId", OtherKey="id", IsForeignKey=true)]
		public ResumeSearchResultSetEntity ResumeSearchResultSetEntity
		{
			get
			{
				return this._ResumeSearchResultSetEntity.Entity;
			}
			set
			{
				ResumeSearchResultSetEntity previousValue = this._ResumeSearchResultSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ResumeSearchResultSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResumeSearchResultSetEntity.Entity = null;
						previousValue.ResumeSearchResultEntities.Remove(this);
					}
					this._ResumeSearchResultSetEntity.Entity = value;
					if ((value != null))
					{
						value.ResumeSearchResultEntities.Add(this);
						this._setId = value.id;
					}
					else
					{
						this._setId = default(System.Guid);
					}
					this.SendPropertyChanged("ResumeSearchResultSetEntity");
				}
			}
		}
		
		[Association(Name="ResumeEntity_ResumeSearchResultEntity", Storage="_ResumeEntity", ThisKey="resumeId", OtherKey="id", IsForeignKey=true)]
		public ResumeEntity ResumeEntity
		{
			get
			{
				return this._ResumeEntity.Entity;
			}
			set
			{
				ResumeEntity previousValue = this._ResumeEntity.Entity;
				if (((previousValue != value) 
							|| (this._ResumeEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResumeEntity.Entity = null;
						previousValue.ResumeSearchResultEntities.Remove(this);
					}
					this._ResumeEntity.Entity = value;
					if ((value != null))
					{
						value.ResumeSearchResultEntities.Add(this);
						this._resumeId = value.id;
					}
					else
					{
						this._resumeId = default(System.Guid);
					}
					this.SendPropertyChanged("ResumeEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Resume")]
	internal partial class ResumeEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _lastEditedTime;
		
		private string _lensXml;
		
		private System.Guid _candidateId;
		
		private System.Nullable<System.Guid> _parsedFromFileId;
		
		private EntitySet<ResumeSearchResultEntity> _ResumeSearchResultEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnlastEditedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastEditedTimeChanged();
    partial void OnlensXmlChanging(string value);
    partial void OnlensXmlChanged();
    partial void OncandidateIdChanging(System.Guid value);
    partial void OncandidateIdChanged();
    partial void OnparsedFromFileIdChanging(System.Nullable<System.Guid> value);
    partial void OnparsedFromFileIdChanged();
    #endregion
		
		public ResumeEntity()
		{
			this._ResumeSearchResultEntities = new EntitySet<ResumeSearchResultEntity>(new Action<ResumeSearchResultEntity>(this.attach_ResumeSearchResultEntities), new Action<ResumeSearchResultEntity>(this.detach_ResumeSearchResultEntities));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_lastEditedTime", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> lastEditedTime
		{
			get
			{
				return this._lastEditedTime;
			}
			set
			{
				if ((this._lastEditedTime != value))
				{
					this.OnlastEditedTimeChanging(value);
					this.SendPropertyChanging();
					this._lastEditedTime = value;
					this.SendPropertyChanged("lastEditedTime");
					this.OnlastEditedTimeChanged();
				}
			}
		}
		
		[Column(Storage="_lensXml", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string lensXml
		{
			get
			{
				return this._lensXml;
			}
			set
			{
				if ((this._lensXml != value))
				{
					this.OnlensXmlChanging(value);
					this.SendPropertyChanging();
					this._lensXml = value;
					this.SendPropertyChanged("lensXml");
					this.OnlensXmlChanged();
				}
			}
		}
		
		[Column(Storage="_candidateId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid candidateId
		{
			get
			{
				return this._candidateId;
			}
			set
			{
				if ((this._candidateId != value))
				{
					this.OncandidateIdChanging(value);
					this.SendPropertyChanging();
					this._candidateId = value;
					this.SendPropertyChanged("candidateId");
					this.OncandidateIdChanged();
				}
			}
		}
		
		[Column(Storage="_parsedFromFileId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> parsedFromFileId
		{
			get
			{
				return this._parsedFromFileId;
			}
			set
			{
				if ((this._parsedFromFileId != value))
				{
					this.OnparsedFromFileIdChanging(value);
					this.SendPropertyChanging();
					this._parsedFromFileId = value;
					this.SendPropertyChanged("parsedFromFileId");
					this.OnparsedFromFileIdChanged();
				}
			}
		}
		
		[Association(Name="ResumeEntity_ResumeSearchResultEntity", Storage="_ResumeSearchResultEntities", ThisKey="id", OtherKey="resumeId")]
		public EntitySet<ResumeSearchResultEntity> ResumeSearchResultEntities
		{
			get
			{
				return this._ResumeSearchResultEntities;
			}
			set
			{
				this._ResumeSearchResultEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResumeSearchResultEntities(ResumeSearchResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeEntity = this;
		}
		
		private void detach_ResumeSearchResultEntities(ResumeSearchResultEntity entity)
		{
			this.SendPropertyChanging();
			entity.ResumeEntity = null;
		}
	}
	
	[Table(Name="dbo.Address")]
	internal partial class AddressEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _line1;
		
		private string _line2;
		
		private System.Nullable<System.Guid> _locationReferenceId;
		
		private EntitySet<MemberEntity> _MemberEntities;
		
		private EntityRef<LocationReferenceEntity> _LocationReferenceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Online1Changing(string value);
    partial void Online1Changed();
    partial void Online2Changing(string value);
    partial void Online2Changed();
    partial void OnlocationReferenceIdChanging(System.Nullable<System.Guid> value);
    partial void OnlocationReferenceIdChanged();
    #endregion
		
		public AddressEntity()
		{
			this._MemberEntities = new EntitySet<MemberEntity>(new Action<MemberEntity>(this.attach_MemberEntities), new Action<MemberEntity>(this.detach_MemberEntities));
			this._LocationReferenceEntity = default(EntityRef<LocationReferenceEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_line1", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string line1
		{
			get
			{
				return this._line1;
			}
			set
			{
				if ((this._line1 != value))
				{
					this.Online1Changing(value);
					this.SendPropertyChanging();
					this._line1 = value;
					this.SendPropertyChanged("line1");
					this.Online1Changed();
				}
			}
		}
		
		[Column(Storage="_line2", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string line2
		{
			get
			{
				return this._line2;
			}
			set
			{
				if ((this._line2 != value))
				{
					this.Online2Changing(value);
					this.SendPropertyChanging();
					this._line2 = value;
					this.SendPropertyChanged("line2");
					this.Online2Changed();
				}
			}
		}
		
		[Column(Storage="_locationReferenceId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> locationReferenceId
		{
			get
			{
				return this._locationReferenceId;
			}
			set
			{
				if ((this._locationReferenceId != value))
				{
					if (this._LocationReferenceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._locationReferenceId = value;
					this.SendPropertyChanged("locationReferenceId");
					this.OnlocationReferenceIdChanged();
				}
			}
		}
		
		[Association(Name="AddressEntity_MemberEntity", Storage="_MemberEntities", ThisKey="id", OtherKey="addressId")]
		public EntitySet<MemberEntity> MemberEntities
		{
			get
			{
				return this._MemberEntities;
			}
			set
			{
				this._MemberEntities.Assign(value);
			}
		}
		
		[Association(Name="LocationReferenceEntity_AddressEntity", Storage="_LocationReferenceEntity", ThisKey="locationReferenceId", OtherKey="id", IsForeignKey=true)]
		public LocationReferenceEntity LocationReferenceEntity
		{
			get
			{
				return this._LocationReferenceEntity.Entity;
			}
			set
			{
				LocationReferenceEntity previousValue = this._LocationReferenceEntity.Entity;
				if (((previousValue != value) 
							|| (this._LocationReferenceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocationReferenceEntity.Entity = null;
						previousValue.AddressEntities.Remove(this);
					}
					this._LocationReferenceEntity.Entity = value;
					if ((value != null))
					{
						value.AddressEntities.Add(this);
						this._locationReferenceId = value.id;
					}
					else
					{
						this._locationReferenceId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("LocationReferenceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberEntities(MemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.AddressEntity = this;
		}
		
		private void detach_MemberEntities(MemberEntity entity)
		{
			this.SendPropertyChanging();
			entity.AddressEntity = null;
		}
	}
	
	[Table(Name="dbo.LocationReference")]
	internal partial class LocationReferenceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _unstructuredLocation;
		
		private System.Nullable<int> _namedLocationId;
		
		private int _countrySubdivisionId;
		
		private System.Nullable<int> _localityId;
		
		private EntitySet<AddressEntity> _AddressEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnunstructuredLocationChanging(string value);
    partial void OnunstructuredLocationChanged();
    partial void OnnamedLocationIdChanging(System.Nullable<int> value);
    partial void OnnamedLocationIdChanged();
    partial void OncountrySubdivisionIdChanging(int value);
    partial void OncountrySubdivisionIdChanged();
    partial void OnlocalityIdChanging(System.Nullable<int> value);
    partial void OnlocalityIdChanged();
    #endregion
		
		public LocationReferenceEntity()
		{
			this._AddressEntities = new EntitySet<AddressEntity>(new Action<AddressEntity>(this.attach_AddressEntities), new Action<AddressEntity>(this.detach_AddressEntities));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_unstructuredLocation", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string unstructuredLocation
		{
			get
			{
				return this._unstructuredLocation;
			}
			set
			{
				if ((this._unstructuredLocation != value))
				{
					this.OnunstructuredLocationChanging(value);
					this.SendPropertyChanging();
					this._unstructuredLocation = value;
					this.SendPropertyChanged("unstructuredLocation");
					this.OnunstructuredLocationChanged();
				}
			}
		}
		
		[Column(Storage="_namedLocationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> namedLocationId
		{
			get
			{
				return this._namedLocationId;
			}
			set
			{
				if ((this._namedLocationId != value))
				{
					this.OnnamedLocationIdChanging(value);
					this.SendPropertyChanging();
					this._namedLocationId = value;
					this.SendPropertyChanged("namedLocationId");
					this.OnnamedLocationIdChanged();
				}
			}
		}
		
		[Column(Storage="_countrySubdivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int countrySubdivisionId
		{
			get
			{
				return this._countrySubdivisionId;
			}
			set
			{
				if ((this._countrySubdivisionId != value))
				{
					this.OncountrySubdivisionIdChanging(value);
					this.SendPropertyChanging();
					this._countrySubdivisionId = value;
					this.SendPropertyChanged("countrySubdivisionId");
					this.OncountrySubdivisionIdChanged();
				}
			}
		}
		
		[Column(Storage="_localityId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> localityId
		{
			get
			{
				return this._localityId;
			}
			set
			{
				if ((this._localityId != value))
				{
					this.OnlocalityIdChanging(value);
					this.SendPropertyChanging();
					this._localityId = value;
					this.SendPropertyChanged("localityId");
					this.OnlocalityIdChanged();
				}
			}
		}
		
		[Association(Name="LocationReferenceEntity_AddressEntity", Storage="_AddressEntities", ThisKey="id", OtherKey="locationReferenceId")]
		public EntitySet<AddressEntity> AddressEntities
		{
			get
			{
				return this._AddressEntities;
			}
			set
			{
				this._AddressEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressEntities(AddressEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = this;
		}
		
		private void detach_AddressEntities(AddressEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = null;
		}
	}
	
	[Table(Name="dbo.ResumeSearch")]
	internal partial class ResumeSearchEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _startTime;
		
		private System.Nullable<long> _duration;
		
		private string _context;
		
		private System.Guid _criteriaSetId;
		
		private System.Guid _resultSetId;
		
		private System.Nullable<System.Guid> _searcherId;
		
		private string _searcherIp;
		
		private System.Nullable<System.Guid> _savedSearchId;
		
		private System.Nullable<System.Guid> _channelId;
		
		private System.Nullable<System.Guid> _appId;
		
		private EntityRef<ResumeSearchCriteriaSetEntity> _ResumeSearchCriteriaSetEntity;
		
		private EntityRef<ResumeSearchResultSetEntity> _ResumeSearchResultSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnstartTimeChanging(System.DateTime value);
    partial void OnstartTimeChanged();
    partial void OndurationChanging(System.Nullable<long> value);
    partial void OndurationChanged();
    partial void OncontextChanging(string value);
    partial void OncontextChanged();
    partial void OncriteriaSetIdChanging(System.Guid value);
    partial void OncriteriaSetIdChanged();
    partial void OnresultSetIdChanging(System.Guid value);
    partial void OnresultSetIdChanged();
    partial void OnsearcherIdChanging(System.Nullable<System.Guid> value);
    partial void OnsearcherIdChanged();
    partial void OnsearcherIpChanging(string value);
    partial void OnsearcherIpChanged();
    partial void OnsavedSearchIdChanging(System.Nullable<System.Guid> value);
    partial void OnsavedSearchIdChanged();
    partial void OnchannelIdChanging(System.Nullable<System.Guid> value);
    partial void OnchannelIdChanged();
    partial void OnappIdChanging(System.Nullable<System.Guid> value);
    partial void OnappIdChanged();
    #endregion
		
		public ResumeSearchEntity()
		{
			this._ResumeSearchCriteriaSetEntity = default(EntityRef<ResumeSearchCriteriaSetEntity>);
			this._ResumeSearchResultSetEntity = default(EntityRef<ResumeSearchResultSetEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_startTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime startTime
		{
			get
			{
				return this._startTime;
			}
			set
			{
				if ((this._startTime != value))
				{
					this.OnstartTimeChanging(value);
					this.SendPropertyChanging();
					this._startTime = value;
					this.SendPropertyChanged("startTime");
					this.OnstartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_duration", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> duration
		{
			get
			{
				return this._duration;
			}
			set
			{
				if ((this._duration != value))
				{
					this.OndurationChanging(value);
					this.SendPropertyChanging();
					this._duration = value;
					this.SendPropertyChanged("duration");
					this.OndurationChanged();
				}
			}
		}
		
		[Column(Storage="_context", DbType="VarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string context
		{
			get
			{
				return this._context;
			}
			set
			{
				if ((this._context != value))
				{
					this.OncontextChanging(value);
					this.SendPropertyChanging();
					this._context = value;
					this.SendPropertyChanged("context");
					this.OncontextChanged();
				}
			}
		}
		
		[Column(Storage="_criteriaSetId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid criteriaSetId
		{
			get
			{
				return this._criteriaSetId;
			}
			set
			{
				if ((this._criteriaSetId != value))
				{
					if (this._ResumeSearchCriteriaSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncriteriaSetIdChanging(value);
					this.SendPropertyChanging();
					this._criteriaSetId = value;
					this.SendPropertyChanged("criteriaSetId");
					this.OncriteriaSetIdChanged();
				}
			}
		}
		
		[Column(Storage="_resultSetId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid resultSetId
		{
			get
			{
				return this._resultSetId;
			}
			set
			{
				if ((this._resultSetId != value))
				{
					if (this._ResumeSearchResultSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnresultSetIdChanging(value);
					this.SendPropertyChanging();
					this._resultSetId = value;
					this.SendPropertyChanged("resultSetId");
					this.OnresultSetIdChanged();
				}
			}
		}
		
		[Column(Storage="_searcherId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> searcherId
		{
			get
			{
				return this._searcherId;
			}
			set
			{
				if ((this._searcherId != value))
				{
					this.OnsearcherIdChanging(value);
					this.SendPropertyChanging();
					this._searcherId = value;
					this.SendPropertyChanged("searcherId");
					this.OnsearcherIdChanged();
				}
			}
		}
		
		[Column(Storage="_searcherIp", DbType="VarChar(39)", UpdateCheck=UpdateCheck.Never)]
		public string searcherIp
		{
			get
			{
				return this._searcherIp;
			}
			set
			{
				if ((this._searcherIp != value))
				{
					this.OnsearcherIpChanging(value);
					this.SendPropertyChanging();
					this._searcherIp = value;
					this.SendPropertyChanged("searcherIp");
					this.OnsearcherIpChanged();
				}
			}
		}
		
		[Column(Storage="_savedSearchId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> savedSearchId
		{
			get
			{
				return this._savedSearchId;
			}
			set
			{
				if ((this._savedSearchId != value))
				{
					this.OnsavedSearchIdChanging(value);
					this.SendPropertyChanging();
					this._savedSearchId = value;
					this.SendPropertyChanged("savedSearchId");
					this.OnsavedSearchIdChanged();
				}
			}
		}
		
		[Column(Storage="_channelId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> channelId
		{
			get
			{
				return this._channelId;
			}
			set
			{
				if ((this._channelId != value))
				{
					this.OnchannelIdChanging(value);
					this.SendPropertyChanging();
					this._channelId = value;
					this.SendPropertyChanged("channelId");
					this.OnchannelIdChanged();
				}
			}
		}
		
		[Column(Storage="_appId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> appId
		{
			get
			{
				return this._appId;
			}
			set
			{
				if ((this._appId != value))
				{
					this.OnappIdChanging(value);
					this.SendPropertyChanging();
					this._appId = value;
					this.SendPropertyChanged("appId");
					this.OnappIdChanged();
				}
			}
		}
		
		[Association(Name="ResumeSearchCriteriaSetEntity_ResumeSearchEntity", Storage="_ResumeSearchCriteriaSetEntity", ThisKey="criteriaSetId", OtherKey="id", IsForeignKey=true)]
		public ResumeSearchCriteriaSetEntity ResumeSearchCriteriaSetEntity
		{
			get
			{
				return this._ResumeSearchCriteriaSetEntity.Entity;
			}
			set
			{
				ResumeSearchCriteriaSetEntity previousValue = this._ResumeSearchCriteriaSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ResumeSearchCriteriaSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResumeSearchCriteriaSetEntity.Entity = null;
						previousValue.ResumeSearchEntities.Remove(this);
					}
					this._ResumeSearchCriteriaSetEntity.Entity = value;
					if ((value != null))
					{
						value.ResumeSearchEntities.Add(this);
						this._criteriaSetId = value.id;
					}
					else
					{
						this._criteriaSetId = default(System.Guid);
					}
					this.SendPropertyChanged("ResumeSearchCriteriaSetEntity");
				}
			}
		}
		
		[Association(Name="ResumeSearchResultSetEntity_ResumeSearchEntity", Storage="_ResumeSearchResultSetEntity", ThisKey="resultSetId", OtherKey="id", IsForeignKey=true)]
		public ResumeSearchResultSetEntity ResumeSearchResultSetEntity
		{
			get
			{
				return this._ResumeSearchResultSetEntity.Entity;
			}
			set
			{
				ResumeSearchResultSetEntity previousValue = this._ResumeSearchResultSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ResumeSearchResultSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResumeSearchResultSetEntity.Entity = null;
						previousValue.ResumeSearchEntities.Remove(this);
					}
					this._ResumeSearchResultSetEntity.Entity = value;
					if ((value != null))
					{
						value.ResumeSearchEntities.Add(this);
						this._resultSetId = value.id;
					}
					else
					{
						this._resultSetId = default(System.Guid);
					}
					this.SendPropertyChanged("ResumeSearchResultSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.SavedResumeSearch")]
	internal partial class SavedResumeSearchEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _criteriaSetId;
		
		private System.Guid _ownerId;
		
		private string _name;
		
		private System.DateTime _createdTime;
		
		private EntityRef<ResumeSearchCriteriaSetEntity> _ResumeSearchCriteriaSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncriteriaSetIdChanging(System.Guid value);
    partial void OncriteriaSetIdChanged();
    partial void OnownerIdChanging(System.Guid value);
    partial void OnownerIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    #endregion
		
		public SavedResumeSearchEntity()
		{
			this._ResumeSearchCriteriaSetEntity = default(EntityRef<ResumeSearchCriteriaSetEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_criteriaSetId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid criteriaSetId
		{
			get
			{
				return this._criteriaSetId;
			}
			set
			{
				if ((this._criteriaSetId != value))
				{
					if (this._ResumeSearchCriteriaSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncriteriaSetIdChanging(value);
					this.SendPropertyChanging();
					this._criteriaSetId = value;
					this.SendPropertyChanged("criteriaSetId");
					this.OncriteriaSetIdChanged();
				}
			}
		}
		
		[Column(Storage="_ownerId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ownerId
		{
			get
			{
				return this._ownerId;
			}
			set
			{
				if ((this._ownerId != value))
				{
					this.OnownerIdChanging(value);
					this.SendPropertyChanging();
					this._ownerId = value;
					this.SendPropertyChanged("ownerId");
					this.OnownerIdChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[Association(Name="ResumeSearchCriteriaSetEntity_SavedResumeSearchEntity", Storage="_ResumeSearchCriteriaSetEntity", ThisKey="criteriaSetId", OtherKey="id", IsForeignKey=true)]
		public ResumeSearchCriteriaSetEntity ResumeSearchCriteriaSetEntity
		{
			get
			{
				return this._ResumeSearchCriteriaSetEntity.Entity;
			}
			set
			{
				ResumeSearchCriteriaSetEntity previousValue = this._ResumeSearchCriteriaSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ResumeSearchCriteriaSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResumeSearchCriteriaSetEntity.Entity = null;
						previousValue.SavedResumeSearchEntities.Remove(this);
					}
					this._ResumeSearchCriteriaSetEntity.Entity = value;
					if ((value != null))
					{
						value.SavedResumeSearchEntities.Add(this);
						this._criteriaSetId = value.id;
					}
					else
					{
						this._criteriaSetId = default(System.Guid);
					}
					this.SendPropertyChanged("ResumeSearchCriteriaSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MemberIndexing")]
	internal partial class MemberIndexingEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _memberId;
		
		private System.DateTime _modifiedTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OnmodifiedTimeChanging(System.DateTime value);
    partial void OnmodifiedTimeChanged();
    #endregion
		
		public MemberIndexingEntity()
		{
			OnCreated();
		}
		
		[Column(Storage="_memberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[Column(Storage="_modifiedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime modifiedTime
		{
			get
			{
				return this._modifiedTime;
			}
			set
			{
				if ((this._modifiedTime != value))
				{
					this.OnmodifiedTimeChanging(value);
					this.SendPropertyChanging();
					this._modifiedTime = value;
					this.SendPropertyChanged("modifiedTime");
					this.OnmodifiedTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Member")]
	internal partial class MemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _dateOfBirth;
		
		private byte _gender;
		
		private byte _employerAccess;
		
		private int _firstDegreeAccess;
		
		private int _secondDegreeAccess;
		
		private int _publicAccess;
		
		private System.Nullable<byte> _enteredReferralSourceId;
		
		private System.Guid _addressId;
		
		private System.Nullable<System.Guid> _profilePhotoId;
		
		private System.Nullable<int> _ethnicFlags;
		
		private System.Nullable<int> _disabilityFlags;
		
		private System.Nullable<byte> _dateOfBirthParts;
		
		private string _primaryPhoneNumber;
		
		private System.Nullable<byte> _primaryPhoneNumberType;
		
		private string _secondaryPhoneNumber;
		
		private System.Nullable<byte> _secondaryPhoneNumberType;
		
		private string _tertiaryPhoneNumber;
		
		private System.Nullable<byte> _tertiaryPhoneNumberType;
		
		private System.DateTime _lastEditedTime;
		
		private EntityRef<AddressEntity> _AddressEntity;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OndateOfBirthChanged();
    partial void OngenderChanging(byte value);
    partial void OngenderChanged();
    partial void OnemployerAccessChanging(byte value);
    partial void OnemployerAccessChanged();
    partial void OnfirstDegreeAccessChanging(int value);
    partial void OnfirstDegreeAccessChanged();
    partial void OnsecondDegreeAccessChanging(int value);
    partial void OnsecondDegreeAccessChanged();
    partial void OnpublicAccessChanging(int value);
    partial void OnpublicAccessChanged();
    partial void OnenteredReferralSourceIdChanging(System.Nullable<byte> value);
    partial void OnenteredReferralSourceIdChanged();
    partial void OnaddressIdChanging(System.Guid value);
    partial void OnaddressIdChanged();
    partial void OnprofilePhotoIdChanging(System.Nullable<System.Guid> value);
    partial void OnprofilePhotoIdChanged();
    partial void OnethnicFlagsChanging(System.Nullable<int> value);
    partial void OnethnicFlagsChanged();
    partial void OndisabilityFlagsChanging(System.Nullable<int> value);
    partial void OndisabilityFlagsChanged();
    partial void OndateOfBirthPartsChanging(System.Nullable<byte> value);
    partial void OndateOfBirthPartsChanged();
    partial void OnprimaryPhoneNumberChanging(string value);
    partial void OnprimaryPhoneNumberChanged();
    partial void OnprimaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OnprimaryPhoneNumberTypeChanged();
    partial void OnsecondaryPhoneNumberChanging(string value);
    partial void OnsecondaryPhoneNumberChanged();
    partial void OnsecondaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OnsecondaryPhoneNumberTypeChanged();
    partial void OntertiaryPhoneNumberChanging(string value);
    partial void OntertiaryPhoneNumberChanged();
    partial void OntertiaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OntertiaryPhoneNumberTypeChanged();
    partial void OnlastEditedTimeChanging(System.DateTime value);
    partial void OnlastEditedTimeChanged();
    #endregion
		
		public MemberEntity()
		{
			this._AddressEntity = default(EntityRef<AddressEntity>);
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_dateOfBirth", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dateOfBirth
		{
			get
			{
				return this._dateOfBirth;
			}
			set
			{
				if ((this._dateOfBirth != value))
				{
					this.OndateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirth = value;
					this.SendPropertyChanged("dateOfBirth");
					this.OndateOfBirthChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[Column(Storage="_employerAccess", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte employerAccess
		{
			get
			{
				return this._employerAccess;
			}
			set
			{
				if ((this._employerAccess != value))
				{
					this.OnemployerAccessChanging(value);
					this.SendPropertyChanging();
					this._employerAccess = value;
					this.SendPropertyChanged("employerAccess");
					this.OnemployerAccessChanged();
				}
			}
		}
		
		[Column(Storage="_firstDegreeAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int firstDegreeAccess
		{
			get
			{
				return this._firstDegreeAccess;
			}
			set
			{
				if ((this._firstDegreeAccess != value))
				{
					this.OnfirstDegreeAccessChanging(value);
					this.SendPropertyChanging();
					this._firstDegreeAccess = value;
					this.SendPropertyChanged("firstDegreeAccess");
					this.OnfirstDegreeAccessChanged();
				}
			}
		}
		
		[Column(Storage="_secondDegreeAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int secondDegreeAccess
		{
			get
			{
				return this._secondDegreeAccess;
			}
			set
			{
				if ((this._secondDegreeAccess != value))
				{
					this.OnsecondDegreeAccessChanging(value);
					this.SendPropertyChanging();
					this._secondDegreeAccess = value;
					this.SendPropertyChanged("secondDegreeAccess");
					this.OnsecondDegreeAccessChanged();
				}
			}
		}
		
		[Column(Storage="_publicAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int publicAccess
		{
			get
			{
				return this._publicAccess;
			}
			set
			{
				if ((this._publicAccess != value))
				{
					this.OnpublicAccessChanging(value);
					this.SendPropertyChanging();
					this._publicAccess = value;
					this.SendPropertyChanged("publicAccess");
					this.OnpublicAccessChanged();
				}
			}
		}
		
		[Column(Storage="_enteredReferralSourceId", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> enteredReferralSourceId
		{
			get
			{
				return this._enteredReferralSourceId;
			}
			set
			{
				if ((this._enteredReferralSourceId != value))
				{
					this.OnenteredReferralSourceIdChanging(value);
					this.SendPropertyChanging();
					this._enteredReferralSourceId = value;
					this.SendPropertyChanged("enteredReferralSourceId");
					this.OnenteredReferralSourceIdChanged();
				}
			}
		}
		
		[Column(Storage="_addressId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					if (this._AddressEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[Column(Storage="_profilePhotoId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> profilePhotoId
		{
			get
			{
				return this._profilePhotoId;
			}
			set
			{
				if ((this._profilePhotoId != value))
				{
					this.OnprofilePhotoIdChanging(value);
					this.SendPropertyChanging();
					this._profilePhotoId = value;
					this.SendPropertyChanged("profilePhotoId");
					this.OnprofilePhotoIdChanged();
				}
			}
		}
		
		[Column(Storage="_ethnicFlags", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ethnicFlags
		{
			get
			{
				return this._ethnicFlags;
			}
			set
			{
				if ((this._ethnicFlags != value))
				{
					this.OnethnicFlagsChanging(value);
					this.SendPropertyChanging();
					this._ethnicFlags = value;
					this.SendPropertyChanged("ethnicFlags");
					this.OnethnicFlagsChanged();
				}
			}
		}
		
		[Column(Storage="_disabilityFlags", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> disabilityFlags
		{
			get
			{
				return this._disabilityFlags;
			}
			set
			{
				if ((this._disabilityFlags != value))
				{
					this.OndisabilityFlagsChanging(value);
					this.SendPropertyChanging();
					this._disabilityFlags = value;
					this.SendPropertyChanged("disabilityFlags");
					this.OndisabilityFlagsChanged();
				}
			}
		}
		
		[Column(Storage="_dateOfBirthParts", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> dateOfBirthParts
		{
			get
			{
				return this._dateOfBirthParts;
			}
			set
			{
				if ((this._dateOfBirthParts != value))
				{
					this.OndateOfBirthPartsChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirthParts = value;
					this.SendPropertyChanged("dateOfBirthParts");
					this.OndateOfBirthPartsChanged();
				}
			}
		}
		
		[Column(Storage="_primaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string primaryPhoneNumber
		{
			get
			{
				return this._primaryPhoneNumber;
			}
			set
			{
				if ((this._primaryPhoneNumber != value))
				{
					this.OnprimaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._primaryPhoneNumber = value;
					this.SendPropertyChanged("primaryPhoneNumber");
					this.OnprimaryPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_primaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> primaryPhoneNumberType
		{
			get
			{
				return this._primaryPhoneNumberType;
			}
			set
			{
				if ((this._primaryPhoneNumberType != value))
				{
					this.OnprimaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._primaryPhoneNumberType = value;
					this.SendPropertyChanged("primaryPhoneNumberType");
					this.OnprimaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[Column(Storage="_secondaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryPhoneNumber
		{
			get
			{
				return this._secondaryPhoneNumber;
			}
			set
			{
				if ((this._secondaryPhoneNumber != value))
				{
					this.OnsecondaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhoneNumber = value;
					this.SendPropertyChanged("secondaryPhoneNumber");
					this.OnsecondaryPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_secondaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> secondaryPhoneNumberType
		{
			get
			{
				return this._secondaryPhoneNumberType;
			}
			set
			{
				if ((this._secondaryPhoneNumberType != value))
				{
					this.OnsecondaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhoneNumberType = value;
					this.SendPropertyChanged("secondaryPhoneNumberType");
					this.OnsecondaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[Column(Storage="_tertiaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string tertiaryPhoneNumber
		{
			get
			{
				return this._tertiaryPhoneNumber;
			}
			set
			{
				if ((this._tertiaryPhoneNumber != value))
				{
					this.OntertiaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._tertiaryPhoneNumber = value;
					this.SendPropertyChanged("tertiaryPhoneNumber");
					this.OntertiaryPhoneNumberChanged();
				}
			}
		}
		
		[Column(Storage="_tertiaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> tertiaryPhoneNumberType
		{
			get
			{
				return this._tertiaryPhoneNumberType;
			}
			set
			{
				if ((this._tertiaryPhoneNumberType != value))
				{
					this.OntertiaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._tertiaryPhoneNumberType = value;
					this.SendPropertyChanged("tertiaryPhoneNumberType");
					this.OntertiaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[Column(Storage="_lastEditedTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime lastEditedTime
		{
			get
			{
				return this._lastEditedTime;
			}
			set
			{
				if ((this._lastEditedTime != value))
				{
					this.OnlastEditedTimeChanging(value);
					this.SendPropertyChanging();
					this._lastEditedTime = value;
					this.SendPropertyChanged("lastEditedTime");
					this.OnlastEditedTimeChanged();
				}
			}
		}
		
		[Association(Name="AddressEntity_MemberEntity", Storage="_AddressEntity", ThisKey="addressId", OtherKey="id", IsForeignKey=true)]
		public AddressEntity AddressEntity
		{
			get
			{
				return this._AddressEntity.Entity;
			}
			set
			{
				AddressEntity previousValue = this._AddressEntity.Entity;
				if (((previousValue != value) 
							|| (this._AddressEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressEntity.Entity = null;
						previousValue.MemberEntities.Remove(this);
					}
					this._AddressEntity.Entity = value;
					if ((value != null))
					{
						value.MemberEntities.Add(this);
						this._addressId = value.id;
					}
					else
					{
						this._addressId = default(System.Guid);
					}
					this.SendPropertyChanged("AddressEntity");
				}
			}
		}
		
		[Association(Name="RegisteredUserEntity_MemberEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.MemberEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.MemberEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SplitGuidsResult
	{
		
		private System.Nullable<System.Guid> _value;
		
		public SplitGuidsResult()
		{
		}
		
		[Column(Storage="_value", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
