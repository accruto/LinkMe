#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Query.Search.Recruiters.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	internal partial class RecruitersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertContactDetailsEntity(ContactDetailsEntity instance);
    partial void UpdateContactDetailsEntity(ContactDetailsEntity instance);
    partial void DeleteContactDetailsEntity(ContactDetailsEntity instance);
    partial void InsertLocationReferenceEntity(LocationReferenceEntity instance);
    partial void UpdateLocationReferenceEntity(LocationReferenceEntity instance);
    partial void DeleteLocationReferenceEntity(LocationReferenceEntity instance);
    partial void InsertAddressEntity(AddressEntity instance);
    partial void UpdateAddressEntity(AddressEntity instance);
    partial void DeleteAddressEntity(AddressEntity instance);
    partial void InsertOrganisationEntity(OrganisationEntity instance);
    partial void UpdateOrganisationEntity(OrganisationEntity instance);
    partial void DeleteOrganisationEntity(OrganisationEntity instance);
    partial void InsertOrganisationalUnitEntity(OrganisationalUnitEntity instance);
    partial void UpdateOrganisationalUnitEntity(OrganisationalUnitEntity instance);
    partial void DeleteOrganisationalUnitEntity(OrganisationalUnitEntity instance);
    #endregion
		
		public RecruitersDataContext() : 
				base(global::LinkMe.Query.Search.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public RecruitersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RecruitersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RecruitersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RecruitersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<ContactDetailsEntity> ContactDetailsEntities
		{
			get
			{
				return this.GetTable<ContactDetailsEntity>();
			}
		}
		
		internal System.Data.Linq.Table<LocationReferenceEntity> LocationReferenceEntities
		{
			get
			{
				return this.GetTable<LocationReferenceEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AddressEntity> AddressEntities
		{
			get
			{
				return this.GetTable<AddressEntity>();
			}
		}
		
		internal System.Data.Linq.Table<OrganisationEntity> OrganisationEntities
		{
			get
			{
				return this.GetTable<OrganisationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<OrganisationalUnitEntity> OrganisationalUnitEntities
		{
			get
			{
				return this.GetTable<OrganisationalUnitEntity>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOrganisationFullName", IsComposable=true)]
		public string GetOrganisationFullName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(1)")] System.Nullable<char> separator)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, separator).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactDetails")]
	internal partial class ContactDetailsEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _email;
		
		private string _faxNumber;
		
		private string _phoneNumber;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _secondaryEmails;
		
		private EntitySet<OrganisationalUnitEntity> _OrganisationalUnitEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfaxNumberChanging(string value);
    partial void OnfaxNumberChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnsecondaryEmailsChanging(string value);
    partial void OnsecondaryEmailsChanged();
    #endregion
		
		public ContactDetailsEntity()
		{
			this._OrganisationalUnitEntities = new EntitySet<OrganisationalUnitEntity>(new Action<OrganisationalUnitEntity>(this.attach_OrganisationalUnitEntities), new Action<OrganisationalUnitEntity>(this.detach_OrganisationalUnitEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faxNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string faxNumber
		{
			get
			{
				return this._faxNumber;
			}
			set
			{
				if ((this._faxNumber != value))
				{
					this.OnfaxNumberChanging(value);
					this.SendPropertyChanging();
					this._faxNumber = value;
					this.SendPropertyChanged("faxNumber");
					this.OnfaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(30)", UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmails", DbType="NVarChar(700)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryEmails
		{
			get
			{
				return this._secondaryEmails;
			}
			set
			{
				if ((this._secondaryEmails != value))
				{
					this.OnsecondaryEmailsChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmails = value;
					this.SendPropertyChanged("secondaryEmails");
					this.OnsecondaryEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactDetailsEntity_OrganisationalUnitEntity", Storage="_OrganisationalUnitEntities", ThisKey="id", OtherKey="primaryContactId")]
		public EntitySet<OrganisationalUnitEntity> OrganisationalUnitEntities
		{
			get
			{
				return this._OrganisationalUnitEntities;
			}
			set
			{
				this._OrganisationalUnitEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrganisationalUnitEntities(OrganisationalUnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.ContactDetailsEntity = this;
		}
		
		private void detach_OrganisationalUnitEntities(OrganisationalUnitEntity entity)
		{
			this.SendPropertyChanging();
			entity.ContactDetailsEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationReference")]
	internal partial class LocationReferenceEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _unstructuredLocation;
		
		private System.Nullable<int> _namedLocationId;
		
		private int _countrySubdivisionId;
		
		private System.Nullable<int> _localityId;
		
		private EntitySet<AddressEntity> _AddressEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnunstructuredLocationChanging(string value);
    partial void OnunstructuredLocationChanged();
    partial void OnnamedLocationIdChanging(System.Nullable<int> value);
    partial void OnnamedLocationIdChanged();
    partial void OncountrySubdivisionIdChanging(int value);
    partial void OncountrySubdivisionIdChanged();
    partial void OnlocalityIdChanging(System.Nullable<int> value);
    partial void OnlocalityIdChanged();
    #endregion
		
		public LocationReferenceEntity()
		{
			this._AddressEntities = new EntitySet<AddressEntity>(new Action<AddressEntity>(this.attach_AddressEntities), new Action<AddressEntity>(this.detach_AddressEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unstructuredLocation", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string unstructuredLocation
		{
			get
			{
				return this._unstructuredLocation;
			}
			set
			{
				if ((this._unstructuredLocation != value))
				{
					this.OnunstructuredLocationChanging(value);
					this.SendPropertyChanging();
					this._unstructuredLocation = value;
					this.SendPropertyChanged("unstructuredLocation");
					this.OnunstructuredLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namedLocationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> namedLocationId
		{
			get
			{
				return this._namedLocationId;
			}
			set
			{
				if ((this._namedLocationId != value))
				{
					this.OnnamedLocationIdChanging(value);
					this.SendPropertyChanging();
					this._namedLocationId = value;
					this.SendPropertyChanged("namedLocationId");
					this.OnnamedLocationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countrySubdivisionId", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int countrySubdivisionId
		{
			get
			{
				return this._countrySubdivisionId;
			}
			set
			{
				if ((this._countrySubdivisionId != value))
				{
					this.OncountrySubdivisionIdChanging(value);
					this.SendPropertyChanging();
					this._countrySubdivisionId = value;
					this.SendPropertyChanged("countrySubdivisionId");
					this.OncountrySubdivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_localityId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> localityId
		{
			get
			{
				return this._localityId;
			}
			set
			{
				if ((this._localityId != value))
				{
					this.OnlocalityIdChanging(value);
					this.SendPropertyChanging();
					this._localityId = value;
					this.SendPropertyChanged("localityId");
					this.OnlocalityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationReferenceEntity_AddressEntity", Storage="_AddressEntities", ThisKey="id", OtherKey="locationReferenceId")]
		public EntitySet<AddressEntity> AddressEntities
		{
			get
			{
				return this._AddressEntities;
			}
			set
			{
				this._AddressEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressEntities(AddressEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = this;
		}
		
		private void detach_AddressEntities(AddressEntity entity)
		{
			this.SendPropertyChanging();
			entity.LocationReferenceEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	internal partial class AddressEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _line1;
		
		private string _line2;
		
		private System.Nullable<System.Guid> _locationReferenceId;
		
		private EntitySet<OrganisationEntity> _OrganisationEntities;
		
		private EntityRef<LocationReferenceEntity> _LocationReferenceEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void Online1Changing(string value);
    partial void Online1Changed();
    partial void Online2Changing(string value);
    partial void Online2Changed();
    partial void OnlocationReferenceIdChanging(System.Nullable<System.Guid> value);
    partial void OnlocationReferenceIdChanged();
    #endregion
		
		public AddressEntity()
		{
			this._OrganisationEntities = new EntitySet<OrganisationEntity>(new Action<OrganisationEntity>(this.attach_OrganisationEntities), new Action<OrganisationEntity>(this.detach_OrganisationEntities));
			this._LocationReferenceEntity = default(EntityRef<LocationReferenceEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line1", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string line1
		{
			get
			{
				return this._line1;
			}
			set
			{
				if ((this._line1 != value))
				{
					this.Online1Changing(value);
					this.SendPropertyChanging();
					this._line1 = value;
					this.SendPropertyChanged("line1");
					this.Online1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line2", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string line2
		{
			get
			{
				return this._line2;
			}
			set
			{
				if ((this._line2 != value))
				{
					this.Online2Changing(value);
					this.SendPropertyChanging();
					this._line2 = value;
					this.SendPropertyChanged("line2");
					this.Online2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationReferenceId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> locationReferenceId
		{
			get
			{
				return this._locationReferenceId;
			}
			set
			{
				if ((this._locationReferenceId != value))
				{
					if (this._LocationReferenceEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationReferenceIdChanging(value);
					this.SendPropertyChanging();
					this._locationReferenceId = value;
					this.SendPropertyChanged("locationReferenceId");
					this.OnlocationReferenceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressEntity_OrganisationEntity", Storage="_OrganisationEntities", ThisKey="id", OtherKey="addressId")]
		public EntitySet<OrganisationEntity> OrganisationEntities
		{
			get
			{
				return this._OrganisationEntities;
			}
			set
			{
				this._OrganisationEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LocationReferenceEntity_AddressEntity", Storage="_LocationReferenceEntity", ThisKey="locationReferenceId", OtherKey="id", IsForeignKey=true)]
		public LocationReferenceEntity LocationReferenceEntity
		{
			get
			{
				return this._LocationReferenceEntity.Entity;
			}
			set
			{
				LocationReferenceEntity previousValue = this._LocationReferenceEntity.Entity;
				if (((previousValue != value) 
							|| (this._LocationReferenceEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LocationReferenceEntity.Entity = null;
						previousValue.AddressEntities.Remove(this);
					}
					this._LocationReferenceEntity.Entity = value;
					if ((value != null))
					{
						value.AddressEntities.Add(this);
						this._locationReferenceId = value.id;
					}
					else
					{
						this._locationReferenceId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("LocationReferenceEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrganisationEntities(OrganisationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AddressEntity = this;
		}
		
		private void detach_OrganisationEntities(OrganisationEntity entity)
		{
			this.SendPropertyChanging();
			entity.AddressEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation")]
	internal partial class OrganisationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _displayName;
		
		private System.Nullable<System.Guid> _addressId;
		
		private EntityRef<OrganisationalUnitEntity> _OrganisationalUnitEntity;
		
		private EntityRef<AddressEntity> _AddressEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OnaddressIdChanging(System.Nullable<System.Guid> value);
    partial void OnaddressIdChanged();
    #endregion
		
		public OrganisationEntity()
		{
			this._OrganisationalUnitEntity = default(EntityRef<OrganisationalUnitEntity>);
			this._AddressEntity = default(EntityRef<AddressEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					if (this._AddressEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_OrganisationalUnitEntity", Storage="_OrganisationalUnitEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public OrganisationalUnitEntity OrganisationalUnitEntity
		{
			get
			{
				return this._OrganisationalUnitEntity.Entity;
			}
			set
			{
				OrganisationalUnitEntity previousValue = this._OrganisationalUnitEntity.Entity;
				if (((previousValue != value) 
							|| (this._OrganisationalUnitEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganisationalUnitEntity.Entity = null;
						previousValue.OrganisationEntity = null;
					}
					this._OrganisationalUnitEntity.Entity = value;
					if ((value != null))
					{
						value.OrganisationEntity = this;
					}
					this.SendPropertyChanged("OrganisationalUnitEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressEntity_OrganisationEntity", Storage="_AddressEntity", ThisKey="addressId", OtherKey="id", IsForeignKey=true)]
		public AddressEntity AddressEntity
		{
			get
			{
				return this._AddressEntity.Entity;
			}
			set
			{
				AddressEntity previousValue = this._AddressEntity.Entity;
				if (((previousValue != value) 
							|| (this._AddressEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressEntity.Entity = null;
						previousValue.OrganisationEntities.Remove(this);
					}
					this._AddressEntity.Entity = value;
					if ((value != null))
					{
						value.OrganisationEntities.Add(this);
						this._addressId = value.id;
					}
					else
					{
						this._addressId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("AddressEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganisationalUnit")]
	internal partial class OrganisationalUnitEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.Guid> _parentId;
		
		private System.Guid _verifiedById;
		
		private System.Guid _accountManagerId;
		
		private System.Nullable<System.Guid> _primaryContactId;
		
		private EntityRef<OrganisationEntity> _OrganisationEntity;
		
		private EntityRef<ContactDetailsEntity> _ContactDetailsEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnparentIdChanging(System.Nullable<System.Guid> value);
    partial void OnparentIdChanged();
    partial void OnverifiedByIdChanging(System.Guid value);
    partial void OnverifiedByIdChanged();
    partial void OnaccountManagerIdChanging(System.Guid value);
    partial void OnaccountManagerIdChanged();
    partial void OnprimaryContactIdChanging(System.Nullable<System.Guid> value);
    partial void OnprimaryContactIdChanged();
    #endregion
		
		public OrganisationalUnitEntity()
		{
			this._OrganisationEntity = default(EntityRef<OrganisationEntity>);
			this._ContactDetailsEntity = default(EntityRef<ContactDetailsEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._OrganisationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> parentId
		{
			get
			{
				return this._parentId;
			}
			set
			{
				if ((this._parentId != value))
				{
					this.OnparentIdChanging(value);
					this.SendPropertyChanging();
					this._parentId = value;
					this.SendPropertyChanged("parentId");
					this.OnparentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verifiedById", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid verifiedById
		{
			get
			{
				return this._verifiedById;
			}
			set
			{
				if ((this._verifiedById != value))
				{
					this.OnverifiedByIdChanging(value);
					this.SendPropertyChanging();
					this._verifiedById = value;
					this.SendPropertyChanged("verifiedById");
					this.OnverifiedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountManagerId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid accountManagerId
		{
			get
			{
				return this._accountManagerId;
			}
			set
			{
				if ((this._accountManagerId != value))
				{
					this.OnaccountManagerIdChanging(value);
					this.SendPropertyChanging();
					this._accountManagerId = value;
					this.SendPropertyChanged("accountManagerId");
					this.OnaccountManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryContactId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> primaryContactId
		{
			get
			{
				return this._primaryContactId;
			}
			set
			{
				if ((this._primaryContactId != value))
				{
					if (this._ContactDetailsEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprimaryContactIdChanging(value);
					this.SendPropertyChanging();
					this._primaryContactId = value;
					this.SendPropertyChanged("primaryContactId");
					this.OnprimaryContactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_OrganisationalUnitEntity", Storage="_OrganisationEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public OrganisationEntity OrganisationEntity
		{
			get
			{
				return this._OrganisationEntity.Entity;
			}
			set
			{
				OrganisationEntity previousValue = this._OrganisationEntity.Entity;
				if (((previousValue != value) 
							|| (this._OrganisationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganisationEntity.Entity = null;
						previousValue.OrganisationalUnitEntity = null;
					}
					this._OrganisationEntity.Entity = value;
					if ((value != null))
					{
						value.OrganisationalUnitEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("OrganisationEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactDetailsEntity_OrganisationalUnitEntity", Storage="_ContactDetailsEntity", ThisKey="primaryContactId", OtherKey="id", IsForeignKey=true)]
		public ContactDetailsEntity ContactDetailsEntity
		{
			get
			{
				return this._ContactDetailsEntity.Entity;
			}
			set
			{
				ContactDetailsEntity previousValue = this._ContactDetailsEntity.Entity;
				if (((previousValue != value) 
							|| (this._ContactDetailsEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactDetailsEntity.Entity = null;
						previousValue.OrganisationalUnitEntities.Remove(this);
					}
					this._ContactDetailsEntity.Entity = value;
					if ((value != null))
					{
						value.OrganisationalUnitEntities.Add(this);
						this._primaryContactId = value.id;
					}
					else
					{
						this._primaryContactId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ContactDetailsEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
