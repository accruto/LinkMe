#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Query.Reports.Roles.Orders.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class OrdersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProductOrderEntity(ProductOrderEntity instance);
    partial void UpdateProductOrderEntity(ProductOrderEntity instance);
    partial void DeleteProductOrderEntity(ProductOrderEntity instance);
    partial void InsertProductReceiptEntity(ProductReceiptEntity instance);
    partial void UpdateProductReceiptEntity(ProductReceiptEntity instance);
    partial void DeleteProductReceiptEntity(ProductReceiptEntity instance);
    partial void InsertRegisteredUserEntity(RegisteredUserEntity instance);
    partial void UpdateRegisteredUserEntity(RegisteredUserEntity instance);
    partial void DeleteRegisteredUserEntity(RegisteredUserEntity instance);
    partial void InsertProductOrderItemEntity(ProductOrderItemEntity instance);
    partial void UpdateProductOrderItemEntity(ProductOrderItemEntity instance);
    partial void DeleteProductOrderItemEntity(ProductOrderItemEntity instance);
    partial void InsertProductEntity(ProductEntity instance);
    partial void UpdateProductEntity(ProductEntity instance);
    partial void DeleteProductEntity(ProductEntity instance);
    partial void InsertEmployerEntity(EmployerEntity instance);
    partial void UpdateEmployerEntity(EmployerEntity instance);
    partial void DeleteEmployerEntity(EmployerEntity instance);
    partial void InsertOrganisationEntity(OrganisationEntity instance);
    partial void UpdateOrganisationEntity(OrganisationEntity instance);
    partial void DeleteOrganisationEntity(OrganisationEntity instance);
    #endregion
		
		public OrdersDataContext() : 
				base(global::LinkMe.Query.Reports.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OrdersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrdersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrdersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OrdersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<ProductOrderEntity> ProductOrderEntities
		{
			get
			{
				return this.GetTable<ProductOrderEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ProductReceiptEntity> ProductReceiptEntities
		{
			get
			{
				return this.GetTable<ProductReceiptEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RegisteredUserEntity> RegisteredUserEntities
		{
			get
			{
				return this.GetTable<RegisteredUserEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ProductOrderItemEntity> ProductOrderItemEntities
		{
			get
			{
				return this.GetTable<ProductOrderItemEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ProductEntity> ProductEntities
		{
			get
			{
				return this.GetTable<ProductEntity>();
			}
		}
		
		internal System.Data.Linq.Table<EmployerEntity> EmployerEntities
		{
			get
			{
				return this.GetTable<EmployerEntity>();
			}
		}
		
		internal System.Data.Linq.Table<OrganisationEntity> OrganisationEntities
		{
			get
			{
				return this.GetTable<OrganisationEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductOrder")]
	internal partial class ProductOrderEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _confirmationCode;
		
		private System.Guid _ownerId;
		
		private System.Guid _purchaserId;
		
		private System.DateTime _time;
		
		private decimal _priceExclTax;
		
		private decimal _priceInclTax;
		
		private int _currency;
		
		private EntitySet<ProductReceiptEntity> _ProductReceiptEntities;
		
		private EntitySet<ProductOrderItemEntity> _ProductOrderItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnconfirmationCodeChanging(string value);
    partial void OnconfirmationCodeChanged();
    partial void OnownerIdChanging(System.Guid value);
    partial void OnownerIdChanged();
    partial void OnpurchaserIdChanging(System.Guid value);
    partial void OnpurchaserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnpriceExclTaxChanging(decimal value);
    partial void OnpriceExclTaxChanged();
    partial void OnpriceInclTaxChanging(decimal value);
    partial void OnpriceInclTaxChanged();
    partial void OncurrencyChanging(int value);
    partial void OncurrencyChanged();
    #endregion
		
		public ProductOrderEntity()
		{
			this._ProductReceiptEntities = new EntitySet<ProductReceiptEntity>(new Action<ProductReceiptEntity>(this.attach_ProductReceiptEntities), new Action<ProductReceiptEntity>(this.detach_ProductReceiptEntities));
			this._ProductOrderItemEntities = new EntitySet<ProductOrderItemEntity>(new Action<ProductOrderItemEntity>(this.attach_ProductOrderItemEntities), new Action<ProductOrderItemEntity>(this.detach_ProductOrderItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string confirmationCode
		{
			get
			{
				return this._confirmationCode;
			}
			set
			{
				if ((this._confirmationCode != value))
				{
					this.OnconfirmationCodeChanging(value);
					this.SendPropertyChanging();
					this._confirmationCode = value;
					this.SendPropertyChanged("confirmationCode");
					this.OnconfirmationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid ownerId
		{
			get
			{
				return this._ownerId;
			}
			set
			{
				if ((this._ownerId != value))
				{
					this.OnownerIdChanging(value);
					this.SendPropertyChanging();
					this._ownerId = value;
					this.SendPropertyChanged("ownerId");
					this.OnownerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaserId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid purchaserId
		{
			get
			{
				return this._purchaserId;
			}
			set
			{
				if ((this._purchaserId != value))
				{
					this.OnpurchaserIdChanging(value);
					this.SendPropertyChanging();
					this._purchaserId = value;
					this.SendPropertyChanged("purchaserId");
					this.OnpurchaserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceExclTax", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal priceExclTax
		{
			get
			{
				return this._priceExclTax;
			}
			set
			{
				if ((this._priceExclTax != value))
				{
					this.OnpriceExclTaxChanging(value);
					this.SendPropertyChanging();
					this._priceExclTax = value;
					this.SendPropertyChanged("priceExclTax");
					this.OnpriceExclTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceInclTax", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal priceInclTax
		{
			get
			{
				return this._priceInclTax;
			}
			set
			{
				if ((this._priceInclTax != value))
				{
					this.OnpriceInclTaxChanging(value);
					this.SendPropertyChanging();
					this._priceInclTax = value;
					this.SendPropertyChanged("priceInclTax");
					this.OnpriceInclTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderEntity_ProductReceiptEntity", Storage="_ProductReceiptEntities", ThisKey="id", OtherKey="orderId")]
		public EntitySet<ProductReceiptEntity> ProductReceiptEntities
		{
			get
			{
				return this._ProductReceiptEntities;
			}
			set
			{
				this._ProductReceiptEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderEntity_ProductOrderItemEntity", Storage="_ProductOrderItemEntities", ThisKey="id", OtherKey="orderId")]
		public EntitySet<ProductOrderItemEntity> ProductOrderItemEntities
		{
			get
			{
				return this._ProductOrderItemEntities;
			}
			set
			{
				this._ProductOrderItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductReceiptEntities(ProductReceiptEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderEntity = this;
		}
		
		private void detach_ProductReceiptEntities(ProductReceiptEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderEntity = null;
		}
		
		private void attach_ProductOrderItemEntities(ProductOrderItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderEntity = this;
		}
		
		private void detach_ProductOrderItemEntities(ProductOrderItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductOrderEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductReceipt")]
	internal partial class ProductReceiptEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _orderId;
		
		private System.DateTime _time;
		
		private string _externalTransactionId;
		
		private System.DateTime _externalTransactionTime;
		
		private int _type;
		
		private string _creditCardPan;
		
		private System.Nullable<int> _creditCardType;
		
		private EntityRef<ProductOrderEntity> _ProductOrderEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnorderIdChanging(System.Guid value);
    partial void OnorderIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnexternalTransactionIdChanging(string value);
    partial void OnexternalTransactionIdChanged();
    partial void OnexternalTransactionTimeChanging(System.DateTime value);
    partial void OnexternalTransactionTimeChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OncreditCardPanChanging(string value);
    partial void OncreditCardPanChanged();
    partial void OncreditCardTypeChanging(System.Nullable<int> value);
    partial void OncreditCardTypeChanged();
    #endregion
		
		public ProductReceiptEntity()
		{
			this._ProductOrderEntity = default(EntityRef<ProductOrderEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._ProductOrderEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externalTransactionId", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string externalTransactionId
		{
			get
			{
				return this._externalTransactionId;
			}
			set
			{
				if ((this._externalTransactionId != value))
				{
					this.OnexternalTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._externalTransactionId = value;
					this.SendPropertyChanged("externalTransactionId");
					this.OnexternalTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_externalTransactionTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime externalTransactionTime
		{
			get
			{
				return this._externalTransactionTime;
			}
			set
			{
				if ((this._externalTransactionTime != value))
				{
					this.OnexternalTransactionTimeChanging(value);
					this.SendPropertyChanging();
					this._externalTransactionTime = value;
					this.SendPropertyChanged("externalTransactionTime");
					this.OnexternalTransactionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creditCardPan", DbType="NVarChar(32)", UpdateCheck=UpdateCheck.Never)]
		public string creditCardPan
		{
			get
			{
				return this._creditCardPan;
			}
			set
			{
				if ((this._creditCardPan != value))
				{
					this.OncreditCardPanChanging(value);
					this.SendPropertyChanging();
					this._creditCardPan = value;
					this.SendPropertyChanged("creditCardPan");
					this.OncreditCardPanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creditCardType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> creditCardType
		{
			get
			{
				return this._creditCardType;
			}
			set
			{
				if ((this._creditCardType != value))
				{
					this.OncreditCardTypeChanging(value);
					this.SendPropertyChanging();
					this._creditCardType = value;
					this.SendPropertyChanged("creditCardType");
					this.OncreditCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderEntity_ProductReceiptEntity", Storage="_ProductOrderEntity", ThisKey="orderId", OtherKey="id", IsForeignKey=true)]
		public ProductOrderEntity ProductOrderEntity
		{
			get
			{
				return this._ProductOrderEntity.Entity;
			}
			set
			{
				ProductOrderEntity previousValue = this._ProductOrderEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductOrderEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductOrderEntity.Entity = null;
						previousValue.ProductReceiptEntities.Remove(this);
					}
					this._ProductOrderEntity.Entity = value;
					if ((value != null))
					{
						value.ProductReceiptEntities.Add(this);
						this._orderId = value.id;
					}
					else
					{
						this._orderId = default(System.Guid);
					}
					this.SendPropertyChanged("ProductOrderEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegisteredUser")]
	internal partial class RegisteredUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _loginId;
		
		private System.DateTime _createdTime;
		
		private string _emailAddress;
		
		private string _firstName;
		
		private string _lastName;
		
		private short _flags;
		
		private string _passwordHash;
		
		private bool _emailAddressVerified;
		
		private string _secondaryEmailAddress;
		
		private System.Nullable<bool> _secondaryEmailAddressVerified;
		
		private EntityRef<EmployerEntity> _EmployerEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnloginIdChanging(string value);
    partial void OnloginIdChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnflagsChanging(short value);
    partial void OnflagsChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnemailAddressVerifiedChanging(bool value);
    partial void OnemailAddressVerifiedChanged();
    partial void OnsecondaryEmailAddressChanging(string value);
    partial void OnsecondaryEmailAddressChanged();
    partial void OnsecondaryEmailAddressVerifiedChanging(System.Nullable<bool> value);
    partial void OnsecondaryEmailAddressVerifiedChanged();
    #endregion
		
		public RegisteredUserEntity()
		{
			this._EmployerEntity = default(EntityRef<EmployerEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginId", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string loginId
		{
			get
			{
				return this._loginId;
			}
			set
			{
				if ((this._loginId != value))
				{
					this.OnloginIdChanging(value);
					this.SendPropertyChanging();
					this._loginId = value;
					this.SendPropertyChanged("loginId");
					this.OnloginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddress", DbType="NVarChar(320) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="Char(24)", UpdateCheck=UpdateCheck.Never)]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddressVerified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool emailAddressVerified
		{
			get
			{
				return this._emailAddressVerified;
			}
			set
			{
				if ((this._emailAddressVerified != value))
				{
					this.OnemailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._emailAddressVerified = value;
					this.SendPropertyChanged("emailAddressVerified");
					this.OnemailAddressVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmailAddress", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryEmailAddress
		{
			get
			{
				return this._secondaryEmailAddress;
			}
			set
			{
				if ((this._secondaryEmailAddress != value))
				{
					this.OnsecondaryEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddress = value;
					this.SendPropertyChanged("secondaryEmailAddress");
					this.OnsecondaryEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmailAddressVerified", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> secondaryEmailAddressVerified
		{
			get
			{
				return this._secondaryEmailAddressVerified;
			}
			set
			{
				if ((this._secondaryEmailAddressVerified != value))
				{
					this.OnsecondaryEmailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddressVerified = value;
					this.SendPropertyChanged("secondaryEmailAddressVerified");
					this.OnsecondaryEmailAddressVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_EmployerEntity", Storage="_EmployerEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public EmployerEntity EmployerEntity
		{
			get
			{
				return this._EmployerEntity.Entity;
			}
			set
			{
				EmployerEntity previousValue = this._EmployerEntity.Entity;
				if (((previousValue != value) 
							|| (this._EmployerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployerEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._EmployerEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("EmployerEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductOrderItem")]
	internal partial class ProductOrderItemEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _orderId;
		
		private System.Guid _productId;
		
		private decimal _price;
		
		private int _currency;
		
		private EntityRef<ProductOrderEntity> _ProductOrderEntity;
		
		private EntityRef<ProductEntity> _ProductEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnorderIdChanging(System.Guid value);
    partial void OnorderIdChanged();
    partial void OnproductIdChanging(System.Guid value);
    partial void OnproductIdChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OncurrencyChanging(int value);
    partial void OncurrencyChanged();
    #endregion
		
		public ProductOrderItemEntity()
		{
			this._ProductOrderEntity = default(EntityRef<ProductOrderEntity>);
			this._ProductEntity = default(EntityRef<ProductEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid orderId
		{
			get
			{
				return this._orderId;
			}
			set
			{
				if ((this._orderId != value))
				{
					if (this._ProductOrderEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderIdChanging(value);
					this.SendPropertyChanging();
					this._orderId = value;
					this.SendPropertyChanged("orderId");
					this.OnorderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._ProductEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductOrderEntity_ProductOrderItemEntity", Storage="_ProductOrderEntity", ThisKey="orderId", OtherKey="id", IsForeignKey=true)]
		public ProductOrderEntity ProductOrderEntity
		{
			get
			{
				return this._ProductOrderEntity.Entity;
			}
			set
			{
				ProductOrderEntity previousValue = this._ProductOrderEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductOrderEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductOrderEntity.Entity = null;
						previousValue.ProductOrderItemEntities.Remove(this);
					}
					this._ProductOrderEntity.Entity = value;
					if ((value != null))
					{
						value.ProductOrderItemEntities.Add(this);
						this._orderId = value.id;
					}
					else
					{
						this._orderId = default(System.Guid);
					}
					this.SendPropertyChanged("ProductOrderEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductOrderItemEntity", Storage="_ProductEntity", ThisKey="productId", OtherKey="id", IsForeignKey=true)]
		public ProductEntity ProductEntity
		{
			get
			{
				return this._ProductEntity.Entity;
			}
			set
			{
				ProductEntity previousValue = this._ProductEntity.Entity;
				if (((previousValue != value) 
							|| (this._ProductEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductEntity.Entity = null;
						previousValue.ProductOrderItemEntities.Remove(this);
					}
					this._ProductEntity.Entity = value;
					if ((value != null))
					{
						value.ProductOrderItemEntities.Add(this);
						this._productId = value.id;
					}
					else
					{
						this._productId = default(System.Guid);
					}
					this.SendPropertyChanged("ProductEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	internal partial class ProductEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _name;
		
		private bool _enabled;
		
		private int _userTypes;
		
		private decimal _price;
		
		private int _currency;
		
		private EntitySet<ProductOrderItemEntity> _ProductOrderItemEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    partial void OnuserTypesChanging(int value);
    partial void OnuserTypesChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OncurrencyChanging(int value);
    partial void OncurrencyChanged();
    #endregion
		
		public ProductEntity()
		{
			this._ProductOrderItemEntities = new EntitySet<ProductOrderItemEntity>(new Action<ProductOrderItemEntity>(this.attach_ProductOrderItemEntities), new Action<ProductOrderItemEntity>(this.detach_ProductOrderItemEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userTypes", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int userTypes
		{
			get
			{
				return this._userTypes;
			}
			set
			{
				if ((this._userTypes != value))
				{
					this.OnuserTypesChanging(value);
					this.SendPropertyChanging();
					this._userTypes = value;
					this.SendPropertyChanged("userTypes");
					this.OnuserTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductEntity_ProductOrderItemEntity", Storage="_ProductOrderItemEntities", ThisKey="id", OtherKey="productId")]
		public EntitySet<ProductOrderItemEntity> ProductOrderItemEntities
		{
			get
			{
				return this._ProductOrderItemEntities;
			}
			set
			{
				this._ProductOrderItemEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductOrderItemEntities(ProductOrderItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = this;
		}
		
		private void detach_ProductOrderItemEntities(ProductOrderItemEntity entity)
		{
			this.SendPropertyChanging();
			entity.ProductEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	internal partial class EmployerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _contactPhoneNumber;
		
		private string _jobTitle;
		
		private byte _subRole;
		
		private System.Nullable<System.Guid> _ownerPartnerId;
		
		private System.Guid _organisationId;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
		private EntityRef<OrganisationEntity> _OrganisationEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncontactPhoneNumberChanging(string value);
    partial void OncontactPhoneNumberChanged();
    partial void OnjobTitleChanging(string value);
    partial void OnjobTitleChanged();
    partial void OnsubRoleChanging(byte value);
    partial void OnsubRoleChanged();
    partial void OnownerPartnerIdChanging(System.Nullable<System.Guid> value);
    partial void OnownerPartnerIdChanged();
    partial void OnorganisationIdChanging(System.Guid value);
    partial void OnorganisationIdChanged();
    #endregion
		
		public EmployerEntity()
		{
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			this._OrganisationEntity = default(EntityRef<OrganisationEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string contactPhoneNumber
		{
			get
			{
				return this._contactPhoneNumber;
			}
			set
			{
				if ((this._contactPhoneNumber != value))
				{
					this.OncontactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._contactPhoneNumber = value;
					this.SendPropertyChanged("contactPhoneNumber");
					this.OncontactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitle", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string jobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this.OnjobTitleChanging(value);
					this.SendPropertyChanging();
					this._jobTitle = value;
					this.SendPropertyChanged("jobTitle");
					this.OnjobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subRole", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte subRole
		{
			get
			{
				return this._subRole;
			}
			set
			{
				if ((this._subRole != value))
				{
					this.OnsubRoleChanging(value);
					this.SendPropertyChanging();
					this._subRole = value;
					this.SendPropertyChanged("subRole");
					this.OnsubRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerPartnerId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ownerPartnerId
		{
			get
			{
				return this._ownerPartnerId;
			}
			set
			{
				if ((this._ownerPartnerId != value))
				{
					this.OnownerPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._ownerPartnerId = value;
					this.SendPropertyChanged("ownerPartnerId");
					this.OnownerPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisationId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid organisationId
		{
			get
			{
				return this._organisationId;
			}
			set
			{
				if ((this._organisationId != value))
				{
					if (this._OrganisationEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorganisationIdChanging(value);
					this.SendPropertyChanging();
					this._organisationId = value;
					this.SendPropertyChanged("organisationId");
					this.OnorganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_EmployerEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.EmployerEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.EmployerEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_EmployerEntity", Storage="_OrganisationEntity", ThisKey="organisationId", OtherKey="id", IsForeignKey=true)]
		public OrganisationEntity OrganisationEntity
		{
			get
			{
				return this._OrganisationEntity.Entity;
			}
			set
			{
				OrganisationEntity previousValue = this._OrganisationEntity.Entity;
				if (((previousValue != value) 
							|| (this._OrganisationEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganisationEntity.Entity = null;
						previousValue.EmployerEntities.Remove(this);
					}
					this._OrganisationEntity.Entity = value;
					if ((value != null))
					{
						value.EmployerEntities.Add(this);
						this._organisationId = value.id;
					}
					else
					{
						this._organisationId = default(System.Guid);
					}
					this.SendPropertyChanged("OrganisationEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organisation")]
	internal partial class OrganisationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _displayName;
		
		private System.Nullable<System.Guid> _addressId;
		
		private EntitySet<EmployerEntity> _EmployerEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndisplayNameChanging(string value);
    partial void OndisplayNameChanged();
    partial void OnaddressIdChanging(System.Nullable<System.Guid> value);
    partial void OnaddressIdChanged();
    #endregion
		
		public OrganisationEntity()
		{
			this._EmployerEntities = new EntitySet<EmployerEntity>(new Action<EmployerEntity>(this.attach_EmployerEntities), new Action<EmployerEntity>(this.detach_EmployerEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_displayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string displayName
		{
			get
			{
				return this._displayName;
			}
			set
			{
				if ((this._displayName != value))
				{
					this.OndisplayNameChanging(value);
					this.SendPropertyChanging();
					this._displayName = value;
					this.SendPropertyChanged("displayName");
					this.OndisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganisationEntity_EmployerEntity", Storage="_EmployerEntities", ThisKey="id", OtherKey="organisationId")]
		public EntitySet<EmployerEntity> EmployerEntities
		{
			get
			{
				return this._EmployerEntities;
			}
			set
			{
				this._EmployerEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployerEntities(EmployerEntity entity)
		{
			this.SendPropertyChanging();
			entity.OrganisationEntity = this;
		}
		
		private void detach_EmployerEntities(EmployerEntity entity)
		{
			this.SendPropertyChanging();
			entity.OrganisationEntity = null;
		}
	}
}
#pragma warning restore 1591
