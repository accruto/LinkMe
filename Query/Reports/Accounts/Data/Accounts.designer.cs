#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Query.Reports.Accounts.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class AccountsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMemberEntity(MemberEntity instance);
    partial void UpdateMemberEntity(MemberEntity instance);
    partial void DeleteMemberEntity(MemberEntity instance);
    partial void InsertRegisteredUserEntity(RegisteredUserEntity instance);
    partial void UpdateRegisteredUserEntity(RegisteredUserEntity instance);
    partial void DeleteRegisteredUserEntity(RegisteredUserEntity instance);
    partial void InsertAdministratorEntity(AdministratorEntity instance);
    partial void UpdateAdministratorEntity(AdministratorEntity instance);
    partial void DeleteAdministratorEntity(AdministratorEntity instance);
    partial void InsertEmployerEntity(EmployerEntity instance);
    partial void UpdateEmployerEntity(EmployerEntity instance);
    partial void DeleteEmployerEntity(EmployerEntity instance);
    partial void InsertUserLoginEntity(UserLoginEntity instance);
    partial void UpdateUserLoginEntity(UserLoginEntity instance);
    partial void DeleteUserLoginEntity(UserLoginEntity instance);
    partial void InsertCommunityAdministratorEntity(CommunityAdministratorEntity instance);
    partial void UpdateCommunityAdministratorEntity(CommunityAdministratorEntity instance);
    partial void DeleteCommunityAdministratorEntity(CommunityAdministratorEntity instance);
    partial void InsertUserDisablementEntity(UserDisablementEntity instance);
    partial void UpdateUserDisablementEntity(UserDisablementEntity instance);
    partial void DeleteUserDisablementEntity(UserDisablementEntity instance);
    partial void InsertUserEnablementEntity(UserEnablementEntity instance);
    partial void UpdateUserEnablementEntity(UserEnablementEntity instance);
    partial void DeleteUserEnablementEntity(UserEnablementEntity instance);
    partial void InsertUserActivationEntity(UserActivationEntity instance);
    partial void UpdateUserActivationEntity(UserActivationEntity instance);
    partial void DeleteUserActivationEntity(UserActivationEntity instance);
    partial void InsertUserDeactivationEntity(UserDeactivationEntity instance);
    partial void UpdateUserDeactivationEntity(UserDeactivationEntity instance);
    partial void DeleteUserDeactivationEntity(UserDeactivationEntity instance);
    #endregion
		
		public AccountsDataContext() : 
				base(global::LinkMe.Query.Reports.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<MemberEntity> MemberEntities
		{
			get
			{
				return this.GetTable<MemberEntity>();
			}
		}
		
		internal System.Data.Linq.Table<RegisteredUserEntity> RegisteredUserEntities
		{
			get
			{
				return this.GetTable<RegisteredUserEntity>();
			}
		}
		
		internal System.Data.Linq.Table<AdministratorEntity> AdministratorEntities
		{
			get
			{
				return this.GetTable<AdministratorEntity>();
			}
		}
		
		internal System.Data.Linq.Table<EmployerEntity> EmployerEntities
		{
			get
			{
				return this.GetTable<EmployerEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserLoginEntity> UserLoginEntities
		{
			get
			{
				return this.GetTable<UserLoginEntity>();
			}
		}
		
		internal System.Data.Linq.Table<CommunityAdministratorEntity> CommunityAdministratorEntities
		{
			get
			{
				return this.GetTable<CommunityAdministratorEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserDisablementEntity> UserDisablementEntities
		{
			get
			{
				return this.GetTable<UserDisablementEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserEnablementEntity> UserEnablementEntities
		{
			get
			{
				return this.GetTable<UserEnablementEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserActivationEntity> UserActivationEntities
		{
			get
			{
				return this.GetTable<UserActivationEntity>();
			}
		}
		
		internal System.Data.Linq.Table<UserDeactivationEntity> UserDeactivationEntities
		{
			get
			{
				return this.GetTable<UserDeactivationEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	internal partial class MemberEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Nullable<System.DateTime> _dateOfBirth;
		
		private byte _gender;
		
		private byte _employerAccess;
		
		private int _firstDegreeAccess;
		
		private int _secondDegreeAccess;
		
		private int _publicAccess;
		
		private System.Nullable<byte> _enteredReferralSourceId;
		
		private System.Guid _addressId;
		
		private System.Nullable<System.Guid> _profilePhotoId;
		
		private System.Nullable<int> _ethnicFlags;
		
		private System.Nullable<int> _disabilityFlags;
		
		private System.Nullable<byte> _dateOfBirthParts;
		
		private string _primaryPhoneNumber;
		
		private System.Nullable<byte> _primaryPhoneNumberType;
		
		private string _secondaryPhoneNumber;
		
		private System.Nullable<byte> _secondaryPhoneNumberType;
		
		private string _tertiaryPhoneNumber;
		
		private System.Nullable<byte> _tertiaryPhoneNumberType;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OndateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OndateOfBirthChanged();
    partial void OngenderChanging(byte value);
    partial void OngenderChanged();
    partial void OnemployerAccessChanging(byte value);
    partial void OnemployerAccessChanged();
    partial void OnfirstDegreeAccessChanging(int value);
    partial void OnfirstDegreeAccessChanged();
    partial void OnsecondDegreeAccessChanging(int value);
    partial void OnsecondDegreeAccessChanged();
    partial void OnpublicAccessChanging(int value);
    partial void OnpublicAccessChanged();
    partial void OnenteredReferralSourceIdChanging(System.Nullable<byte> value);
    partial void OnenteredReferralSourceIdChanged();
    partial void OnaddressIdChanging(System.Guid value);
    partial void OnaddressIdChanged();
    partial void OnprofilePhotoIdChanging(System.Nullable<System.Guid> value);
    partial void OnprofilePhotoIdChanged();
    partial void OnethnicFlagsChanging(System.Nullable<int> value);
    partial void OnethnicFlagsChanged();
    partial void OndisabilityFlagsChanging(System.Nullable<int> value);
    partial void OndisabilityFlagsChanged();
    partial void OndateOfBirthPartsChanging(System.Nullable<byte> value);
    partial void OndateOfBirthPartsChanged();
    partial void OnprimaryPhoneNumberChanging(string value);
    partial void OnprimaryPhoneNumberChanged();
    partial void OnprimaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OnprimaryPhoneNumberTypeChanged();
    partial void OnsecondaryPhoneNumberChanging(string value);
    partial void OnsecondaryPhoneNumberChanged();
    partial void OnsecondaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OnsecondaryPhoneNumberTypeChanged();
    partial void OntertiaryPhoneNumberChanging(string value);
    partial void OntertiaryPhoneNumberChanged();
    partial void OntertiaryPhoneNumberTypeChanging(System.Nullable<byte> value);
    partial void OntertiaryPhoneNumberTypeChanged();
    #endregion
		
		public MemberEntity()
		{
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfBirth", DbType="SmallDateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> dateOfBirth
		{
			get
			{
				return this._dateOfBirth;
			}
			set
			{
				if ((this._dateOfBirth != value))
				{
					this.OndateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirth = value;
					this.SendPropertyChanged("dateOfBirth");
					this.OndateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employerAccess", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte employerAccess
		{
			get
			{
				return this._employerAccess;
			}
			set
			{
				if ((this._employerAccess != value))
				{
					this.OnemployerAccessChanging(value);
					this.SendPropertyChanging();
					this._employerAccess = value;
					this.SendPropertyChanged("employerAccess");
					this.OnemployerAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstDegreeAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int firstDegreeAccess
		{
			get
			{
				return this._firstDegreeAccess;
			}
			set
			{
				if ((this._firstDegreeAccess != value))
				{
					this.OnfirstDegreeAccessChanging(value);
					this.SendPropertyChanging();
					this._firstDegreeAccess = value;
					this.SendPropertyChanged("firstDegreeAccess");
					this.OnfirstDegreeAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondDegreeAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int secondDegreeAccess
		{
			get
			{
				return this._secondDegreeAccess;
			}
			set
			{
				if ((this._secondDegreeAccess != value))
				{
					this.OnsecondDegreeAccessChanging(value);
					this.SendPropertyChanging();
					this._secondDegreeAccess = value;
					this.SendPropertyChanged("secondDegreeAccess");
					this.OnsecondDegreeAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publicAccess", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int publicAccess
		{
			get
			{
				return this._publicAccess;
			}
			set
			{
				if ((this._publicAccess != value))
				{
					this.OnpublicAccessChanging(value);
					this.SendPropertyChanging();
					this._publicAccess = value;
					this.SendPropertyChanged("publicAccess");
					this.OnpublicAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enteredReferralSourceId", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> enteredReferralSourceId
		{
			get
			{
				return this._enteredReferralSourceId;
			}
			set
			{
				if ((this._enteredReferralSourceId != value))
				{
					this.OnenteredReferralSourceIdChanging(value);
					this.SendPropertyChanging();
					this._enteredReferralSourceId = value;
					this.SendPropertyChanged("enteredReferralSourceId");
					this.OnenteredReferralSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid addressId
		{
			get
			{
				return this._addressId;
			}
			set
			{
				if ((this._addressId != value))
				{
					this.OnaddressIdChanging(value);
					this.SendPropertyChanging();
					this._addressId = value;
					this.SendPropertyChanged("addressId");
					this.OnaddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profilePhotoId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> profilePhotoId
		{
			get
			{
				return this._profilePhotoId;
			}
			set
			{
				if ((this._profilePhotoId != value))
				{
					this.OnprofilePhotoIdChanging(value);
					this.SendPropertyChanging();
					this._profilePhotoId = value;
					this.SendPropertyChanged("profilePhotoId");
					this.OnprofilePhotoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ethnicFlags", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ethnicFlags
		{
			get
			{
				return this._ethnicFlags;
			}
			set
			{
				if ((this._ethnicFlags != value))
				{
					this.OnethnicFlagsChanging(value);
					this.SendPropertyChanging();
					this._ethnicFlags = value;
					this.SendPropertyChanged("ethnicFlags");
					this.OnethnicFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabilityFlags", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> disabilityFlags
		{
			get
			{
				return this._disabilityFlags;
			}
			set
			{
				if ((this._disabilityFlags != value))
				{
					this.OndisabilityFlagsChanging(value);
					this.SendPropertyChanging();
					this._disabilityFlags = value;
					this.SendPropertyChanged("disabilityFlags");
					this.OndisabilityFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOfBirthParts", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> dateOfBirthParts
		{
			get
			{
				return this._dateOfBirthParts;
			}
			set
			{
				if ((this._dateOfBirthParts != value))
				{
					this.OndateOfBirthPartsChanging(value);
					this.SendPropertyChanging();
					this._dateOfBirthParts = value;
					this.SendPropertyChanged("dateOfBirthParts");
					this.OndateOfBirthPartsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string primaryPhoneNumber
		{
			get
			{
				return this._primaryPhoneNumber;
			}
			set
			{
				if ((this._primaryPhoneNumber != value))
				{
					this.OnprimaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._primaryPhoneNumber = value;
					this.SendPropertyChanged("primaryPhoneNumber");
					this.OnprimaryPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> primaryPhoneNumberType
		{
			get
			{
				return this._primaryPhoneNumberType;
			}
			set
			{
				if ((this._primaryPhoneNumberType != value))
				{
					this.OnprimaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._primaryPhoneNumberType = value;
					this.SendPropertyChanged("primaryPhoneNumberType");
					this.OnprimaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryPhoneNumber
		{
			get
			{
				return this._secondaryPhoneNumber;
			}
			set
			{
				if ((this._secondaryPhoneNumber != value))
				{
					this.OnsecondaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhoneNumber = value;
					this.SendPropertyChanged("secondaryPhoneNumber");
					this.OnsecondaryPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> secondaryPhoneNumberType
		{
			get
			{
				return this._secondaryPhoneNumberType;
			}
			set
			{
				if ((this._secondaryPhoneNumberType != value))
				{
					this.OnsecondaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._secondaryPhoneNumberType = value;
					this.SendPropertyChanged("secondaryPhoneNumberType");
					this.OnsecondaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tertiaryPhoneNumber", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string tertiaryPhoneNumber
		{
			get
			{
				return this._tertiaryPhoneNumber;
			}
			set
			{
				if ((this._tertiaryPhoneNumber != value))
				{
					this.OntertiaryPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._tertiaryPhoneNumber = value;
					this.SendPropertyChanged("tertiaryPhoneNumber");
					this.OntertiaryPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tertiaryPhoneNumberType", DbType="TinyInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<byte> tertiaryPhoneNumberType
		{
			get
			{
				return this._tertiaryPhoneNumberType;
			}
			set
			{
				if ((this._tertiaryPhoneNumberType != value))
				{
					this.OntertiaryPhoneNumberTypeChanging(value);
					this.SendPropertyChanging();
					this._tertiaryPhoneNumberType = value;
					this.SendPropertyChanged("tertiaryPhoneNumberType");
					this.OntertiaryPhoneNumberTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_MemberEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.MemberEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.MemberEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegisteredUser")]
	internal partial class RegisteredUserEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _loginId;
		
		private System.DateTime _createdTime;
		
		private string _emailAddress;
		
		private string _firstName;
		
		private string _lastName;
		
		private short _flags;
		
		private string _passwordHash;
		
		private bool _emailAddressVerified;
		
		private string _secondaryEmailAddress;
		
		private System.Nullable<bool> _secondaryEmailAddressVerified;
		
		private EntityRef<MemberEntity> _MemberEntity;
		
		private EntityRef<AdministratorEntity> _AdministratorEntity;
		
		private EntityRef<EmployerEntity> _EmployerEntity;
		
		private EntityRef<CommunityAdministratorEntity> _CommunityAdministratorEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnloginIdChanging(string value);
    partial void OnloginIdChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnemailAddressChanging(string value);
    partial void OnemailAddressChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnflagsChanging(short value);
    partial void OnflagsChanged();
    partial void OnpasswordHashChanging(string value);
    partial void OnpasswordHashChanged();
    partial void OnemailAddressVerifiedChanging(bool value);
    partial void OnemailAddressVerifiedChanged();
    partial void OnsecondaryEmailAddressChanging(string value);
    partial void OnsecondaryEmailAddressChanged();
    partial void OnsecondaryEmailAddressVerifiedChanging(System.Nullable<bool> value);
    partial void OnsecondaryEmailAddressVerifiedChanged();
    #endregion
		
		public RegisteredUserEntity()
		{
			this._MemberEntity = default(EntityRef<MemberEntity>);
			this._AdministratorEntity = default(EntityRef<AdministratorEntity>);
			this._EmployerEntity = default(EntityRef<EmployerEntity>);
			this._CommunityAdministratorEntity = default(EntityRef<CommunityAdministratorEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginId", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string loginId
		{
			get
			{
				return this._loginId;
			}
			set
			{
				if ((this._loginId != value))
				{
					this.OnloginIdChanging(value);
					this.SendPropertyChanging();
					this._loginId = value;
					this.SendPropertyChanged("loginId");
					this.OnloginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddress", DbType="NVarChar(320) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string emailAddress
		{
			get
			{
				return this._emailAddress;
			}
			set
			{
				if ((this._emailAddress != value))
				{
					this.OnemailAddressChanging(value);
					this.SendPropertyChanging();
					this._emailAddress = value;
					this.SendPropertyChanged("emailAddress");
					this.OnemailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flags", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwordHash", DbType="Char(24)", UpdateCheck=UpdateCheck.Never)]
		public string passwordHash
		{
			get
			{
				return this._passwordHash;
			}
			set
			{
				if ((this._passwordHash != value))
				{
					this.OnpasswordHashChanging(value);
					this.SendPropertyChanging();
					this._passwordHash = value;
					this.SendPropertyChanged("passwordHash");
					this.OnpasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailAddressVerified", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool emailAddressVerified
		{
			get
			{
				return this._emailAddressVerified;
			}
			set
			{
				if ((this._emailAddressVerified != value))
				{
					this.OnemailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._emailAddressVerified = value;
					this.SendPropertyChanged("emailAddressVerified");
					this.OnemailAddressVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmailAddress", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string secondaryEmailAddress
		{
			get
			{
				return this._secondaryEmailAddress;
			}
			set
			{
				if ((this._secondaryEmailAddress != value))
				{
					this.OnsecondaryEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddress = value;
					this.SendPropertyChanged("secondaryEmailAddress");
					this.OnsecondaryEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondaryEmailAddressVerified", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> secondaryEmailAddressVerified
		{
			get
			{
				return this._secondaryEmailAddressVerified;
			}
			set
			{
				if ((this._secondaryEmailAddressVerified != value))
				{
					this.OnsecondaryEmailAddressVerifiedChanging(value);
					this.SendPropertyChanging();
					this._secondaryEmailAddressVerified = value;
					this.SendPropertyChanged("secondaryEmailAddressVerified");
					this.OnsecondaryEmailAddressVerifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_MemberEntity", Storage="_MemberEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public MemberEntity MemberEntity
		{
			get
			{
				return this._MemberEntity.Entity;
			}
			set
			{
				MemberEntity previousValue = this._MemberEntity.Entity;
				if (((previousValue != value) 
							|| (this._MemberEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._MemberEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("MemberEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_AdministratorEntity", Storage="_AdministratorEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public AdministratorEntity AdministratorEntity
		{
			get
			{
				return this._AdministratorEntity.Entity;
			}
			set
			{
				AdministratorEntity previousValue = this._AdministratorEntity.Entity;
				if (((previousValue != value) 
							|| (this._AdministratorEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdministratorEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._AdministratorEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("AdministratorEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_EmployerEntity", Storage="_EmployerEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public EmployerEntity EmployerEntity
		{
			get
			{
				return this._EmployerEntity.Entity;
			}
			set
			{
				EmployerEntity previousValue = this._EmployerEntity.Entity;
				if (((previousValue != value) 
							|| (this._EmployerEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployerEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._EmployerEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("EmployerEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_CommunityAdministratorEntity", Storage="_CommunityAdministratorEntity", ThisKey="id", OtherKey="id", IsUnique=true, IsForeignKey=false)]
		public CommunityAdministratorEntity CommunityAdministratorEntity
		{
			get
			{
				return this._CommunityAdministratorEntity.Entity;
			}
			set
			{
				CommunityAdministratorEntity previousValue = this._CommunityAdministratorEntity.Entity;
				if (((previousValue != value) 
							|| (this._CommunityAdministratorEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommunityAdministratorEntity.Entity = null;
						previousValue.RegisteredUserEntity = null;
					}
					this._CommunityAdministratorEntity.Entity = value;
					if ((value != null))
					{
						value.RegisteredUserEntity = this;
					}
					this.SendPropertyChanged("CommunityAdministratorEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrator")]
	internal partial class AdministratorEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    #endregion
		
		public AdministratorEntity()
		{
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_AdministratorEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.AdministratorEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.AdministratorEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employer")]
	internal partial class EmployerEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _contactPhoneNumber;
		
		private string _jobTitle;
		
		private byte _subRole;
		
		private System.Nullable<System.Guid> _ownerPartnerId;
		
		private System.Guid _organisationId;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OncontactPhoneNumberChanging(string value);
    partial void OncontactPhoneNumberChanged();
    partial void OnjobTitleChanging(string value);
    partial void OnjobTitleChanged();
    partial void OnsubRoleChanging(byte value);
    partial void OnsubRoleChanged();
    partial void OnownerPartnerIdChanging(System.Nullable<System.Guid> value);
    partial void OnownerPartnerIdChanged();
    partial void OnorganisationIdChanging(System.Guid value);
    partial void OnorganisationIdChanged();
    #endregion
		
		public EmployerEntity()
		{
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactPhoneNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string contactPhoneNumber
		{
			get
			{
				return this._contactPhoneNumber;
			}
			set
			{
				if ((this._contactPhoneNumber != value))
				{
					this.OncontactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._contactPhoneNumber = value;
					this.SendPropertyChanged("contactPhoneNumber");
					this.OncontactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobTitle", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string jobTitle
		{
			get
			{
				return this._jobTitle;
			}
			set
			{
				if ((this._jobTitle != value))
				{
					this.OnjobTitleChanging(value);
					this.SendPropertyChanging();
					this._jobTitle = value;
					this.SendPropertyChanged("jobTitle");
					this.OnjobTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subRole", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte subRole
		{
			get
			{
				return this._subRole;
			}
			set
			{
				if ((this._subRole != value))
				{
					this.OnsubRoleChanging(value);
					this.SendPropertyChanging();
					this._subRole = value;
					this.SendPropertyChanged("subRole");
					this.OnsubRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ownerPartnerId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> ownerPartnerId
		{
			get
			{
				return this._ownerPartnerId;
			}
			set
			{
				if ((this._ownerPartnerId != value))
				{
					this.OnownerPartnerIdChanging(value);
					this.SendPropertyChanging();
					this._ownerPartnerId = value;
					this.SendPropertyChanged("ownerPartnerId");
					this.OnownerPartnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisationId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid organisationId
		{
			get
			{
				return this._organisationId;
			}
			set
			{
				if ((this._organisationId != value))
				{
					this.OnorganisationIdChanging(value);
					this.SendPropertyChanging();
					this._organisationId = value;
					this.SendPropertyChanged("organisationId");
					this.OnorganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_EmployerEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.EmployerEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.EmployerEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	internal partial class UserLoginEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private System.DateTime _time;
		
		private string _ipAddress;
		
		private string _sessionId;
		
		private int _activityType;
		
		private System.Nullable<int> _authenticationStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnipAddressChanging(string value);
    partial void OnipAddressChanged();
    partial void OnsessionIdChanging(string value);
    partial void OnsessionIdChanged();
    partial void OnactivityTypeChanging(int value);
    partial void OnactivityTypeChanged();
    partial void OnauthenticationStatusChanging(System.Nullable<int> value);
    partial void OnauthenticationStatusChanged();
    #endregion
		
		public UserLoginEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAddress", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ipAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnipAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("ipAddress");
					this.OnipAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					this.OnsessionIdChanging(value);
					this.SendPropertyChanging();
					this._sessionId = value;
					this.SendPropertyChanged("sessionId");
					this.OnsessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int activityType
		{
			get
			{
				return this._activityType;
			}
			set
			{
				if ((this._activityType != value))
				{
					this.OnactivityTypeChanging(value);
					this.SendPropertyChanging();
					this._activityType = value;
					this.SendPropertyChanged("activityType");
					this.OnactivityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authenticationStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> authenticationStatus
		{
			get
			{
				return this._authenticationStatus;
			}
			set
			{
				if ((this._authenticationStatus != value))
				{
					this.OnauthenticationStatusChanging(value);
					this.SendPropertyChanging();
					this._authenticationStatus = value;
					this.SendPropertyChanged("authenticationStatus");
					this.OnauthenticationStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommunityAdministrator")]
	internal partial class CommunityAdministratorEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private EntityRef<RegisteredUserEntity> _RegisteredUserEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    #endregion
		
		public CommunityAdministratorEntity()
		{
			this._RegisteredUserEntity = default(EntityRef<RegisteredUserEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._RegisteredUserEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegisteredUserEntity_CommunityAdministratorEntity", Storage="_RegisteredUserEntity", ThisKey="id", OtherKey="id", IsForeignKey=true)]
		public RegisteredUserEntity RegisteredUserEntity
		{
			get
			{
				return this._RegisteredUserEntity.Entity;
			}
			set
			{
				RegisteredUserEntity previousValue = this._RegisteredUserEntity.Entity;
				if (((previousValue != value) 
							|| (this._RegisteredUserEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegisteredUserEntity.Entity = null;
						previousValue.CommunityAdministratorEntity = null;
					}
					this._RegisteredUserEntity.Entity = value;
					if ((value != null))
					{
						value.CommunityAdministratorEntity = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(System.Guid);
					}
					this.SendPropertyChanged("RegisteredUserEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDisablement")]
	internal partial class UserDisablementEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private System.DateTime _time;
		
		private System.Guid _disabledById;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OndisabledByIdChanging(System.Guid value);
    partial void OndisabledByIdChanged();
    #endregion
		
		public UserDisablementEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disabledById", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid disabledById
		{
			get
			{
				return this._disabledById;
			}
			set
			{
				if ((this._disabledById != value))
				{
					this.OndisabledByIdChanging(value);
					this.SendPropertyChanging();
					this._disabledById = value;
					this.SendPropertyChanged("disabledById");
					this.OndisabledByIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserEnablement")]
	internal partial class UserEnablementEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private System.DateTime _time;
		
		private System.Guid _enabledById;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnenabledByIdChanging(System.Guid value);
    partial void OnenabledByIdChanged();
    #endregion
		
		public UserEnablementEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabledById", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid enabledById
		{
			get
			{
				return this._enabledById;
			}
			set
			{
				if ((this._enabledById != value))
				{
					this.OnenabledByIdChanging(value);
					this.SendPropertyChanging();
					this._enabledById = value;
					this.SendPropertyChanged("enabledById");
					this.OnenabledByIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActivation")]
	internal partial class UserActivationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private System.DateTime _time;
		
		private System.Guid _activatedById;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnactivatedByIdChanging(System.Guid value);
    partial void OnactivatedByIdChanged();
    #endregion
		
		public UserActivationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activatedById", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid activatedById
		{
			get
			{
				return this._activatedById;
			}
			set
			{
				if ((this._activatedById != value))
				{
					this.OnactivatedByIdChanging(value);
					this.SendPropertyChanging();
					this._activatedById = value;
					this.SendPropertyChanged("activatedById");
					this.OnactivatedByIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDeactivation")]
	internal partial class UserDeactivationEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private System.DateTime _time;
		
		private System.Guid _deactivatedById;
		
		private string _reason;
		
		private string _comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OndeactivatedByIdChanging(System.Guid value);
    partial void OndeactivatedByIdChanged();
    partial void OnreasonChanging(string value);
    partial void OnreasonChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public UserDeactivationEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deactivatedById", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid deactivatedById
		{
			get
			{
				return this._deactivatedById;
			}
			set
			{
				if ((this._deactivatedById != value))
				{
					this.OndeactivatedByIdChanging(value);
					this.SendPropertyChanging();
					this._deactivatedById = value;
					this.SendPropertyChanged("deactivatedById");
					this.OndeactivatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reason", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string reason
		{
			get
			{
				return this._reason;
			}
			set
			{
				if ((this._reason != value))
				{
					this.OnreasonChanging(value);
					this.SendPropertyChanging();
					this._reason = value;
					this.SendPropertyChanged("reason");
					this.OnreasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(1000)", UpdateCheck=UpdateCheck.Never)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
