#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Apps.Agents.Reports.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class ReportsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertReportDefinitionEntity(ReportDefinitionEntity instance);
    partial void UpdateReportDefinitionEntity(ReportDefinitionEntity instance);
    partial void DeleteReportDefinitionEntity(ReportDefinitionEntity instance);
    partial void InsertReportParameterEntity(ReportParameterEntity instance);
    partial void UpdateReportParameterEntity(ReportParameterEntity instance);
    partial void DeleteReportParameterEntity(ReportParameterEntity instance);
    partial void InsertReportParameterSetEntity(ReportParameterSetEntity instance);
    partial void UpdateReportParameterSetEntity(ReportParameterSetEntity instance);
    partial void DeleteReportParameterSetEntity(ReportParameterSetEntity instance);
    partial void InsertSentReportEntity(SentReportEntity instance);
    partial void UpdateSentReportEntity(SentReportEntity instance);
    partial void DeleteSentReportEntity(SentReportEntity instance);
    #endregion
		
		public ReportsDataContext() : 
				base(global::LinkMe.Apps.Agents.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ReportsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<ReportDefinitionEntity> ReportDefinitionEntities
		{
			get
			{
				return this.GetTable<ReportDefinitionEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ReportParameterEntity> ReportParameterEntities
		{
			get
			{
				return this.GetTable<ReportParameterEntity>();
			}
		}
		
		internal System.Data.Linq.Table<ReportParameterSetEntity> ReportParameterSetEntities
		{
			get
			{
				return this.GetTable<ReportParameterSetEntity>();
			}
		}
		
		internal System.Data.Linq.Table<SentReportEntity> SentReportEntities
		{
			get
			{
				return this.GetTable<SentReportEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportDefinition")]
	internal partial class ReportDefinitionEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _reportType;
		
		private bool _toAccountManager;
		
		private bool _toClient;
		
		private System.Guid _organisationId;
		
		private System.Nullable<System.Guid> _parameterSetId;
		
		private EntitySet<SentReportEntity> _SentReportEntities;
		
		private EntityRef<ReportParameterSetEntity> _ReportParameterSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnreportTypeChanging(string value);
    partial void OnreportTypeChanged();
    partial void OntoAccountManagerChanging(bool value);
    partial void OntoAccountManagerChanged();
    partial void OntoClientChanging(bool value);
    partial void OntoClientChanged();
    partial void OnorganisationIdChanging(System.Guid value);
    partial void OnorganisationIdChanged();
    partial void OnparameterSetIdChanging(System.Nullable<System.Guid> value);
    partial void OnparameterSetIdChanged();
    #endregion
		
		public ReportDefinitionEntity()
		{
			this._SentReportEntities = new EntitySet<SentReportEntity>(new Action<SentReportEntity>(this.attach_SentReportEntities), new Action<SentReportEntity>(this.detach_SentReportEntities));
			this._ReportParameterSetEntity = default(EntityRef<ReportParameterSetEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportType", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string reportType
		{
			get
			{
				return this._reportType;
			}
			set
			{
				if ((this._reportType != value))
				{
					this.OnreportTypeChanging(value);
					this.SendPropertyChanging();
					this._reportType = value;
					this.SendPropertyChanged("reportType");
					this.OnreportTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toAccountManager", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool toAccountManager
		{
			get
			{
				return this._toAccountManager;
			}
			set
			{
				if ((this._toAccountManager != value))
				{
					this.OntoAccountManagerChanging(value);
					this.SendPropertyChanging();
					this._toAccountManager = value;
					this.SendPropertyChanged("toAccountManager");
					this.OntoAccountManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_toClient", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool toClient
		{
			get
			{
				return this._toClient;
			}
			set
			{
				if ((this._toClient != value))
				{
					this.OntoClientChanging(value);
					this.SendPropertyChanging();
					this._toClient = value;
					this.SendPropertyChanged("toClient");
					this.OntoClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_organisationId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid organisationId
		{
			get
			{
				return this._organisationId;
			}
			set
			{
				if ((this._organisationId != value))
				{
					this.OnorganisationIdChanging(value);
					this.SendPropertyChanging();
					this._organisationId = value;
					this.SendPropertyChanged("organisationId");
					this.OnorganisationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameterSetId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> parameterSetId
		{
			get
			{
				return this._parameterSetId;
			}
			set
			{
				if ((this._parameterSetId != value))
				{
					if (this._ReportParameterSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparameterSetIdChanging(value);
					this.SendPropertyChanging();
					this._parameterSetId = value;
					this.SendPropertyChanged("parameterSetId");
					this.OnparameterSetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDefinitionEntity_SentReportEntity", Storage="_SentReportEntities", ThisKey="id", OtherKey="reportDefinitionId")]
		public EntitySet<SentReportEntity> SentReportEntities
		{
			get
			{
				return this._SentReportEntities;
			}
			set
			{
				this._SentReportEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportParameterSetEntity_ReportDefinitionEntity", Storage="_ReportParameterSetEntity", ThisKey="parameterSetId", OtherKey="id", IsForeignKey=true)]
		public ReportParameterSetEntity ReportParameterSetEntity
		{
			get
			{
				return this._ReportParameterSetEntity.Entity;
			}
			set
			{
				ReportParameterSetEntity previousValue = this._ReportParameterSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ReportParameterSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportParameterSetEntity.Entity = null;
						previousValue.ReportDefinitionEntities.Remove(this);
					}
					this._ReportParameterSetEntity.Entity = value;
					if ((value != null))
					{
						value.ReportDefinitionEntities.Add(this);
						this._parameterSetId = value.id;
					}
					else
					{
						this._parameterSetId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ReportParameterSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SentReportEntities(SentReportEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReportDefinitionEntity = this;
		}
		
		private void detach_SentReportEntities(SentReportEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReportDefinitionEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportParameter")]
	internal partial class ReportParameterEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private string _type;
		
		private string _value;
		
		private System.Guid _setId;
		
		private EntityRef<ReportParameterSetEntity> _ReportParameterSetEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnsetIdChanging(System.Guid value);
    partial void OnsetIdChanged();
    #endregion
		
		public ReportParameterEntity()
		{
			this._ReportParameterSetEntity = default(EntityRef<ReportParameterSetEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_setId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid setId
		{
			get
			{
				return this._setId;
			}
			set
			{
				if ((this._setId != value))
				{
					if (this._ReportParameterSetEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsetIdChanging(value);
					this.SendPropertyChanging();
					this._setId = value;
					this.SendPropertyChanged("setId");
					this.OnsetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportParameterSetEntity_ReportParameterEntity", Storage="_ReportParameterSetEntity", ThisKey="setId", OtherKey="id", IsForeignKey=true)]
		public ReportParameterSetEntity ReportParameterSetEntity
		{
			get
			{
				return this._ReportParameterSetEntity.Entity;
			}
			set
			{
				ReportParameterSetEntity previousValue = this._ReportParameterSetEntity.Entity;
				if (((previousValue != value) 
							|| (this._ReportParameterSetEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportParameterSetEntity.Entity = null;
						previousValue.ReportParameterEntities.Remove(this);
					}
					this._ReportParameterSetEntity.Entity = value;
					if ((value != null))
					{
						value.ReportParameterEntities.Add(this);
						this._setId = value.id;
					}
					else
					{
						this._setId = default(System.Guid);
					}
					this.SendPropertyChanged("ReportParameterSetEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportParameterSet")]
	internal partial class ReportParameterSetEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private EntitySet<ReportDefinitionEntity> _ReportDefinitionEntities;
		
		private EntitySet<ReportParameterEntity> _ReportParameterEntities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    #endregion
		
		public ReportParameterSetEntity()
		{
			this._ReportDefinitionEntities = new EntitySet<ReportDefinitionEntity>(new Action<ReportDefinitionEntity>(this.attach_ReportDefinitionEntities), new Action<ReportDefinitionEntity>(this.detach_ReportDefinitionEntities));
			this._ReportParameterEntities = new EntitySet<ReportParameterEntity>(new Action<ReportParameterEntity>(this.attach_ReportParameterEntities), new Action<ReportParameterEntity>(this.detach_ReportParameterEntities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportParameterSetEntity_ReportDefinitionEntity", Storage="_ReportDefinitionEntities", ThisKey="id", OtherKey="parameterSetId")]
		public EntitySet<ReportDefinitionEntity> ReportDefinitionEntities
		{
			get
			{
				return this._ReportDefinitionEntities;
			}
			set
			{
				this._ReportDefinitionEntities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportParameterSetEntity_ReportParameterEntity", Storage="_ReportParameterEntities", ThisKey="id", OtherKey="setId")]
		public EntitySet<ReportParameterEntity> ReportParameterEntities
		{
			get
			{
				return this._ReportParameterEntities;
			}
			set
			{
				this._ReportParameterEntities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportDefinitionEntities(ReportDefinitionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReportParameterSetEntity = this;
		}
		
		private void detach_ReportDefinitionEntities(ReportDefinitionEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReportParameterSetEntity = null;
		}
		
		private void attach_ReportParameterEntities(ReportParameterEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReportParameterSetEntity = this;
		}
		
		private void detach_ReportParameterEntities(ReportParameterEntity entity)
		{
			this.SendPropertyChanging();
			entity.ReportParameterSetEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SentReport")]
	internal partial class SentReportEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.DateTime _sentTime;
		
		private System.DateTime _periodStart;
		
		private System.DateTime _periodEnd;
		
		private System.Guid _reportDefinitionId;
		
		private System.Nullable<System.Guid> _sentToAccountManagerId;
		
		private string _sentToClientEmail;
		
		private EntityRef<ReportDefinitionEntity> _ReportDefinitionEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnsentTimeChanging(System.DateTime value);
    partial void OnsentTimeChanged();
    partial void OnperiodStartChanging(System.DateTime value);
    partial void OnperiodStartChanged();
    partial void OnperiodEndChanging(System.DateTime value);
    partial void OnperiodEndChanged();
    partial void OnreportDefinitionIdChanging(System.Guid value);
    partial void OnreportDefinitionIdChanged();
    partial void OnsentToAccountManagerIdChanging(System.Nullable<System.Guid> value);
    partial void OnsentToAccountManagerIdChanged();
    partial void OnsentToClientEmailChanging(string value);
    partial void OnsentToClientEmailChanged();
    #endregion
		
		public SentReportEntity()
		{
			this._ReportDefinitionEntity = default(EntityRef<ReportDefinitionEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentTime", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime sentTime
		{
			get
			{
				return this._sentTime;
			}
			set
			{
				if ((this._sentTime != value))
				{
					this.OnsentTimeChanging(value);
					this.SendPropertyChanging();
					this._sentTime = value;
					this.SendPropertyChanged("sentTime");
					this.OnsentTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodStart", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime periodStart
		{
			get
			{
				return this._periodStart;
			}
			set
			{
				if ((this._periodStart != value))
				{
					this.OnperiodStartChanging(value);
					this.SendPropertyChanging();
					this._periodStart = value;
					this.SendPropertyChanged("periodStart");
					this.OnperiodStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_periodEnd", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime periodEnd
		{
			get
			{
				return this._periodEnd;
			}
			set
			{
				if ((this._periodEnd != value))
				{
					this.OnperiodEndChanging(value);
					this.SendPropertyChanging();
					this._periodEnd = value;
					this.SendPropertyChanged("periodEnd");
					this.OnperiodEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportDefinitionId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid reportDefinitionId
		{
			get
			{
				return this._reportDefinitionId;
			}
			set
			{
				if ((this._reportDefinitionId != value))
				{
					if (this._ReportDefinitionEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnreportDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._reportDefinitionId = value;
					this.SendPropertyChanged("reportDefinitionId");
					this.OnreportDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentToAccountManagerId", DbType="UniqueIdentifier", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.Guid> sentToAccountManagerId
		{
			get
			{
				return this._sentToAccountManagerId;
			}
			set
			{
				if ((this._sentToAccountManagerId != value))
				{
					this.OnsentToAccountManagerIdChanging(value);
					this.SendPropertyChanging();
					this._sentToAccountManagerId = value;
					this.SendPropertyChanged("sentToAccountManagerId");
					this.OnsentToAccountManagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sentToClientEmail", DbType="NVarChar(320)", UpdateCheck=UpdateCheck.Never)]
		public string sentToClientEmail
		{
			get
			{
				return this._sentToClientEmail;
			}
			set
			{
				if ((this._sentToClientEmail != value))
				{
					this.OnsentToClientEmailChanging(value);
					this.SendPropertyChanging();
					this._sentToClientEmail = value;
					this.SendPropertyChanged("sentToClientEmail");
					this.OnsentToClientEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportDefinitionEntity_SentReportEntity", Storage="_ReportDefinitionEntity", ThisKey="reportDefinitionId", OtherKey="id", IsForeignKey=true)]
		public ReportDefinitionEntity ReportDefinitionEntity
		{
			get
			{
				return this._ReportDefinitionEntity.Entity;
			}
			set
			{
				ReportDefinitionEntity previousValue = this._ReportDefinitionEntity.Entity;
				if (((previousValue != value) 
							|| (this._ReportDefinitionEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportDefinitionEntity.Entity = null;
						previousValue.SentReportEntities.Remove(this);
					}
					this._ReportDefinitionEntity.Entity = value;
					if ((value != null))
					{
						value.SentReportEntities.Add(this);
						this._reportDefinitionId = value.id;
					}
					else
					{
						this._reportDefinitionId = default(System.Guid);
					}
					this.SendPropertyChanged("ReportDefinitionEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
