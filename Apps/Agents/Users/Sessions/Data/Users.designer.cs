#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinkMe.Apps.Agents.Users.Sessions.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LinkMe")]
	public partial class UsersDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserLoginEntity(UserLoginEntity instance);
    partial void UpdateUserLoginEntity(UserLoginEntity instance);
    partial void DeleteUserLoginEntity(UserLoginEntity instance);
    #endregion
		
		public UsersDataContext() : 
				base(global::LinkMe.Apps.Agents.Properties.Settings.Default.LinkMeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UsersDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsersDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsersDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsersDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<UserLoginEntity> UserLoginEntities
		{
			get
			{
				return this.GetTable<UserLoginEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	internal partial class UserLoginEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _id;
		
		private System.Guid _userId;
		
		private System.DateTime _time;
		
		private string _ipAddress;
		
		private string _sessionId;
		
		private int _activityType;
		
		private System.Nullable<int> _authenticationStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(System.Guid value);
    partial void OnidChanged();
    partial void OnuserIdChanging(System.Guid value);
    partial void OnuserIdChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnipAddressChanging(string value);
    partial void OnipAddressChanged();
    partial void OnsessionIdChanging(string value);
    partial void OnsessionIdChanged();
    partial void OnactivityTypeChanging(int value);
    partial void OnactivityTypeChanged();
    partial void OnauthenticationStatusChanging(System.Nullable<int> value);
    partial void OnauthenticationStatusChanged();
    #endregion
		
		public UserLoginEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="UniqueIdentifier NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Guid userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAddress", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string ipAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnipAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("ipAddress");
					this.OnipAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sessionId", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string sessionId
		{
			get
			{
				return this._sessionId;
			}
			set
			{
				if ((this._sessionId != value))
				{
					this.OnsessionIdChanging(value);
					this.SendPropertyChanging();
					this._sessionId = value;
					this.SendPropertyChanged("sessionId");
					this.OnsessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityType", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int activityType
		{
			get
			{
				return this._activityType;
			}
			set
			{
				if ((this._activityType != value))
				{
					this.OnactivityTypeChanging(value);
					this.SendPropertyChanging();
					this._activityType = value;
					this.SendPropertyChanged("activityType");
					this.OnactivityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authenticationStatus", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> authenticationStatus
		{
			get
			{
				return this._authenticationStatus;
			}
			set
			{
				if ((this._authenticationStatus != value))
				{
					this.OnauthenticationStatusChanging(value);
					this.SendPropertyChanging();
					this._authenticationStatus = value;
					this.SendPropertyChanged("authenticationStatus");
					this.OnauthenticationStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
