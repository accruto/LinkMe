<%@ Page language="c#" Inherits="NUnitAspTestPages.MalformedTestPage" Codebehind="MalformedTestPage.aspx.cs" %>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" >
<html>
	<HEAD>
		<title>MalformedTestPage</title>
		<meta name="GENERATOR" Content="Microsoft Visual Studio 7.0">
		<meta name="CODE_LANGUAGE" Content="C#">
		<meta name="vs_defaultClientScript" content="JavaScript">
		<meta name="vs_targetSchema" content="http://schemas.microsoft.com/intellisense/ie5">
	</HEAD>
	<body single-quoted='some"text'>
		<script language="javascript">
			if(true && true) {} 
		</script>
		<form method="post" runat="server">
			<hr noshade />
			This page has malformed XHTML.
			<br>
			The DOCTYPE tag is missing a URL, the meta tags are missing their closing slash 
			and the br tag is missing its closing slash.
			<br>
			Some meta tag attributes are missing their double quotes. Body attribute has 
			one single-quoted attribute value containg a single double-quote character
			<br>
			<br>
			It's typical of a page generated by Visual Studio .NET, and NUnitAsp must be 
			able to test it.
			<br>
			<br>
			<p>Let's test lists, too:</p>
			<ul>
				<li>
					Foo</li>
				<li>
					Bar</li>
				<li>
					Baz</li>
				<li>
					And this list item will be very long, and separated by at least one line break, 
					and <b>will</b> have a terminating tag. Will that cause the current strategy to 
					break, or will it work?</li>
				<li>
				An unterminated item
				<li>
				yet another one
			</ul>
			Another badly formatted element <input type="button" value=">>">

			<style> <!-- a comment inside of a style tag with whitespace after the style tag breaks the parser!  (How weird) --></style>


			<p>

				One ASP.NET control is included so there's something to test against.
				<br>
				<asp:CheckBox id="control" Runat="server" Text="And here it is..."></asp:CheckBox>
			</p>
		</form>
	</body>
</html>
