<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="transparentProxy"
                 type="Microsoft.Practices.Unity.InterceptionExtension.TransparentProxyInterceptor, Microsoft.Practices.Unity.Interception"/>
      <typeAlias alias="virtualMethod"
                 type="Microsoft.Practices.Unity.InterceptionExtension.VirtualMethodInterceptor, Microsoft.Practices.Unity.Interception"/>
      <typeAlias alias="wrappable"
                 type="TestSupport.Unity.Wrappable, TestSupport.Unity" />
      <typeAlias alias="wrappableWithProperty"
                 type="TestSupport.Unity.WrappableWithProperty, TestSupport.Unity" />
      <typeAlias alias="wrappableVirtual"
                 type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.WrappableWithVirtualMethods, Tests.Unity.Interception.Configuration" />
    </typeAliases>

    <containers>
      <container name="CanConfigureDefaultInterceptorForType">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy">
                <default type="wrappable"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureDefaultInterceptorForTypeWithVirtualMethodInterceptor">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="virtualMethod">
                <default type="wrappableVirtual"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureInterceptorForType">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy">
                <key type="wrappable"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureInterceptorForTypeAndName">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy">
                <key type="wrappable" name="name"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanConfigureSeveralInterceptors">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy">
                <key type="wrappable"/>
                <key type="wrappable" name="name"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanMixDefaultAndNonDefaultInterceptors">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy">
                <default type="wrappable"/>
                <key type="wrappableWithProperty"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanMixTransparentProxyAndVirtualMethodInterceptors">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy">
                <default type="wrappable"/>
              </interceptor>
              <interceptor type="virtualMethod">
                <key type="wrappableVirtual" name="name"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>

      <container name="CanSpecifyInterceptorWithTypeConverter">
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <extensionConfig>
          <add name="interception"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="transparentProxy" value="source value" typeConverter="Microsoft.Practices.Unity.InterceptionExtension.Configuration.Tests.MyTransparentProxyInterceptorTypeConverter, Tests.Unity.Interception.Configuration">
                <default type="wrappable"/>
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>
    </containers>
  </unity>
</configuration>