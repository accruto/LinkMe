<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithGenericWithTypeAndGenericParameterName" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithGenericWithNonDependencyValue" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithWithNeitherTypeNorGenericParameter" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithDependencyValueWithTypeForGenericMethodParameter" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithGenericWithTypeAndGenericParameterNameForProperty" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithGenericWithNonDependencyValueForProperty" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="unityWithWithNeitherTypeNorGenericParameterForProperty" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>

  <unity>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Microsoft.Practices.Unity.Configuration.Tests.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
      <typeAlias alias="GenericWithProperty" type="Microsoft.Practices.Unity.Configuration.Tests.ObjectWithOneProperty`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterConstructor">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value" genericParameterName="T">
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="oneDependencyParameterConstructorWithEmptyDependencyValue">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value" genericParameterName="T">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="oneDependencyParameterWithInstanceNameConstructor">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value" genericParameterName="T">
                  <dependency name="special"/>
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="injectionProperty">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericWithProperty">
            <typeConfig>
              <property name="Value" genericParameterName="T" />
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="injectionPropertyWithNamedInstance">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericWithProperty">
            <typeConfig>
              <property name="Value" genericParameterName="T">
                <dependency name="special" />
              </property>
            </typeConfig>
          </type>
        </types>
      </container>

    </containers>
  </unity>

  <unityWithGenericWithTypeAndGenericParameterName>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value" genericParameterName="T" parameterType="ILogger">
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithGenericWithTypeAndGenericParameterName>

  <unityWithGenericWithNonDependencyValue>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value" genericParameterName="T">
                  <value/>
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithGenericWithNonDependencyValue>

  <unityWithWithNeitherTypeNorGenericParameter>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithWithNeitherTypeNorGenericParameter>

  <unityWithDependencyValueWithTypeForGenericMethodParameter>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericDependentConstructor">
            <typeConfig>
              <constructor>
                <param name="value" genericParameterName="T">
                  <dependency type="ILogger"/>
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithDependencyValueWithTypeForGenericMethodParameter>

  <unityWithGenericWithTypeAndGenericParameterNameForProperty>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericWithProperty">
            <typeConfig>
              <property name="Value" genericParameterName="T" propertyType="ILogger">
                <dependency name="special" />
              </property>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithGenericWithTypeAndGenericParameterNameForProperty>

  <unityWithGenericWithNonDependencyValueForProperty>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericWithProperty">
            <typeConfig>
              <property name="Value" genericParameterName="T">
                <value />
              </property>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithGenericWithNonDependencyValueForProperty>

  <unityWithWithNeitherTypeNorGenericParameterForProperty>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />

      <typeAlias alias="GenericDependentConstructor" type="Tests.Unity.Configuration.ObjectWithOneConstructorDependency`1, Tests.Unity.Configuration" />
    </typeAliases>

    <containers>
      <container name="oneDependencyParameterWithBothParamterTypeAndGenericParameterName">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="GenericWithProperty">
            <typeConfig>
              <property name="Value" />
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unityWithWithNeitherTypeNorGenericParameterForProperty>
</configuration>
