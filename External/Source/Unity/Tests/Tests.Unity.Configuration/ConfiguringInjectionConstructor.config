<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>

    <typeAliases>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="int" type="System.Int32, mscorlib" />
      <typeAlias alias="ILogger" type="Microsoft.Practices.Unity.TestSupport.ILogger, TestSupport.Unity" />
      <typeAlias alias="MockLogger" type="Microsoft.Practices.Unity.TestSupport.MockLogger, TestSupport.Unity" />
      <typeAlias alias="SpecialLogger" type="Microsoft.Practices.Unity.TestSupport.SpecialLogger, TestSupport.Unity" />
      <typeAlias alias="DependentConstructor" type="Microsoft.Practices.Unity.TestSupport.ObjectWithOneConstructorDependency, TestSupport.Unity" />
      <typeAlias alias="TwoConstructorArgs" type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoConstructorParameters, TestSupport.Unity" />
      <typeAlias alias="MockDatabase" type="Microsoft.Practices.Unity.TestSupport.MockDatabase, TestSupport.Unity" />
    </typeAliases>

    <containers>

      <container name="defaultConstructor">
        <types>
          <type type="MockDatabase">
            <typeConfig>
              <constructor />
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="oneParameterConstructor">
        <types>
          <type type="MockDatabase">
            <typeConfig>
              <constructor>
                <param name="connectionString" parameterType="string">
                  <value value="Northwind" />
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="oneDependencyParameterConstructor">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="DependentConstructor">
            <typeConfig>
              <constructor>
                <param name="Logger" parameterType="ILogger">
                  <dependency name="special" />
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="twoConstructorParameters">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="TwoConstructorArgs">
            <typeConfig>
              <constructor>
                <param name="connectionString" parameterType="string">
                  <value value="AdventureWorks"/>
                </param>
                <param name="Logger" parameterType="ILogger">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="injectionProperty">
        <types>
          <type type="ILogger" mapTo="MockLogger" />
          <type type="ILogger" mapTo="SpecialLogger" name="special" />
          <type type="Microsoft.Practices.Unity.TestSupport.ObjectUsingLogger, TestSupport.Unity">
            <typeConfig>
              <property name="Logger" propertyType="ILogger" />
            </typeConfig>
          </type>
        </types>
      </container>

      <container name="multipleProperties">
        <types>
          <type type="ILogger" mapTo="MockLogger" />

          <type type="ILogger" mapTo="SpecialLogger" name="special" />

          <type type="Microsoft.Practices.Unity.TestSupport.ObjectWithTwoProperties, TestSupport.Unity">

            <typeConfig>

              <property name="Obj1" propertyType="System.Object, mscorlib">
                <dependency type="ILogger" name="special" />
              </property>

              <property name="Obj2" propertyType="System.Object, mscorlib">
                <value value="Hello" />
              </property>

            </typeConfig>
          </type>

        </types>

      </container>

      <container name="method">
        <types>
          <type type="ILogger" mapTo="MockLogger" />

          <type type="Microsoft.Practices.Unity.TestSupport.ObjectWithInjectionMethod, TestSupport.Unity">

            <typeConfig>

              <method name="Initialize">
                <param name="connectionString" parameterType="string">
                  <value value="contoso"/>
                </param>
                <param name="logger" parameterType="ILogger">
                  <dependency />
                </param>
              </method>
            </typeConfig>
          </type>

        </types>

      </container>

      <container name="method-multi">
        <types>
          <type type="ILogger" mapTo="MockLogger" />

          <type type="Microsoft.Practices.Unity.Configuration.Tests.ObjectWithOverloadedInjectionMethod, Tests.Unity.Configuration">

            <typeConfig>
              <method name="Initialize">
                <param name="connectionString" parameterType="string">
                  <value value="contoso"/>
                </param>
              </method>
              <method name="Initialize" key="second">
                <param name="connectionString" parameterType="string">
                  <value value="northwind"/>
                </param>
              </method>
              <method name="Initialize" key="third">
                <param name="connectionString" parameterType="string">
                  <value value="AdventureWorks"/>
                </param>
              </method>
            </typeConfig>
          </type>

        </types>

      </container>

      <container name="method-overload">
        <types>
          <type type="ILogger" mapTo="MockLogger" />

          <type type="Microsoft.Practices.Unity.Configuration.Tests.ObjectWithOverloadedInjectionMethod, Tests.Unity.Configuration">

            <typeConfig>
              <method name="Initialize">
                <param name="connectionString" parameterType="string">
                  <value value="contoso"/>
                </param>
              </method>
              <method name="Initialize" key="second">
                <param name="connectionString" parameterType="int">
                  <value value="14" type="int"/>
                </param>
              </method>
              <method name="Initialize" key="third">
                <param name="connectionString" parameterType="string">
                  <value value="AdventureWorks"/>
                </param>
              </method>
              <method name="Initialize" key="fourth">
                <param name="connectionString" parameterType="int">
                  <value value="42" type="int"/>
                </param>
              </method>
            </typeConfig>
          </type>

        </types>

      </container>

      <container name="injectNamed">
        <types>
          <type type="MockDatabase">
            <typeConfig>
              <constructor>
                <param name="connectionString" parameterType="string">
                  <value value="contoso" />
                </param>
              </constructor>
            </typeConfig>
          </type>

          <type type="MockDatabase" name="Northwind">
            <typeConfig>
              <constructor>
                <param name="connectionString" parameterType="string">
                  <value value="Northwind" />
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>

  </unity>

</configuration>
